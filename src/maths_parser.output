Terminals unused in grammar

    T_VARIABLE
    INC_OP
    DEC_OP
    LEFTSHIFT_OP
    RIGHTSHIFT_OP
    LE_OP
    GE_OP
    EQ_OP
    NE_OP
    AND_OP
    OR_OP
    PTR_OP
    T_TIMES
    T_DIVIDE
    T_PLUS
    T_MINUS


Grammar

    0 $accept: ROOT $end

    1 ROOT: TOPLEVEL

    2 TOPLEVEL: TYPE FUNCTION_NAME_ARGS '{' STATEMENT_LINES '}'

    3 FUNCTION_NAME_ARGS: T_IDENTIFIER '(' ')'

    4 STATEMENT_LINES: LINE ';'
    5                | STATEMENT_LINES LINE ';'

    6 LINE: ASSIGN_DECLARE
    7     | T_RETURN STATEMENT

    8 STATEMENT: MATHS_STATEMENT

    9 ASSIGN_DECLARE: TYPE ASSIGN

   10 ASSIGN: T_IDENTIFIER assignment_operator STATEMENT

   11 assignment_operator: '='
   12                    | MUL_ASSIGN
   13                    | DIV_ASSIGN
   14                    | MOD_ASSIGN
   15                    | ADD_ASSIGN
   16                    | SUB_ASSIGN
   17                    | LEFTSHIFT_ASSIGN
   18                    | RIGHTSHIFT_ASSIGN
   19                    | AND_ASSIGN
   20                    | XOR_ASSIGN
   21                    | OR_ASSIGN

   22 TYPE: T_INT
   23     | T_VOID

   24 MATHS_STATEMENT: MATHS_STATEMENT '+' TERM
   25                | MATHS_STATEMENT '-' TERM
   26                | TERM

   27 TERM: TERM '*' UNARY
   28     | TERM '/' UNARY
   29     | UNARY

   30 UNARY: '-' FACTOR
   31      | FACTOR

   32 FACTOR: T_IDENTIFIER
   33       | T_NUMBER
   34       | '(' MATHS_STATEMENT ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 34
    ')' (41) 3 34
    '*' (42) 27
    '+' (43) 24
    '-' (45) 25 30
    '/' (47) 28
    ';' (59) 4 5
    '=' (61) 11
    '{' (123) 2
    '}' (125) 2
    error (256)
    T_INT <string> (258) 22
    T_VOID <string> (259) 23
    T_IDENTIFIER <string> (260) 3 10 32
    T_RETURN <expr> (261) 7
    T_NUMBER <number> (262) 33
    T_VARIABLE (263)
    MUL_ASSIGN (264) 12
    DIV_ASSIGN (265) 13
    MOD_ASSIGN (266) 14
    ADD_ASSIGN (267) 15
    SUB_ASSIGN (268) 16
    LEFTSHIFT_ASSIGN (269) 17
    RIGHTSHIFT_ASSIGN (270) 18
    AND_ASSIGN (271) 19
    XOR_ASSIGN (272) 20
    OR_ASSIGN (273) 21
    INC_OP (274)
    DEC_OP (275)
    LEFTSHIFT_OP (276)
    RIGHTSHIFT_OP (277)
    LE_OP (278)
    GE_OP (279)
    EQ_OP (280)
    NE_OP (281)
    AND_OP (282)
    OR_OP (283)
    PTR_OP (284)
    T_TIMES (285)
    T_DIVIDE (286)
    T_PLUS (287)
    T_MINUS (288)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    ROOT (45)
        on left: 1
        on right: 0
    TOPLEVEL <expr> (46)
        on left: 2
        on right: 1
    FUNCTION_NAME_ARGS <expr> (47)
        on left: 3
        on right: 2
    STATEMENT_LINES <exprList> (48)
        on left: 4 5
        on right: 2 5
    LINE <expr> (49)
        on left: 6 7
        on right: 4 5
    STATEMENT <expr> (50)
        on left: 8
        on right: 7 10
    ASSIGN_DECLARE <expr> (51)
        on left: 9
        on right: 6
    ASSIGN <expr> (52)
        on left: 10
        on right: 9
    assignment_operator <string> (53)
        on left: 11 12 13 14 15 16 17 18 19 20 21
        on right: 10
    TYPE <string> (54)
        on left: 22 23
        on right: 2 9
    MATHS_STATEMENT <expr> (55)
        on left: 24 25 26
        on right: 8 24 25 34
    TERM <expr> (56)
        on left: 27 28 29
        on right: 24 25 26 27 28
    UNARY <expr> (57)
        on left: 30 31
        on right: 27 28 29
    FACTOR <expr> (58)
        on left: 32 33 34
        on right: 30 31


State 0

    0 $accept: . ROOT $end

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    ROOT      go to state 3
    TOPLEVEL  go to state 4
    TYPE      go to state 5


State 1

   22 TYPE: T_INT .

    $default  reduce using rule 22 (TYPE)


State 2

   23 TYPE: T_VOID .

    $default  reduce using rule 23 (TYPE)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 6


State 4

    1 ROOT: TOPLEVEL .

    $default  reduce using rule 1 (ROOT)


State 5

    2 TOPLEVEL: TYPE . FUNCTION_NAME_ARGS '{' STATEMENT_LINES '}'

    T_IDENTIFIER  shift, and go to state 7

    FUNCTION_NAME_ARGS  go to state 8


State 6

    0 $accept: ROOT $end .

    $default  accept


State 7

    3 FUNCTION_NAME_ARGS: T_IDENTIFIER . '(' ')'

    '('  shift, and go to state 9


State 8

    2 TOPLEVEL: TYPE FUNCTION_NAME_ARGS . '{' STATEMENT_LINES '}'

    '{'  shift, and go to state 10


State 9

    3 FUNCTION_NAME_ARGS: T_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 11


State 10

    2 TOPLEVEL: TYPE FUNCTION_NAME_ARGS '{' . STATEMENT_LINES '}'

    T_INT     shift, and go to state 1
    T_VOID    shift, and go to state 2
    T_RETURN  shift, and go to state 12

    STATEMENT_LINES  go to state 13
    LINE             go to state 14
    ASSIGN_DECLARE   go to state 15
    TYPE             go to state 16


State 11

    3 FUNCTION_NAME_ARGS: T_IDENTIFIER '(' ')' .

    $default  reduce using rule 3 (FUNCTION_NAME_ARGS)


State 12

    7 LINE: T_RETURN . STATEMENT

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    STATEMENT        go to state 21
    MATHS_STATEMENT  go to state 22
    TERM             go to state 23
    UNARY            go to state 24
    FACTOR           go to state 25


State 13

    2 TOPLEVEL: TYPE FUNCTION_NAME_ARGS '{' STATEMENT_LINES . '}'
    5 STATEMENT_LINES: STATEMENT_LINES . LINE ';'

    T_INT     shift, and go to state 1
    T_VOID    shift, and go to state 2
    T_RETURN  shift, and go to state 12
    '}'       shift, and go to state 26

    LINE            go to state 27
    ASSIGN_DECLARE  go to state 15
    TYPE            go to state 16


State 14

    4 STATEMENT_LINES: LINE . ';'

    ';'  shift, and go to state 28


State 15

    6 LINE: ASSIGN_DECLARE .

    $default  reduce using rule 6 (LINE)


State 16

    9 ASSIGN_DECLARE: TYPE . ASSIGN

    T_IDENTIFIER  shift, and go to state 29

    ASSIGN  go to state 30


State 17

   32 FACTOR: T_IDENTIFIER .

    $default  reduce using rule 32 (FACTOR)


State 18

   33 FACTOR: T_NUMBER .

    $default  reduce using rule 33 (FACTOR)


State 19

   34 FACTOR: '(' . MATHS_STATEMENT ')'

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    MATHS_STATEMENT  go to state 31
    TERM             go to state 23
    UNARY            go to state 24
    FACTOR           go to state 25


State 20

   30 UNARY: '-' . FACTOR

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19

    FACTOR  go to state 32


State 21

    7 LINE: T_RETURN STATEMENT .

    $default  reduce using rule 7 (LINE)


State 22

    8 STATEMENT: MATHS_STATEMENT .
   24 MATHS_STATEMENT: MATHS_STATEMENT . '+' TERM
   25                | MATHS_STATEMENT . '-' TERM

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34

    $default  reduce using rule 8 (STATEMENT)


State 23

   26 MATHS_STATEMENT: TERM .
   27 TERM: TERM . '*' UNARY
   28     | TERM . '/' UNARY

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 26 (MATHS_STATEMENT)


State 24

   29 TERM: UNARY .

    $default  reduce using rule 29 (TERM)


State 25

   31 UNARY: FACTOR .

    $default  reduce using rule 31 (UNARY)


State 26

    2 TOPLEVEL: TYPE FUNCTION_NAME_ARGS '{' STATEMENT_LINES '}' .

    $default  reduce using rule 2 (TOPLEVEL)


State 27

    5 STATEMENT_LINES: STATEMENT_LINES LINE . ';'

    ';'  shift, and go to state 37


State 28

    4 STATEMENT_LINES: LINE ';' .

    $default  reduce using rule 4 (STATEMENT_LINES)


State 29

   10 ASSIGN: T_IDENTIFIER . assignment_operator STATEMENT

    MUL_ASSIGN         shift, and go to state 38
    DIV_ASSIGN         shift, and go to state 39
    MOD_ASSIGN         shift, and go to state 40
    ADD_ASSIGN         shift, and go to state 41
    SUB_ASSIGN         shift, and go to state 42
    LEFTSHIFT_ASSIGN   shift, and go to state 43
    RIGHTSHIFT_ASSIGN  shift, and go to state 44
    AND_ASSIGN         shift, and go to state 45
    XOR_ASSIGN         shift, and go to state 46
    OR_ASSIGN          shift, and go to state 47
    '='                shift, and go to state 48

    assignment_operator  go to state 49


State 30

    9 ASSIGN_DECLARE: TYPE ASSIGN .

    $default  reduce using rule 9 (ASSIGN_DECLARE)


State 31

   24 MATHS_STATEMENT: MATHS_STATEMENT . '+' TERM
   25                | MATHS_STATEMENT . '-' TERM
   34 FACTOR: '(' MATHS_STATEMENT . ')'

    ')'  shift, and go to state 50
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34


State 32

   30 UNARY: '-' FACTOR .

    $default  reduce using rule 30 (UNARY)


State 33

   24 MATHS_STATEMENT: MATHS_STATEMENT '+' . TERM

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    TERM    go to state 51
    UNARY   go to state 24
    FACTOR  go to state 25


State 34

   25 MATHS_STATEMENT: MATHS_STATEMENT '-' . TERM

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    TERM    go to state 52
    UNARY   go to state 24
    FACTOR  go to state 25


State 35

   27 TERM: TERM '*' . UNARY

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    UNARY   go to state 53
    FACTOR  go to state 25


State 36

   28 TERM: TERM '/' . UNARY

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    UNARY   go to state 54
    FACTOR  go to state 25


State 37

    5 STATEMENT_LINES: STATEMENT_LINES LINE ';' .

    $default  reduce using rule 5 (STATEMENT_LINES)


State 38

   12 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 12 (assignment_operator)


State 39

   13 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 13 (assignment_operator)


State 40

   14 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 14 (assignment_operator)


State 41

   15 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 15 (assignment_operator)


State 42

   16 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 16 (assignment_operator)


State 43

   17 assignment_operator: LEFTSHIFT_ASSIGN .

    $default  reduce using rule 17 (assignment_operator)


State 44

   18 assignment_operator: RIGHTSHIFT_ASSIGN .

    $default  reduce using rule 18 (assignment_operator)


State 45

   19 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 19 (assignment_operator)


State 46

   20 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 20 (assignment_operator)


State 47

   21 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 21 (assignment_operator)


State 48

   11 assignment_operator: '=' .

    $default  reduce using rule 11 (assignment_operator)


State 49

   10 ASSIGN: T_IDENTIFIER assignment_operator . STATEMENT

    T_IDENTIFIER  shift, and go to state 17
    T_NUMBER      shift, and go to state 18
    '('           shift, and go to state 19
    '-'           shift, and go to state 20

    STATEMENT        go to state 55
    MATHS_STATEMENT  go to state 22
    TERM             go to state 23
    UNARY            go to state 24
    FACTOR           go to state 25


State 50

   34 FACTOR: '(' MATHS_STATEMENT ')' .

    $default  reduce using rule 34 (FACTOR)


State 51

   24 MATHS_STATEMENT: MATHS_STATEMENT '+' TERM .
   27 TERM: TERM . '*' UNARY
   28     | TERM . '/' UNARY

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 24 (MATHS_STATEMENT)


State 52

   25 MATHS_STATEMENT: MATHS_STATEMENT '-' TERM .
   27 TERM: TERM . '*' UNARY
   28     | TERM . '/' UNARY

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 25 (MATHS_STATEMENT)


State 53

   27 TERM: TERM '*' UNARY .

    $default  reduce using rule 27 (TERM)


State 54

   28 TERM: TERM '/' UNARY .

    $default  reduce using rule 28 (TERM)


State 55

   10 ASSIGN: T_IDENTIFIER assignment_operator STATEMENT .

    $default  reduce using rule 10 (ASSIGN)
