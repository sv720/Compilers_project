Nonterminals useless in grammar

    init_declarator_list
    translation_unit
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    struct_declarator_list
    struct_declarator


Terminals unused in grammar

    STRING_LITERAL
    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS


Rules useless in grammar

  181 translation_unit: external_declaration
  182                 | translation_unit external_declaration

  183 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  184                          | struct_or_union '{' struct_declaration_list '}'
  185                          | struct_or_union IDENTIFIER

  186 struct_or_union: STRUCT
  187                | UNION

  188 struct_declaration_list: struct_declaration
  189                        | struct_declaration_list struct_declaration

  190 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  191 struct_declarator_list: struct_declarator
  192                       | struct_declarator_list ',' struct_declarator

  193 struct_declarator: declarator
  194                  | ':' constant_expression
  195                  | declarator ':' constant_expression


State 292 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: external_declaration

    2 external_declaration: function_definition
    3                     | declaration

    4 function_definition: declaration_specifiers declarator compound_statement
    5                    | declarator

    6 declarator: pointer direct_declarator
    7           | direct_declarator

    8 direct_declarator: IDENTIFIER
    9                  | '(' declarator ')'
   10                  | direct_declarator '[' constant_expression ']'
   11                  | direct_declarator '(' parameter_list ')'
   12                  | direct_declarator '(' identifier_list ')'
   13                  | direct_declarator '(' ')'

   14 parameter_list: parameter_declaration
   15               | parameter_list ',' parameter_declaration

   16 parameter_declaration: declaration_specifiers declarator
   17                      | declaration_specifiers abstract_declarator
   18                      | declaration_specifiers

   19 declaration: declaration_specifiers ';'
   20            | declaration_specifiers init_declarator ';'

   21 declaration_specifiers: type_specifier
   22                       | type_specifier declaration_specifiers
   23                       | TYPEDEF
   24                       | TYPEDEF declaration_specifiers

   25 init_declarator: declarator
   26                | declarator '=' initializer

   27 initializer: assignment_expression
   28            | '{' initializer_list '}'
   29            | '{' initializer_list ',' '}'

   30 initializer_list: initializer
   31                 | initializer_list ',' initializer

   32 abstract_declarator: pointer
   33                    | direct_abstract_declarator
   34                    | pointer direct_abstract_declarator

   35 direct_abstract_declarator: '(' abstract_declarator ')'
   36                           | '[' ']'
   37                           | '[' constant_expression ']'
   38                           | direct_abstract_declarator '[' ']'
   39                           | direct_abstract_declarator '[' constant_expression ']'
   40                           | '(' ')'
   41                           | '(' parameter_list ')'
   42                           | direct_abstract_declarator '(' ')'
   43                           | direct_abstract_declarator '(' parameter_list ')'

   44 compound_statement: '{' '}'
   45                   | '{' statement_list '}'
   46                   | '{' declaration_list '}'
   47                   | '{' declaration_list statement_list '}'

   48 declaration_list: declaration
   49                 | declaration_list declaration

   50 statement_list: statement
   51               | statement_list statement

   52 statement: labeled_statement
   53          | expression_statement
   54          | selection_statement
   55          | iteration_statement
   56          | jump_statement
   57          | compound_statement

   58 labeled_statement: IDENTIFIER ':' statement
   59                  | CASE constant_expression ':' statement
   60                  | DEFAULT ':' statement

   61 expression_statement: ';'
   62                     | expression ';'

   63 selection_statement: IF '(' expression ')' statement
   64                    | IF '(' expression ')' statement ELSE statement
   65                    | SWITCH '(' expression ')' statement

   66 iteration_statement: WHILE '(' expression ')' statement
   67                    | DO statement WHILE '(' expression ')' ';'
   68                    | FOR '(' expression_statement expression_statement ')' statement
   69                    | FOR '(' expression_statement expression_statement expression ')' statement

   70 jump_statement: GOTO IDENTIFIER ';'
   71               | CONTINUE ';'
   72               | BREAK ';'
   73               | RETURN ';'
   74               | RETURN expression ';'

   75 primary_expression: IDENTIFIER
   76                   | INT_LITERAL
   77                   | '(' expression ')'

   78 postfix_expression: primary_expression
   79                   | postfix_expression '[' expression ']'
   80                   | postfix_expression '(' ')'
   81                   | postfix_expression '(' argument_expression_list ')'
   82                   | postfix_expression '.' IDENTIFIER
   83                   | postfix_expression POINTER_OP IDENTIFIER
   84                   | postfix_expression INCREMENT_OP
   85                   | postfix_expression DECREMENT_OP

   86 argument_expression_list: assignment_expression
   87                         | argument_expression_list ',' assignment_expression

   88 unary_expression: postfix_expression
   89                 | INCREMENT_OP unary_expression
   90                 | DECREMENT_OP unary_expression
   91                 | unary_operator cast_expression
   92                 | SIZEOF unary_expression
   93                 | SIZEOF '(' type_name ')'

   94 unary_operator: '&'
   95               | '*'
   96               | '+'
   97               | '-'
   98               | '~'
   99               | '!'

  100 cast_expression: unary_expression
  101                | '(' type_name ')' cast_expression

  102 multiplicative_expression: cast_expression
  103                          | multiplicative_expression '*' cast_expression
  104                          | multiplicative_expression '/' cast_expression
  105                          | multiplicative_expression '%' cast_expression

  106 additive_expression: multiplicative_expression
  107                    | additive_expression '+' multiplicative_expression
  108                    | additive_expression '-' multiplicative_expression

  109 shift_expression: additive_expression
  110                 | shift_expression LEFTSHIFT_OP additive_expression
  111                 | shift_expression RIGHTSHIFT_OP additive_expression

  112 relational_expression: shift_expression
  113                      | relational_expression '<' shift_expression
  114                      | relational_expression '>' shift_expression
  115                      | relational_expression LE_OP shift_expression
  116                      | relational_expression GE_OP shift_expression

  117 equality_expression: relational_expression
  118                    | equality_expression EQ_OP relational_expression
  119                    | equality_expression NE_OP relational_expression

  120 and_expression: equality_expression
  121               | and_expression '&' equality_expression

  122 exclusive_or_expression: and_expression
  123                        | exclusive_or_expression '^' and_expression

  124 inclusive_or_expression: exclusive_or_expression
  125                        | inclusive_or_expression '|' exclusive_or_expression

  126 logical_and_expression: inclusive_or_expression
  127                       | logical_and_expression AND_OP inclusive_or_expression

  128 logical_or_expression: logical_and_expression
  129                      | logical_or_expression OR_OP logical_and_expression

  130 conditional_expression: logical_or_expression
  131                       | logical_or_expression '?' expression ':' conditional_expression

  132 assignment_expression: conditional_expression
  133                      | unary_expression assignment_operator assignment_expression

  134 assignment_operator: '='
  135                    | MUL_ASSIGN
  136                    | DIV_ASSIGN
  137                    | MOD_ASSIGN
  138                    | ADD_ASSIGN
  139                    | SUB_ASSIGN
  140                    | LEFTSHIFT_ASSIGN
  141                    | RIGHTSHIFT_ASSIGN
  142                    | AND_ASSIGN
  143                    | XOR_ASSIGN
  144                    | OR_ASSIGN

  145 expression: assignment_expression
  146           | expression ',' assignment_expression

  147 constant_expression: conditional_expression

  148 type_specifier: VOID
  149               | CHAR
  150               | SHORT
  151               | INT
  152               | LONG
  153               | FLOAT
  154               | DOUBLE
  155               | SIGNED
  156               | UNSIGNED
  157               | enum_specifier

  158 specifier_qualifier_list: type_specifier specifier_qualifier_list
  159                         | type_specifier
  160                         | type_qualifier specifier_qualifier_list
  161                         | type_qualifier

  162 enum_specifier: ENUM '{' enumerator_list '}'
  163               | ENUM IDENTIFIER '{' enumerator_list '}'
  164               | ENUM IDENTIFIER

  165 enumerator_list: enumerator
  166                | enumerator_list ',' enumerator

  167 enumerator: IDENTIFIER
  168           | IDENTIFIER '=' constant_expression

  169 type_qualifier: CONST
  170               | VOLATILE

  171 pointer: '*'
  172        | '*' type_qualifier_list
  173        | '*' pointer
  174        | '*' type_qualifier_list pointer

  175 type_qualifier_list: type_qualifier
  176                    | type_qualifier_list type_qualifier

  177 identifier_list: IDENTIFIER
  178                | identifier_list ',' IDENTIFIER

  179 type_name: specifier_qualifier_list
  180          | specifier_qualifier_list abstract_declarator


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 99
    '%' (37) 105
    '&' (38) 94 121
    '(' (40) 9 11 12 13 35 40 41 42 43 63 64 65 66 67 68 69 77 80 81 93 101
    ')' (41) 9 11 12 13 35 40 41 42 43 63 64 65 66 67 68 69 77 80 81 93 101
    '*' (42) 95 103 171 172 173 174
    '+' (43) 96 107
    ',' (44) 15 29 31 87 146 166 178
    '-' (45) 97 108
    '.' (46) 82
    '/' (47) 104
    ':' (58) 58 59 60 131
    ';' (59) 19 20 61 62 67 70 71 72 73 74
    '<' (60) 113
    '=' (61) 26 134 168
    '>' (62) 114
    '?' (63) 131
    '[' (91) 10 36 37 38 39 79
    ']' (93) 10 36 37 38 39 79
    '^' (94) 123
    '{' (123) 28 29 44 45 46 47 162 163
    '|' (124) 125
    '}' (125) 28 29 44 45 46 47 162 163
    '~' (126) 98
    error (256)
    IDENTIFIER <string> (258) 8 58 70 75 82 83 163 164 167 168 177 178
    INT_LITERAL <number> (259) 76
    STRING_LITERAL (260)
    SIZEOF (261) 92 93
    POINTER_OP (262) 83
    INCREMENT_OP (263) 84 89
    DECREMENT_OP (264) 85 90
    LEFTSHIFT_OP (265) 110
    RIGHTSHIFT_OP (266) 111
    LE_OP (267) 115
    GE_OP (268) 116
    EQ_OP (269) 118
    NE_OP (270) 119
    AND_OP (271) 127
    OR_OP (272) 129
    MUL_ASSIGN (273) 135
    DIV_ASSIGN (274) 136
    MOD_ASSIGN (275) 137
    ADD_ASSIGN (276) 138
    SUB_ASSIGN (277) 139
    LEFTSHIFT_ASSIGN (278) 140
    RIGHTSHIFT_ASSIGN (279) 141
    AND_ASSIGN (280) 142
    XOR_ASSIGN (281) 143
    OR_ASSIGN (282) 144
    TYPE_NAME (283)
    TYPEDEF (284) 23 24
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 149
    SHORT (290) 150
    INT (291) 151
    LONG (292) 152
    SIGNED (293) 155
    UNSIGNED (294) 156
    FLOAT (295) 153
    DOUBLE (296) 154
    CONST (297) 169
    VOLATILE (298) 170
    VOID (299) 148
    STRUCT (300)
    UNION (301)
    ENUM (302) 162 163 164
    ELLIPSIS (303)
    CASE (304) 59
    DEFAULT (305) 60
    IF (306) 63 64
    ELSE (307) 64
    SWITCH (308) 65
    WHILE (309) 66 67
    DO (310) 67
    FOR (311) 68 69
    GOTO (312) 70
    CONTINUE (313) 71
    BREAK (314) 72
    RETURN (315) 73 74


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    ROOT (86)
        on left: 1
        on right: 0
    external_declaration <expr> (87)
        on left: 2 3
        on right: 1
    function_definition <expr> (88)
        on left: 4 5
        on right: 2
    declarator <expr> (89)
        on left: 6 7
        on right: 4 5 9 16 25 26
    direct_declarator <expr> (90)
        on left: 8 9 10 11 12 13
        on right: 6 7 10 11 12 13
    parameter_list <exprList> (91)
        on left: 14 15
        on right: 11 15 41 43
    parameter_declaration <expr> (92)
        on left: 16 17 18
        on right: 14 15
    declaration <expr> (93)
        on left: 19 20
        on right: 3 48 49
    declaration_specifiers <string> (94)
        on left: 21 22 23 24
        on right: 4 16 17 18 19 20 22 24
    init_declarator <expr> (95)
        on left: 25 26
        on right: 20
    initializer <expr> (96)
        on left: 27 28 29
        on right: 26 30 31
    initializer_list <exprList> (97)
        on left: 30 31
        on right: 28 29 31
    abstract_declarator <expr> (98)
        on left: 32 33 34
        on right: 17 35 180
    direct_abstract_declarator <expr> (99)
        on left: 35 36 37 38 39 40 41 42 43
        on right: 33 34 38 39 42 43
    compound_statement <expr> (100)
        on left: 44 45 46 47
        on right: 4 57
    declaration_list <exprList> (101)
        on left: 48 49
        on right: 46 47 49
    statement_list <exprList> (102)
        on left: 50 51
        on right: 45 47 51
    statement <expr> (103)
        on left: 52 53 54 55 56 57
        on right: 50 51 58 59 60 63 64 65 66 67 68 69
    labeled_statement <expr> (104)
        on left: 58 59 60
        on right: 52
    expression_statement <expr> (105)
        on left: 61 62
        on right: 53 68 69
    selection_statement <expr> (106)
        on left: 63 64 65
        on right: 54
    iteration_statement <expr> (107)
        on left: 66 67 68 69
        on right: 55
    jump_statement <expr> (108)
        on left: 70 71 72 73 74
        on right: 56
    primary_expression <expr> (109)
        on left: 75 76 77
        on right: 78
    postfix_expression <expr> (110)
        on left: 78 79 80 81 82 83 84 85
        on right: 79 80 81 82 83 84 85 88
    argument_expression_list <exprList> (111)
        on left: 86 87
        on right: 81 87
    unary_expression <expr> (112)
        on left: 88 89 90 91 92 93
        on right: 89 90 92 100 133
    unary_operator (113)
        on left: 94 95 96 97 98 99
        on right: 91
    cast_expression <expr> (114)
        on left: 100 101
        on right: 91 101 102 103 104 105
    multiplicative_expression <expr> (115)
        on left: 102 103 104 105
        on right: 103 104 105 106 107 108
    additive_expression <expr> (116)
        on left: 106 107 108
        on right: 107 108 109 110 111
    shift_expression <expr> (117)
        on left: 109 110 111
        on right: 110 111 112 113 114 115 116
    relational_expression <expr> (118)
        on left: 112 113 114 115 116
        on right: 113 114 115 116 117 118 119
    equality_expression <expr> (119)
        on left: 117 118 119
        on right: 118 119 120 121
    and_expression <expr> (120)
        on left: 120 121
        on right: 121 122 123
    exclusive_or_expression <expr> (121)
        on left: 122 123
        on right: 123 124 125
    inclusive_or_expression <expr> (122)
        on left: 124 125
        on right: 125 126 127
    logical_and_expression <expr> (123)
        on left: 126 127
        on right: 127 128 129
    logical_or_expression <expr> (124)
        on left: 128 129
        on right: 129 130 131
    conditional_expression <expr> (125)
        on left: 130 131
        on right: 131 132 147
    assignment_expression <expr> (126)
        on left: 132 133
        on right: 27 86 87 133 145 146
    assignment_operator <string> (127)
        on left: 134 135 136 137 138 139 140 141 142 143 144
        on right: 133
    expression <expr> (128)
        on left: 145 146
        on right: 62 63 64 65 66 67 69 74 77 79 131 146
    constant_expression <expr> (129)
        on left: 147
        on right: 10 37 39 59 168
    type_specifier <string> (130)
        on left: 148 149 150 151 152 153 154 155 156 157
        on right: 21 22 158 159
    specifier_qualifier_list <exprList> (131)
        on left: 158 159 160 161
        on right: 158 160 179 180
    enum_specifier <expr> (132)
        on left: 162 163 164
        on right: 157
    enumerator_list <exprList> (133)
        on left: 165 166
        on right: 162 163 166
    enumerator <expr> (134)
        on left: 167 168
        on right: 165 166
    type_qualifier (135)
        on left: 169 170
        on right: 160 161 175 176
    pointer <expr> (136)
        on left: 171 172 173 174
        on right: 6 32 34 173 174
    type_qualifier_list (137)
        on left: 175 176
        on right: 172 174 176
    identifier_list <exprList> (138)
        on left: 177 178
        on right: 12 178
    type_name <expr> (139)
        on left: 179 180
        on right: 93 101


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '('         shift, and go to state 13
    '*'         shift, and go to state 14

    ROOT                    go to state 15
    external_declaration    go to state 16
    function_definition     go to state 17
    declarator              go to state 18
    direct_declarator       go to state 19
    declaration             go to state 20
    declaration_specifiers  go to state 21
    type_specifier          go to state 22
    enum_specifier          go to state 23
    pointer                 go to state 24


State 1

    8 direct_declarator: IDENTIFIER •

    $default  reduce using rule 8 (direct_declarator)


State 2

   23 declaration_specifiers: TYPEDEF •
   24                       | TYPEDEF • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 23 (declaration_specifiers)

    declaration_specifiers  go to state 25
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 3

  149 type_specifier: CHAR •

    $default  reduce using rule 149 (type_specifier)


State 4

  150 type_specifier: SHORT •

    $default  reduce using rule 150 (type_specifier)


State 5

  151 type_specifier: INT •

    $default  reduce using rule 151 (type_specifier)


State 6

  152 type_specifier: LONG •

    $default  reduce using rule 152 (type_specifier)


State 7

  155 type_specifier: SIGNED •

    $default  reduce using rule 155 (type_specifier)


State 8

  156 type_specifier: UNSIGNED •

    $default  reduce using rule 156 (type_specifier)


State 9

  153 type_specifier: FLOAT •

    $default  reduce using rule 153 (type_specifier)


State 10

  154 type_specifier: DOUBLE •

    $default  reduce using rule 154 (type_specifier)


State 11

  148 type_specifier: VOID •

    $default  reduce using rule 148 (type_specifier)


State 12

  162 enum_specifier: ENUM • '{' enumerator_list '}'
  163               | ENUM • IDENTIFIER '{' enumerator_list '}'
  164               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 26
    '{'         shift, and go to state 27


State 13

    9 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13
    '*'         shift, and go to state 14

    declarator         go to state 28
    direct_declarator  go to state 19
    pointer            go to state 24


State 14

  171 pointer: '*' •
  172        | '*' • type_qualifier_list
  173        | '*' • pointer
  174        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 14

    $default  reduce using rule 171 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 34


State 16

    1 ROOT: external_declaration •

    $default  reduce using rule 1 (ROOT)


State 17

    2 external_declaration: function_definition •

    $default  reduce using rule 2 (external_declaration)


State 18

    5 function_definition: declarator •

    $default  reduce using rule 5 (function_definition)


State 19

    7 declarator: direct_declarator •
   10 direct_declarator: direct_declarator • '[' constant_expression ']'
   11                  | direct_declarator • '(' parameter_list ')'
   12                  | direct_declarator • '(' identifier_list ')'
   13                  | direct_declarator • '(' ')'

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 7 (declarator)


State 20

    3 external_declaration: declaration •

    $default  reduce using rule 3 (external_declaration)


State 21

    4 function_definition: declaration_specifiers • declarator compound_statement
   19 declaration: declaration_specifiers • ';'
   20            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13
    ';'         shift, and go to state 37
    '*'         shift, and go to state 14

    declarator         go to state 38
    direct_declarator  go to state 19
    init_declarator    go to state 39
    pointer            go to state 24


State 22

   21 declaration_specifiers: type_specifier •
   22                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 21 (declaration_specifiers)

    declaration_specifiers  go to state 40
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 23

  157 type_specifier: enum_specifier •

    $default  reduce using rule 157 (type_specifier)


State 24

    6 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13

    direct_declarator  go to state 41


State 25

   24 declaration_specifiers: TYPEDEF declaration_specifiers •

    $default  reduce using rule 24 (declaration_specifiers)


State 26

  163 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  164               | ENUM IDENTIFIER •

    '{'  shift, and go to state 42

    $default  reduce using rule 164 (enum_specifier)


State 27

  162 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 43

    enumerator_list  go to state 44
    enumerator       go to state 45


State 28

    9 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 46


State 29

  169 type_qualifier: CONST •

    $default  reduce using rule 169 (type_qualifier)


State 30

  170 type_qualifier: VOLATILE •

    $default  reduce using rule 170 (type_qualifier)


State 31

  175 type_qualifier_list: type_qualifier •

    $default  reduce using rule 175 (type_qualifier_list)


State 32

  173 pointer: '*' pointer •

    $default  reduce using rule 173 (pointer)


State 33

  172 pointer: '*' type_qualifier_list •
  174        | '*' type_qualifier_list • pointer
  176 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 14

    $default  reduce using rule 172 (pointer)

    type_qualifier  go to state 47
    pointer         go to state 48


State 34

    0 $accept: ROOT $end •

    $default  accept


State 35

   11 direct_declarator: direct_declarator '(' • parameter_list ')'
   12                  | direct_declarator '(' • identifier_list ')'
   13                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 49
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    ')'         shift, and go to state 50

    parameter_list          go to state 51
    parameter_declaration   go to state 52
    declaration_specifiers  go to state 53
    type_specifier          go to state 22
    enum_specifier          go to state 23
    identifier_list         go to state 54


State 36

   10 direct_declarator: direct_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 83


State 37

   19 declaration: declaration_specifiers ';' •

    $default  reduce using rule 19 (declaration)


State 38

    4 function_definition: declaration_specifiers declarator • compound_statement
   25 init_declarator: declarator •
   26                | declarator • '=' initializer

    '='  shift, and go to state 84
    '{'  shift, and go to state 85

    $default  reduce using rule 25 (init_declarator)

    compound_statement  go to state 86


State 39

   20 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 87


State 40

   22 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 22 (declaration_specifiers)


State 41

    6 declarator: pointer direct_declarator •
   10 direct_declarator: direct_declarator • '[' constant_expression ']'
   11                  | direct_declarator • '(' parameter_list ')'
   12                  | direct_declarator • '(' identifier_list ')'
   13                  | direct_declarator • '(' ')'

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 6 (declarator)


State 42

  163 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 43

    enumerator_list  go to state 88
    enumerator       go to state 45


State 43

  167 enumerator: IDENTIFIER •
  168           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 89

    $default  reduce using rule 167 (enumerator)


State 44

  162 enum_specifier: ENUM '{' enumerator_list • '}'
  166 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 90
    '}'  shift, and go to state 91


State 45

  165 enumerator_list: enumerator •

    $default  reduce using rule 165 (enumerator_list)


State 46

    9 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 9 (direct_declarator)


State 47

  176 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 176 (type_qualifier_list)


State 48

  174 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 174 (pointer)


State 49

  177 identifier_list: IDENTIFIER •

    $default  reduce using rule 177 (identifier_list)


State 50

   13 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 13 (direct_declarator)


State 51

   11 direct_declarator: direct_declarator '(' parameter_list • ')'
   15 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 92
    ','  shift, and go to state 93


State 52

   14 parameter_list: parameter_declaration •

    $default  reduce using rule 14 (parameter_list)


State 53

   16 parameter_declaration: declaration_specifiers • declarator
   17                      | declaration_specifiers • abstract_declarator
   18                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 94
    '['         shift, and go to state 95
    '*'         shift, and go to state 14

    $default  reduce using rule 18 (parameter_declaration)

    declarator                  go to state 96
    direct_declarator           go to state 19
    abstract_declarator         go to state 97
    direct_abstract_declarator  go to state 98
    pointer                     go to state 99


State 54

   12 direct_declarator: direct_declarator '(' identifier_list • ')'
  178 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 100
    ','  shift, and go to state 101


State 55

   75 primary_expression: IDENTIFIER •

    $default  reduce using rule 75 (primary_expression)


State 56

   76 primary_expression: INT_LITERAL •

    $default  reduce using rule 76 (primary_expression)


State 57

   92 unary_expression: SIZEOF • unary_expression
   93                 | SIZEOF • '(' type_name ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 102
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 103
    unary_operator      go to state 70


State 58

   89 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 104
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 105
    unary_operator      go to state 70


State 59

   90 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 104
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 106
    unary_operator      go to state 70


State 60

   77 primary_expression: '(' • expression ')'
  101 cast_expression: '(' • type_name ')' cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 110
    type_specifier             go to state 111
    specifier_qualifier_list   go to state 112
    enum_specifier             go to state 23
    type_qualifier             go to state 113
    type_name                  go to state 114


State 61

   94 unary_operator: '&' •

    $default  reduce using rule 94 (unary_operator)


State 62

   95 unary_operator: '*' •

    $default  reduce using rule 95 (unary_operator)


State 63

   96 unary_operator: '+' •

    $default  reduce using rule 96 (unary_operator)


State 64

   97 unary_operator: '-' •

    $default  reduce using rule 97 (unary_operator)


State 65

   98 unary_operator: '~' •

    $default  reduce using rule 98 (unary_operator)


State 66

   99 unary_operator: '!' •

    $default  reduce using rule 99 (unary_operator)


State 67

   78 postfix_expression: primary_expression •

    $default  reduce using rule 78 (postfix_expression)


State 68

   79 postfix_expression: postfix_expression • '[' expression ']'
   80                   | postfix_expression • '(' ')'
   81                   | postfix_expression • '(' argument_expression_list ')'
   82                   | postfix_expression • '.' IDENTIFIER
   83                   | postfix_expression • POINTER_OP IDENTIFIER
   84                   | postfix_expression • INCREMENT_OP
   85                   | postfix_expression • DECREMENT_OP
   88 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 115
    INCREMENT_OP  shift, and go to state 116
    DECREMENT_OP  shift, and go to state 117
    '('           shift, and go to state 118
    '['           shift, and go to state 119
    '.'           shift, and go to state 120

    $default  reduce using rule 88 (unary_expression)


State 69

  100 cast_expression: unary_expression •

    $default  reduce using rule 100 (cast_expression)


State 70

   91 unary_expression: unary_operator • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 121


State 71

  102 multiplicative_expression: cast_expression •

    $default  reduce using rule 102 (multiplicative_expression)


State 72

  103 multiplicative_expression: multiplicative_expression • '*' cast_expression
  104                          | multiplicative_expression • '/' cast_expression
  105                          | multiplicative_expression • '%' cast_expression
  106 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 122
    '/'  shift, and go to state 123
    '%'  shift, and go to state 124

    $default  reduce using rule 106 (additive_expression)


State 73

  107 additive_expression: additive_expression • '+' multiplicative_expression
  108                    | additive_expression • '-' multiplicative_expression
  109 shift_expression: additive_expression •

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126

    $default  reduce using rule 109 (shift_expression)


State 74

  110 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  111                 | shift_expression • RIGHTSHIFT_OP additive_expression
  112 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 112 (relational_expression)


State 75

  113 relational_expression: relational_expression • '<' shift_expression
  114                      | relational_expression • '>' shift_expression
  115                      | relational_expression • LE_OP shift_expression
  116                      | relational_expression • GE_OP shift_expression
  117 equality_expression: relational_expression •

    LE_OP  shift, and go to state 129
    GE_OP  shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132

    $default  reduce using rule 117 (equality_expression)


State 76

  118 equality_expression: equality_expression • EQ_OP relational_expression
  119                    | equality_expression • NE_OP relational_expression
  120 and_expression: equality_expression •

    EQ_OP  shift, and go to state 133
    NE_OP  shift, and go to state 134

    $default  reduce using rule 120 (and_expression)


State 77

  121 and_expression: and_expression • '&' equality_expression
  122 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 135

    $default  reduce using rule 122 (exclusive_or_expression)


State 78

  123 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  124 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 136

    $default  reduce using rule 124 (inclusive_or_expression)


State 79

  125 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  126 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 137

    $default  reduce using rule 126 (logical_and_expression)


State 80

  127 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  128 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 138

    $default  reduce using rule 128 (logical_or_expression)


State 81

  129 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  130 conditional_expression: logical_or_expression •
  131                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 139
    '?'    shift, and go to state 140

    $default  reduce using rule 130 (conditional_expression)


State 82

  147 constant_expression: conditional_expression •

    $default  reduce using rule 147 (constant_expression)


State 83

   10 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 141


State 84

   26 init_declarator: declarator '=' • initializer

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '{'           shift, and go to state 142
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    initializer                go to state 143
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 144


State 85

   44 compound_statement: '{' • '}'
   45                   | '{' • statement_list '}'
   46                   | '{' • declaration_list '}'
   47                   | '{' • declaration_list statement_list '}'

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '}'           shift, and go to state 158
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    declaration                go to state 159
    declaration_specifiers     go to state 160
    compound_statement         go to state 161
    declaration_list           go to state 162
    statement_list             go to state 163
    statement                  go to state 164
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170
    type_specifier             go to state 22
    enum_specifier             go to state 23


State 86

    4 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 4 (function_definition)


State 87

   20 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 20 (declaration)


State 88

  163 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  166 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 90
    '}'  shift, and go to state 171


State 89

  168 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 172


State 90

  166 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 43

    enumerator  go to state 173


State 91

  162 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 162 (enum_specifier)


State 92

   11 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 11 (direct_declarator)


State 93

   15 parameter_list: parameter_list ',' • parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    parameter_declaration   go to state 174
    declaration_specifiers  go to state 53
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 94

    9 direct_declarator: '(' • declarator ')'
   35 direct_abstract_declarator: '(' • abstract_declarator ')'
   40                           | '(' • ')'
   41                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '('         shift, and go to state 94
    ')'         shift, and go to state 175
    '['         shift, and go to state 95
    '*'         shift, and go to state 14

    declarator                  go to state 28
    direct_declarator           go to state 19
    parameter_list              go to state 176
    parameter_declaration       go to state 52
    declaration_specifiers      go to state 53
    abstract_declarator         go to state 177
    direct_abstract_declarator  go to state 98
    type_specifier              go to state 22
    enum_specifier              go to state 23
    pointer                     go to state 99


State 95

   36 direct_abstract_declarator: '[' • ']'
   37                           | '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ']'           shift, and go to state 178
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 179


State 96

   16 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 16 (parameter_declaration)


State 97

   17 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 17 (parameter_declaration)


State 98

   33 abstract_declarator: direct_abstract_declarator •
   38 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   39                           | direct_abstract_declarator • '[' constant_expression ']'
   42                           | direct_abstract_declarator • '(' ')'
   43                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 180
    '['  shift, and go to state 181

    $default  reduce using rule 33 (abstract_declarator)


State 99

    6 declarator: pointer • direct_declarator
   32 abstract_declarator: pointer •
   34                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 94
    '['         shift, and go to state 95

    $default  reduce using rule 32 (abstract_declarator)

    direct_declarator           go to state 41
    direct_abstract_declarator  go to state 182


State 100

   12 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 12 (direct_declarator)


State 101

  178 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 183


State 102

   77 primary_expression: '(' • expression ')'
   93 unary_expression: SIZEOF '(' • type_name ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 110
    type_specifier             go to state 111
    specifier_qualifier_list   go to state 112
    enum_specifier             go to state 23
    type_qualifier             go to state 113
    type_name                  go to state 184


State 103

   92 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 92 (unary_expression)


State 104

   77 primary_expression: '(' • expression ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 110


State 105

   89 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 89 (unary_expression)


State 106

   90 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 90 (unary_expression)


State 107

  100 cast_expression: unary_expression •
  133 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 185
    DIV_ASSIGN         shift, and go to state 186
    MOD_ASSIGN         shift, and go to state 187
    ADD_ASSIGN         shift, and go to state 188
    SUB_ASSIGN         shift, and go to state 189
    LEFTSHIFT_ASSIGN   shift, and go to state 190
    RIGHTSHIFT_ASSIGN  shift, and go to state 191
    AND_ASSIGN         shift, and go to state 192
    XOR_ASSIGN         shift, and go to state 193
    OR_ASSIGN          shift, and go to state 194
    '='                shift, and go to state 195

    $default  reduce using rule 100 (cast_expression)

    assignment_operator  go to state 196


State 108

  132 assignment_expression: conditional_expression •

    $default  reduce using rule 132 (assignment_expression)


State 109

  145 expression: assignment_expression •

    $default  reduce using rule 145 (expression)


State 110

   77 primary_expression: '(' expression • ')'
  146 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 197
    ','  shift, and go to state 198


State 111

  158 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  159                         | type_specifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 159 (specifier_qualifier_list)

    type_specifier            go to state 111
    specifier_qualifier_list  go to state 199
    enum_specifier            go to state 23
    type_qualifier            go to state 113


State 112

  179 type_name: specifier_qualifier_list •
  180          | specifier_qualifier_list • abstract_declarator

    '('  shift, and go to state 200
    '['  shift, and go to state 95
    '*'  shift, and go to state 14

    $default  reduce using rule 179 (type_name)

    abstract_declarator         go to state 201
    direct_abstract_declarator  go to state 98
    pointer                     go to state 202


State 113

  160 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  161                         | type_qualifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 161 (specifier_qualifier_list)

    type_specifier            go to state 111
    specifier_qualifier_list  go to state 203
    enum_specifier            go to state 23
    type_qualifier            go to state 113


State 114

  101 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 204


State 115

   83 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 205


State 116

   84 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 84 (postfix_expression)


State 117

   85 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 85 (postfix_expression)


State 118

   80 postfix_expression: postfix_expression '(' • ')'
   81                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ')'           shift, and go to state 206
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    argument_expression_list   go to state 207
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 208


State 119

   79 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 209


State 120

   82 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 210


State 121

   91 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 91 (unary_expression)


State 122

  103 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 211


State 123

  104 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 212


State 124

  105 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 213


State 125

  107 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 214


State 126

  108 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 215


State 127

  110 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 216


State 128

  111 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 217


State 129

  115 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 218


State 130

  116 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 219


State 131

  113 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 220


State 132

  114 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 221


State 133

  118 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 222


State 134

  119 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 223


State 135

  121 and_expression: and_expression '&' • equality_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 224


State 136

  123 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 225


State 137

  125 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 226


State 138

  127 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 227


State 139

  129 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 228


State 140

  131 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 229


State 141

   10 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 10 (direct_declarator)


State 142

   28 initializer: '{' • initializer_list '}'
   29            | '{' • initializer_list ',' '}'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '{'           shift, and go to state 142
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    initializer                go to state 230
    initializer_list           go to state 231
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 144


State 143

   26 init_declarator: declarator '=' initializer •

    $default  reduce using rule 26 (init_declarator)


State 144

   27 initializer: assignment_expression •

    $default  reduce using rule 27 (initializer)


State 145

   58 labeled_statement: IDENTIFIER • ':' statement
   75 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 232

    $default  reduce using rule 75 (primary_expression)


State 146

   59 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 233


State 147

   60 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 234


State 148

   63 selection_statement: IF • '(' expression ')' statement
   64                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 235


State 149

   65 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 236


State 150

   66 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 237


State 151

   67 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 238
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 152

   68 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   69                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 239


State 153

   70 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 240


State 154

   71 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 241


State 155

   72 jump_statement: BREAK • ';'

    ';'  shift, and go to state 242


State 156

   73 jump_statement: RETURN • ';'
   74               | RETURN • expression ';'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ';'           shift, and go to state 243
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 244


State 157

   61 expression_statement: ';' •

    $default  reduce using rule 61 (expression_statement)


State 158

   44 compound_statement: '{' '}' •

    $default  reduce using rule 44 (compound_statement)


State 159

   48 declaration_list: declaration •

    $default  reduce using rule 48 (declaration_list)


State 160

   19 declaration: declaration_specifiers • ';'
   20            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13
    ';'         shift, and go to state 37
    '*'         shift, and go to state 14

    declarator         go to state 245
    direct_declarator  go to state 19
    init_declarator    go to state 39
    pointer            go to state 24


State 161

   57 statement: compound_statement •

    $default  reduce using rule 57 (statement)


State 162

   46 compound_statement: '{' declaration_list • '}'
   47                   | '{' declaration_list • statement_list '}'
   49 declaration_list: declaration_list • declaration

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '}'           shift, and go to state 246
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    declaration                go to state 247
    declaration_specifiers     go to state 160
    compound_statement         go to state 161
    statement_list             go to state 248
    statement                  go to state 164
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170
    type_specifier             go to state 22
    enum_specifier             go to state 23


State 163

   45 compound_statement: '{' statement_list • '}'
   51 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '}'           shift, and go to state 249
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 250
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 164

   50 statement_list: statement •

    $default  reduce using rule 50 (statement_list)


State 165

   52 statement: labeled_statement •

    $default  reduce using rule 52 (statement)


State 166

   53 statement: expression_statement •

    $default  reduce using rule 53 (statement)


State 167

   54 statement: selection_statement •

    $default  reduce using rule 54 (statement)


State 168

   55 statement: iteration_statement •

    $default  reduce using rule 55 (statement)


State 169

   56 statement: jump_statement •

    $default  reduce using rule 56 (statement)


State 170

   62 expression_statement: expression • ';'
  146 expression: expression • ',' assignment_expression

    ','  shift, and go to state 198
    ';'  shift, and go to state 251


State 171

  163 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 163 (enum_specifier)


State 172

  168 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 168 (enumerator)


State 173

  166 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 166 (enumerator_list)


State 174

   15 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 15 (parameter_list)


State 175

   40 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 40 (direct_abstract_declarator)


State 176

   15 parameter_list: parameter_list • ',' parameter_declaration
   41 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 252
    ','  shift, and go to state 93


State 177

   35 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 253


State 178

   36 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 36 (direct_abstract_declarator)


State 179

   37 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 254


State 180

   42 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   43                           | direct_abstract_declarator '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    ')'       shift, and go to state 255

    parameter_list          go to state 256
    parameter_declaration   go to state 52
    declaration_specifiers  go to state 53
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 181

   38 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
   39                           | direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ']'           shift, and go to state 257
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 258


State 182

   34 abstract_declarator: pointer direct_abstract_declarator •
   38 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   39                           | direct_abstract_declarator • '[' constant_expression ']'
   42                           | direct_abstract_declarator • '(' ')'
   43                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 180
    '['  shift, and go to state 181

    $default  reduce using rule 34 (abstract_declarator)


State 183

  178 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 178 (identifier_list)


State 184

   93 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 259


State 185

  135 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 135 (assignment_operator)


State 186

  136 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 136 (assignment_operator)


State 187

  137 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 137 (assignment_operator)


State 188

  138 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 138 (assignment_operator)


State 189

  139 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 139 (assignment_operator)


State 190

  140 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 140 (assignment_operator)


State 191

  141 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 141 (assignment_operator)


State 192

  142 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 142 (assignment_operator)


State 193

  143 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 143 (assignment_operator)


State 194

  144 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 144 (assignment_operator)


State 195

  134 assignment_operator: '=' •

    $default  reduce using rule 134 (assignment_operator)


State 196

  133 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 260


State 197

   77 primary_expression: '(' expression ')' •

    $default  reduce using rule 77 (primary_expression)


State 198

  146 expression: expression ',' • assignment_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 261


State 199

  158 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 158 (specifier_qualifier_list)


State 200

   35 direct_abstract_declarator: '(' • abstract_declarator ')'
   40                           | '(' • ')'
   41                           | '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    '('       shift, and go to state 200
    ')'       shift, and go to state 175
    '['       shift, and go to state 95
    '*'       shift, and go to state 14

    parameter_list              go to state 176
    parameter_declaration       go to state 52
    declaration_specifiers      go to state 53
    abstract_declarator         go to state 177
    direct_abstract_declarator  go to state 98
    type_specifier              go to state 22
    enum_specifier              go to state 23
    pointer                     go to state 202


State 201

  180 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 180 (type_name)


State 202

   32 abstract_declarator: pointer •
   34                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 200
    '['  shift, and go to state 95

    $default  reduce using rule 32 (abstract_declarator)

    direct_abstract_declarator  go to state 182


State 203

  160 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 160 (specifier_qualifier_list)


State 204

  101 cast_expression: '(' type_name ')' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 262


State 205

   83 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 83 (postfix_expression)


State 206

   80 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 80 (postfix_expression)


State 207

   81 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   87 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 263
    ','  shift, and go to state 264


State 208

   86 argument_expression_list: assignment_expression •

    $default  reduce using rule 86 (argument_expression_list)


State 209

   79 postfix_expression: postfix_expression '[' expression • ']'
  146 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 265
    ','  shift, and go to state 198


State 210

   82 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 82 (postfix_expression)


State 211

  103 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 103 (multiplicative_expression)


State 212

  104 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 104 (multiplicative_expression)


State 213

  105 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 105 (multiplicative_expression)


State 214

  103 multiplicative_expression: multiplicative_expression • '*' cast_expression
  104                          | multiplicative_expression • '/' cast_expression
  105                          | multiplicative_expression • '%' cast_expression
  107 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 122
    '/'  shift, and go to state 123
    '%'  shift, and go to state 124

    $default  reduce using rule 107 (additive_expression)


State 215

  103 multiplicative_expression: multiplicative_expression • '*' cast_expression
  104                          | multiplicative_expression • '/' cast_expression
  105                          | multiplicative_expression • '%' cast_expression
  108 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 122
    '/'  shift, and go to state 123
    '%'  shift, and go to state 124

    $default  reduce using rule 108 (additive_expression)


State 216

  107 additive_expression: additive_expression • '+' multiplicative_expression
  108                    | additive_expression • '-' multiplicative_expression
  110 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126

    $default  reduce using rule 110 (shift_expression)


State 217

  107 additive_expression: additive_expression • '+' multiplicative_expression
  108                    | additive_expression • '-' multiplicative_expression
  111 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126

    $default  reduce using rule 111 (shift_expression)


State 218

  110 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  111                 | shift_expression • RIGHTSHIFT_OP additive_expression
  115 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 115 (relational_expression)


State 219

  110 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  111                 | shift_expression • RIGHTSHIFT_OP additive_expression
  116 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 116 (relational_expression)


State 220

  110 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  111                 | shift_expression • RIGHTSHIFT_OP additive_expression
  113 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 113 (relational_expression)


State 221

  110 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  111                 | shift_expression • RIGHTSHIFT_OP additive_expression
  114 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 114 (relational_expression)


State 222

  113 relational_expression: relational_expression • '<' shift_expression
  114                      | relational_expression • '>' shift_expression
  115                      | relational_expression • LE_OP shift_expression
  116                      | relational_expression • GE_OP shift_expression
  118 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 129
    GE_OP  shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132

    $default  reduce using rule 118 (equality_expression)


State 223

  113 relational_expression: relational_expression • '<' shift_expression
  114                      | relational_expression • '>' shift_expression
  115                      | relational_expression • LE_OP shift_expression
  116                      | relational_expression • GE_OP shift_expression
  119 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 129
    GE_OP  shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132

    $default  reduce using rule 119 (equality_expression)


State 224

  118 equality_expression: equality_expression • EQ_OP relational_expression
  119                    | equality_expression • NE_OP relational_expression
  121 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 133
    NE_OP  shift, and go to state 134

    $default  reduce using rule 121 (and_expression)


State 225

  121 and_expression: and_expression • '&' equality_expression
  123 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 135

    $default  reduce using rule 123 (exclusive_or_expression)


State 226

  123 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  125 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 136

    $default  reduce using rule 125 (inclusive_or_expression)


State 227

  125 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  127 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 137

    $default  reduce using rule 127 (logical_and_expression)


State 228

  127 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  129 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 138

    $default  reduce using rule 129 (logical_or_expression)


State 229

  131 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  146 expression: expression • ',' assignment_expression

    ','  shift, and go to state 198
    ':'  shift, and go to state 266


State 230

   30 initializer_list: initializer •

    $default  reduce using rule 30 (initializer_list)


State 231

   28 initializer: '{' initializer_list • '}'
   29            | '{' initializer_list • ',' '}'
   31 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 267
    '}'  shift, and go to state 268


State 232

   58 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 269
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 233

   59 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 270


State 234

   60 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 271
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 235

   63 selection_statement: IF '(' • expression ')' statement
   64                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 272


State 236

   65 selection_statement: SWITCH '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 273


State 237

   66 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 274


State 238

   67 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 275


State 239

   68 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   69                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    expression_statement       go to state 276
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 240

   70 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 277


State 241

   71 jump_statement: CONTINUE ';' •

    $default  reduce using rule 71 (jump_statement)


State 242

   72 jump_statement: BREAK ';' •

    $default  reduce using rule 72 (jump_statement)


State 243

   73 jump_statement: RETURN ';' •

    $default  reduce using rule 73 (jump_statement)


State 244

   74 jump_statement: RETURN expression • ';'
  146 expression: expression • ',' assignment_expression

    ','  shift, and go to state 198
    ';'  shift, and go to state 278


State 245

   25 init_declarator: declarator •
   26                | declarator • '=' initializer

    '='  shift, and go to state 84

    $default  reduce using rule 25 (init_declarator)


State 246

   46 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 46 (compound_statement)


State 247

   49 declaration_list: declaration_list declaration •

    $default  reduce using rule 49 (declaration_list)


State 248

   47 compound_statement: '{' declaration_list statement_list • '}'
   51 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '}'           shift, and go to state 279
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 250
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 249

   45 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 45 (compound_statement)


State 250

   51 statement_list: statement_list statement •

    $default  reduce using rule 51 (statement_list)


State 251

   62 expression_statement: expression ';' •

    $default  reduce using rule 62 (expression_statement)


State 252

   41 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 41 (direct_abstract_declarator)


State 253

   35 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 35 (direct_abstract_declarator)


State 254

   37 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 37 (direct_abstract_declarator)


State 255

   42 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 256

   15 parameter_list: parameter_list • ',' parameter_declaration
   43 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 280
    ','  shift, and go to state 93


State 257

   38 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 38 (direct_abstract_declarator)


State 258

   39 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 281


State 259

   93 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 93 (unary_expression)


State 260

  133 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 133 (assignment_expression)


State 261

  146 expression: expression ',' assignment_expression •

    $default  reduce using rule 146 (expression)


State 262

  101 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 101 (cast_expression)


State 263

   81 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 81 (postfix_expression)


State 264

   87 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 282


State 265

   79 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 79 (postfix_expression)


State 266

  131 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 283


State 267

   29 initializer: '{' initializer_list ',' • '}'
   31 initializer_list: initializer_list ',' • initializer

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '{'           shift, and go to state 142
    '}'           shift, and go to state 284
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    initializer                go to state 285
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 144


State 268

   28 initializer: '{' initializer_list '}' •

    $default  reduce using rule 28 (initializer)


State 269

   58 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 58 (labeled_statement)


State 270

   59 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 286
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 271

   60 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 60 (labeled_statement)


State 272

   63 selection_statement: IF '(' expression • ')' statement
   64                    | IF '(' expression • ')' statement ELSE statement
  146 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 287
    ','  shift, and go to state 198


State 273

   65 selection_statement: SWITCH '(' expression • ')' statement
  146 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 288
    ','  shift, and go to state 198


State 274

   66 iteration_statement: WHILE '(' expression • ')' statement
  146 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 289
    ','  shift, and go to state 198


State 275

   67 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 290


State 276

   68 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   69                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    expression_statement       go to state 291
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 277

   70 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 70 (jump_statement)


State 278

   74 jump_statement: RETURN expression ';' •

    $default  reduce using rule 74 (jump_statement)


State 279

   47 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 47 (compound_statement)


State 280

   43 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 281

   39 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 39 (direct_abstract_declarator)


State 282

   87 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 87 (argument_expression_list)


State 283

  131 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 131 (conditional_expression)


State 284

   29 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 29 (initializer)


State 285

   31 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 31 (initializer_list)


State 286

   59 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 59 (labeled_statement)


State 287

   63 selection_statement: IF '(' expression ')' • statement
   64                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 292
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 288

   65 selection_statement: SWITCH '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 293
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 289

   66 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 294
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 290

   67 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 295


State 291

   68 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   69                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ')'           shift, and go to state 296
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 297


State 292

   63 selection_statement: IF '(' expression ')' statement •
   64                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 298

    ELSE      [reduce using rule 63 (selection_statement)]
    $default  reduce using rule 63 (selection_statement)


State 293

   65 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 65 (selection_statement)


State 294

   66 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 66 (iteration_statement)


State 295

   67 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  146 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 299
    ','  shift, and go to state 198


State 296

   68 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 300
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 297

   69 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  146 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 301
    ','  shift, and go to state 198


State 298

   64 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 302
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 299

   67 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 303


State 300

   68 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 68 (iteration_statement)


State 301

   69 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER    shift, and go to state 145
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 146
    DEFAULT       shift, and go to state 147
    IF            shift, and go to state 148
    SWITCH        shift, and go to state 149
    WHILE         shift, and go to state 150
    DO            shift, and go to state 151
    FOR           shift, and go to state 152
    GOTO          shift, and go to state 153
    CONTINUE      shift, and go to state 154
    BREAK         shift, and go to state 155
    RETURN        shift, and go to state 156
    '('           shift, and go to state 60
    ';'           shift, and go to state 157
    '{'           shift, and go to state 85
    '&'           shift, and go to state 61
    '*'           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    compound_statement         go to state 161
    statement                  go to state 304
    labeled_statement          go to state 165
    expression_statement       go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 107
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 108
    assignment_expression      go to state 109
    expression                 go to state 170


State 302

   64 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 64 (selection_statement)


State 303

   67 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 67 (iteration_statement)


State 304

   69 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 69 (iteration_statement)
