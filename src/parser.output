Nonterminals useless in grammar

    init_declarator_list
    translation_unit
    compound_statement
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    struct_declarator_list
    struct_declarator


Terminals unused in grammar

    STRING_LITERAL
    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS


Rules useless in grammar

  184 translation_unit: external_declaration
  185                 | translation_unit external_declaration

  186 compound_statement: '{' '}'
  187                   | '{' statement_list '}'
  188                   | '{' declaration_list '}'
  189                   | '{' declaration_list statement_list '}'

  190 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  191                          | struct_or_union '{' struct_declaration_list '}'
  192                          | struct_or_union IDENTIFIER

  193 struct_or_union: STRUCT
  194                | UNION

  195 struct_declaration_list: struct_declaration
  196                        | struct_declaration_list struct_declaration

  197 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  198 struct_declarator_list: struct_declarator
  199                       | struct_declarator_list ',' struct_declarator

  200 struct_declarator: declarator
  201                  | ':' constant_expression
  202                  | declarator ':' constant_expression


Rules useless in parser due to conflicts

  100 unary_operator: '-'


State 61 conflicts: 12 shift/reduce
State 299 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: external_declaration

    2 external_declaration: function_definition
    3                     | declaration

    4 function_definition: declaration_specifiers declarator '{' statement_list '}'
    5                    | declaration_specifiers declarator '{' declaration_list '}'
    6                    | declaration_specifiers declarator '{' declaration_list statement_list '}'
    7                    | declaration_specifiers declarator '{' '}'
    8                    | declarator

    9 declarator: pointer direct_declarator
   10           | direct_declarator

   11 direct_declarator: IDENTIFIER
   12                  | '(' declarator ')'
   13                  | direct_declarator '[' constant_expression ']'
   14                  | direct_declarator '(' parameter_list ')'
   15                  | direct_declarator '(' identifier_list ')'
   16                  | direct_declarator '(' ')'

   17 parameter_list: parameter_declaration
   18               | parameter_list ',' parameter_declaration

   19 parameter_declaration: declaration_specifiers declarator
   20                      | declaration_specifiers abstract_declarator
   21                      | declaration_specifiers

   22 declaration: declaration_specifiers ';'
   23            | declaration_specifiers init_declarator ';'

   24 declaration_specifiers: type_specifier
   25                       | type_specifier declaration_specifiers
   26                       | TYPEDEF
   27                       | TYPEDEF declaration_specifiers

   28 init_declarator: declarator
   29                | declarator '=' initializer

   30 initializer: assignment_expression
   31            | '{' initializer_list '}'
   32            | '{' initializer_list ',' '}'

   33 initializer_list: initializer
   34                 | initializer_list ',' initializer

   35 abstract_declarator: pointer
   36                    | direct_abstract_declarator
   37                    | pointer direct_abstract_declarator

   38 direct_abstract_declarator: '(' abstract_declarator ')'
   39                           | '[' ']'
   40                           | '[' constant_expression ']'
   41                           | direct_abstract_declarator '[' ']'
   42                           | direct_abstract_declarator '[' constant_expression ']'
   43                           | '(' ')'
   44                           | '(' parameter_list ')'
   45                           | direct_abstract_declarator '(' ')'
   46                           | direct_abstract_declarator '(' parameter_list ')'

   47 declaration_list: declaration
   48                 | declaration_list declaration

   49 statement_list: statement
   50               | statement_list statement

   51 statement: labeled_statement
   52          | expression_statement
   53          | selection_statement
   54          | iteration_statement
   55          | jump_statement
   56          | '{' '}'
   57          | '{' statement_list '}'
   58          | '{' declaration_list '}'
   59          | '{' declaration_list statement_list '}'

   60 labeled_statement: IDENTIFIER ':' statement
   61                  | CASE constant_expression ':' statement
   62                  | DEFAULT ':' statement

   63 expression_statement: ';'
   64                     | expression ';'

   65 selection_statement: IF '(' expression ')' statement
   66                    | IF '(' expression ')' statement ELSE statement
   67                    | SWITCH '(' expression ')' statement

   68 iteration_statement: WHILE '(' expression ')' statement
   69                    | DO statement WHILE '(' expression ')' ';'
   70                    | FOR '(' expression_statement expression_statement ')' statement
   71                    | FOR '(' expression_statement expression_statement expression ')' statement

   72 jump_statement: GOTO IDENTIFIER ';'
   73               | CONTINUE ';'
   74               | BREAK ';'
   75               | RETURN ';'
   76               | RETURN expression ';'

   77 primary_expression: IDENTIFIER
   78                   | INT_LITERAL
   79                   | '(' expression ')'

   80 postfix_expression: primary_expression
   81                   | postfix_expression '[' expression ']'
   82                   | postfix_expression '(' ')'
   83                   | postfix_expression '(' argument_expression_list ')'
   84                   | postfix_expression '.' IDENTIFIER
   85                   | postfix_expression POINTER_OP IDENTIFIER
   86                   | postfix_expression INCREMENT_OP
   87                   | postfix_expression DECREMENT_OP

   88 argument_expression_list: assignment_expression
   89                         | argument_expression_list ',' assignment_expression

   90 unary_expression: postfix_expression
   91                 | INCREMENT_OP unary_expression
   92                 | DECREMENT_OP unary_expression
   93                 | unary_operator cast_expression
   94                 | '-' unary_expression
   95                 | SIZEOF unary_expression
   96                 | SIZEOF '(' type_name ')'

   97 unary_operator: '&'
   98               | '*'
   99               | '+'
  100               | '-'
  101               | '~'
  102               | '!'

  103 cast_expression: unary_expression
  104                | '(' type_name ')' cast_expression

  105 multiplicative_expression: cast_expression
  106                          | multiplicative_expression '*' cast_expression
  107                          | multiplicative_expression '/' cast_expression
  108                          | multiplicative_expression '%' cast_expression

  109 additive_expression: multiplicative_expression
  110                    | additive_expression '+' multiplicative_expression
  111                    | additive_expression '-' multiplicative_expression

  112 shift_expression: additive_expression
  113                 | shift_expression LEFTSHIFT_OP additive_expression
  114                 | shift_expression RIGHTSHIFT_OP additive_expression

  115 relational_expression: shift_expression
  116                      | relational_expression '<' shift_expression
  117                      | relational_expression '>' shift_expression
  118                      | relational_expression LE_OP shift_expression
  119                      | relational_expression GE_OP shift_expression

  120 equality_expression: relational_expression
  121                    | equality_expression EQ_OP relational_expression
  122                    | equality_expression NE_OP relational_expression

  123 and_expression: equality_expression
  124               | and_expression '&' equality_expression

  125 exclusive_or_expression: and_expression
  126                        | exclusive_or_expression '^' and_expression

  127 inclusive_or_expression: exclusive_or_expression
  128                        | inclusive_or_expression '|' exclusive_or_expression

  129 logical_and_expression: inclusive_or_expression
  130                       | logical_and_expression AND_OP inclusive_or_expression

  131 logical_or_expression: logical_and_expression
  132                      | logical_or_expression OR_OP logical_and_expression

  133 conditional_expression: logical_or_expression
  134                       | logical_or_expression '?' expression ':' conditional_expression

  135 assignment_expression: conditional_expression
  136                      | unary_expression assignment_operator assignment_expression

  137 assignment_operator: '='
  138                    | MUL_ASSIGN
  139                    | DIV_ASSIGN
  140                    | MOD_ASSIGN
  141                    | ADD_ASSIGN
  142                    | SUB_ASSIGN
  143                    | LEFTSHIFT_ASSIGN
  144                    | RIGHTSHIFT_ASSIGN
  145                    | AND_ASSIGN
  146                    | XOR_ASSIGN
  147                    | OR_ASSIGN

  148 expression: assignment_expression
  149           | expression ',' assignment_expression

  150 constant_expression: conditional_expression

  151 type_specifier: VOID
  152               | CHAR
  153               | SHORT
  154               | INT
  155               | LONG
  156               | FLOAT
  157               | DOUBLE
  158               | SIGNED
  159               | UNSIGNED
  160               | enum_specifier

  161 specifier_qualifier_list: type_specifier specifier_qualifier_list
  162                         | type_specifier
  163                         | type_qualifier specifier_qualifier_list
  164                         | type_qualifier

  165 enum_specifier: ENUM '{' enumerator_list '}'
  166               | ENUM IDENTIFIER '{' enumerator_list '}'
  167               | ENUM IDENTIFIER

  168 enumerator_list: enumerator
  169                | enumerator_list ',' enumerator

  170 enumerator: IDENTIFIER
  171           | IDENTIFIER '=' constant_expression

  172 type_qualifier: CONST
  173               | VOLATILE

  174 pointer: '*'
  175        | '*' type_qualifier_list
  176        | '*' pointer
  177        | '*' type_qualifier_list pointer

  178 type_qualifier_list: type_qualifier
  179                    | type_qualifier_list type_qualifier

  180 identifier_list: IDENTIFIER
  181                | identifier_list ',' IDENTIFIER

  182 type_name: specifier_qualifier_list
  183          | specifier_qualifier_list abstract_declarator


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 102
    '%' (37) 108
    '&' (38) 97 124
    '(' (40) 12 14 15 16 38 43 44 45 46 65 66 67 68 69 70 71 79 82 83 96 104
    ')' (41) 12 14 15 16 38 43 44 45 46 65 66 67 68 69 70 71 79 82 83 96 104
    '*' (42) 98 106 174 175 176 177
    '+' (43) 99 110
    ',' (44) 18 32 34 89 149 169 181
    '-' (45) 94 100 111
    '.' (46) 84
    '/' (47) 107
    ':' (58) 60 61 62 134
    ';' (59) 22 23 63 64 69 72 73 74 75 76
    '<' (60) 116
    '=' (61) 29 137 171
    '>' (62) 117
    '?' (63) 134
    '[' (91) 13 39 40 41 42 81
    ']' (93) 13 39 40 41 42 81
    '^' (94) 126
    '{' (123) 4 5 6 7 31 32 56 57 58 59 165 166
    '|' (124) 128
    '}' (125) 4 5 6 7 31 32 56 57 58 59 165 166
    '~' (126) 101
    error (256)
    IDENTIFIER <string> (258) 11 60 72 77 84 85 166 167 170 171 180 181
    INT_LITERAL <number> (259) 78
    STRING_LITERAL (260)
    SIZEOF (261) 95 96
    POINTER_OP (262) 85
    INCREMENT_OP (263) 86 91
    DECREMENT_OP (264) 87 92
    LEFTSHIFT_OP (265) 113
    RIGHTSHIFT_OP (266) 114
    LE_OP (267) 118
    GE_OP (268) 119
    EQ_OP (269) 121
    NE_OP (270) 122
    AND_OP (271) 130
    OR_OP (272) 132
    MUL_ASSIGN (273) 138
    DIV_ASSIGN (274) 139
    MOD_ASSIGN (275) 140
    ADD_ASSIGN (276) 141
    SUB_ASSIGN (277) 142
    LEFTSHIFT_ASSIGN (278) 143
    RIGHTSHIFT_ASSIGN (279) 144
    AND_ASSIGN (280) 145
    XOR_ASSIGN (281) 146
    OR_ASSIGN (282) 147
    TYPE_NAME (283)
    TYPEDEF (284) 26 27
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 152
    SHORT (290) 153
    INT (291) 154
    LONG (292) 155
    SIGNED (293) 158
    UNSIGNED (294) 159
    FLOAT (295) 156
    DOUBLE (296) 157
    CONST (297) 172
    VOLATILE (298) 173
    VOID (299) 151
    STRUCT (300)
    UNION (301)
    ENUM (302) 165 166 167
    ELLIPSIS (303)
    CASE (304) 61
    DEFAULT (305) 62
    IF (306) 65 66
    ELSE (307) 66
    SWITCH (308) 67
    WHILE (309) 68 69
    DO (310) 69
    FOR (311) 70 71
    GOTO (312) 72
    CONTINUE (313) 73
    BREAK (314) 74
    RETURN (315) 75 76


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    ROOT (86)
        on left: 1
        on right: 0
    external_declaration <expr> (87)
        on left: 2 3
        on right: 1
    function_definition <expr> (88)
        on left: 4 5 6 7 8
        on right: 2
    declarator <expr> (89)
        on left: 9 10
        on right: 4 5 6 7 8 12 19 28 29
    direct_declarator <expr> (90)
        on left: 11 12 13 14 15 16
        on right: 9 10 13 14 15 16
    parameter_list <exprList> (91)
        on left: 17 18
        on right: 14 18 44 46
    parameter_declaration <expr> (92)
        on left: 19 20 21
        on right: 17 18
    declaration <expr> (93)
        on left: 22 23
        on right: 3 47 48
    declaration_specifiers <string> (94)
        on left: 24 25 26 27
        on right: 4 5 6 7 19 20 21 22 23 25 27
    init_declarator <expr> (95)
        on left: 28 29
        on right: 23
    initializer <expr> (96)
        on left: 30 31 32
        on right: 29 33 34
    initializer_list <exprList> (97)
        on left: 33 34
        on right: 31 32 34
    abstract_declarator <expr> (98)
        on left: 35 36 37
        on right: 20 38 183
    direct_abstract_declarator <expr> (99)
        on left: 38 39 40 41 42 43 44 45 46
        on right: 36 37 41 42 45 46
    declaration_list <exprList> (100)
        on left: 47 48
        on right: 5 6 48 58 59
    statement_list <exprList> (101)
        on left: 49 50
        on right: 4 6 50 57 59
    statement <expr> (102)
        on left: 51 52 53 54 55 56 57 58 59
        on right: 49 50 60 61 62 65 66 67 68 69 70 71
    labeled_statement <expr> (103)
        on left: 60 61 62
        on right: 51
    expression_statement <expr> (104)
        on left: 63 64
        on right: 52 70 71
    selection_statement <expr> (105)
        on left: 65 66 67
        on right: 53
    iteration_statement <expr> (106)
        on left: 68 69 70 71
        on right: 54
    jump_statement <expr> (107)
        on left: 72 73 74 75 76
        on right: 55
    primary_expression <expr> (108)
        on left: 77 78 79
        on right: 80
    postfix_expression <expr> (109)
        on left: 80 81 82 83 84 85 86 87
        on right: 81 82 83 84 85 86 87 90
    argument_expression_list <exprList> (110)
        on left: 88 89
        on right: 83 89
    unary_expression <expr> (111)
        on left: 90 91 92 93 94 95 96
        on right: 91 92 94 95 103 136
    unary_operator (112)
        on left: 97 98 99 100 101 102
        on right: 93
    cast_expression <expr> (113)
        on left: 103 104
        on right: 93 104 105 106 107 108
    multiplicative_expression <expr> (114)
        on left: 105 106 107 108
        on right: 106 107 108 109 110 111
    additive_expression <expr> (115)
        on left: 109 110 111
        on right: 110 111 112 113 114
    shift_expression <expr> (116)
        on left: 112 113 114
        on right: 113 114 115 116 117 118 119
    relational_expression <expr> (117)
        on left: 115 116 117 118 119
        on right: 116 117 118 119 120 121 122
    equality_expression <expr> (118)
        on left: 120 121 122
        on right: 121 122 123 124
    and_expression <expr> (119)
        on left: 123 124
        on right: 124 125 126
    exclusive_or_expression <expr> (120)
        on left: 125 126
        on right: 126 127 128
    inclusive_or_expression <expr> (121)
        on left: 127 128
        on right: 128 129 130
    logical_and_expression <expr> (122)
        on left: 129 130
        on right: 130 131 132
    logical_or_expression <expr> (123)
        on left: 131 132
        on right: 132 133 134
    conditional_expression <expr> (124)
        on left: 133 134
        on right: 134 135 150
    assignment_expression <expr> (125)
        on left: 135 136
        on right: 30 88 89 136 148 149
    assignment_operator <string> (126)
        on left: 137 138 139 140 141 142 143 144 145 146 147
        on right: 136
    expression <expr> (127)
        on left: 148 149
        on right: 64 65 66 67 68 69 71 76 79 81 134 149
    constant_expression <expr> (128)
        on left: 150
        on right: 13 40 42 61 171
    type_specifier <string> (129)
        on left: 151 152 153 154 155 156 157 158 159 160
        on right: 24 25 161 162
    specifier_qualifier_list <exprList> (130)
        on left: 161 162 163 164
        on right: 161 163 182 183
    enum_specifier <expr> (131)
        on left: 165 166 167
        on right: 160
    enumerator_list <exprList> (132)
        on left: 168 169
        on right: 165 166 169
    enumerator <expr> (133)
        on left: 170 171
        on right: 168 169
    type_qualifier (134)
        on left: 172 173
        on right: 163 164 178 179
    pointer <expr> (135)
        on left: 174 175 176 177
        on right: 9 35 37 176 177
    type_qualifier_list (136)
        on left: 178 179
        on right: 175 177 179
    identifier_list <exprList> (137)
        on left: 180 181
        on right: 15 181
    type_name <expr> (138)
        on left: 182 183
        on right: 96 104


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '('         shift, and go to state 13
    '*'         shift, and go to state 14

    ROOT                    go to state 15
    external_declaration    go to state 16
    function_definition     go to state 17
    declarator              go to state 18
    direct_declarator       go to state 19
    declaration             go to state 20
    declaration_specifiers  go to state 21
    type_specifier          go to state 22
    enum_specifier          go to state 23
    pointer                 go to state 24


State 1

   11 direct_declarator: IDENTIFIER •

    $default  reduce using rule 11 (direct_declarator)


State 2

   26 declaration_specifiers: TYPEDEF •
   27                       | TYPEDEF • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 26 (declaration_specifiers)

    declaration_specifiers  go to state 25
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 3

  152 type_specifier: CHAR •

    $default  reduce using rule 152 (type_specifier)


State 4

  153 type_specifier: SHORT •

    $default  reduce using rule 153 (type_specifier)


State 5

  154 type_specifier: INT •

    $default  reduce using rule 154 (type_specifier)


State 6

  155 type_specifier: LONG •

    $default  reduce using rule 155 (type_specifier)


State 7

  158 type_specifier: SIGNED •

    $default  reduce using rule 158 (type_specifier)


State 8

  159 type_specifier: UNSIGNED •

    $default  reduce using rule 159 (type_specifier)


State 9

  156 type_specifier: FLOAT •

    $default  reduce using rule 156 (type_specifier)


State 10

  157 type_specifier: DOUBLE •

    $default  reduce using rule 157 (type_specifier)


State 11

  151 type_specifier: VOID •

    $default  reduce using rule 151 (type_specifier)


State 12

  165 enum_specifier: ENUM • '{' enumerator_list '}'
  166               | ENUM • IDENTIFIER '{' enumerator_list '}'
  167               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 26
    '{'         shift, and go to state 27


State 13

   12 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13
    '*'         shift, and go to state 14

    declarator         go to state 28
    direct_declarator  go to state 19
    pointer            go to state 24


State 14

  174 pointer: '*' •
  175        | '*' • type_qualifier_list
  176        | '*' • pointer
  177        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 14

    $default  reduce using rule 174 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 34


State 16

    1 ROOT: external_declaration •

    $default  reduce using rule 1 (ROOT)


State 17

    2 external_declaration: function_definition •

    $default  reduce using rule 2 (external_declaration)


State 18

    8 function_definition: declarator •

    $default  reduce using rule 8 (function_definition)


State 19

   10 declarator: direct_declarator •
   13 direct_declarator: direct_declarator • '[' constant_expression ']'
   14                  | direct_declarator • '(' parameter_list ')'
   15                  | direct_declarator • '(' identifier_list ')'
   16                  | direct_declarator • '(' ')'

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 10 (declarator)


State 20

    3 external_declaration: declaration •

    $default  reduce using rule 3 (external_declaration)


State 21

    4 function_definition: declaration_specifiers • declarator '{' statement_list '}'
    5                    | declaration_specifiers • declarator '{' declaration_list '}'
    6                    | declaration_specifiers • declarator '{' declaration_list statement_list '}'
    7                    | declaration_specifiers • declarator '{' '}'
   22 declaration: declaration_specifiers • ';'
   23            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13
    ';'         shift, and go to state 37
    '*'         shift, and go to state 14

    declarator         go to state 38
    direct_declarator  go to state 19
    init_declarator    go to state 39
    pointer            go to state 24


State 22

   24 declaration_specifiers: type_specifier •
   25                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 24 (declaration_specifiers)

    declaration_specifiers  go to state 40
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 23

  160 type_specifier: enum_specifier •

    $default  reduce using rule 160 (type_specifier)


State 24

    9 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13

    direct_declarator  go to state 41


State 25

   27 declaration_specifiers: TYPEDEF declaration_specifiers •

    $default  reduce using rule 27 (declaration_specifiers)


State 26

  166 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  167               | ENUM IDENTIFIER •

    '{'  shift, and go to state 42

    $default  reduce using rule 167 (enum_specifier)


State 27

  165 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 43

    enumerator_list  go to state 44
    enumerator       go to state 45


State 28

   12 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 46


State 29

  172 type_qualifier: CONST •

    $default  reduce using rule 172 (type_qualifier)


State 30

  173 type_qualifier: VOLATILE •

    $default  reduce using rule 173 (type_qualifier)


State 31

  178 type_qualifier_list: type_qualifier •

    $default  reduce using rule 178 (type_qualifier_list)


State 32

  176 pointer: '*' pointer •

    $default  reduce using rule 176 (pointer)


State 33

  175 pointer: '*' type_qualifier_list •
  177        | '*' type_qualifier_list • pointer
  179 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 14

    $default  reduce using rule 175 (pointer)

    type_qualifier  go to state 47
    pointer         go to state 48


State 34

    0 $accept: ROOT $end •

    $default  accept


State 35

   14 direct_declarator: direct_declarator '(' • parameter_list ')'
   15                  | direct_declarator '(' • identifier_list ')'
   16                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 49
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    ')'         shift, and go to state 50

    parameter_list          go to state 51
    parameter_declaration   go to state 52
    declaration_specifiers  go to state 53
    type_specifier          go to state 22
    enum_specifier          go to state 23
    identifier_list         go to state 54


State 36

   13 direct_declarator: direct_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 83


State 37

   22 declaration: declaration_specifiers ';' •

    $default  reduce using rule 22 (declaration)


State 38

    4 function_definition: declaration_specifiers declarator • '{' statement_list '}'
    5                    | declaration_specifiers declarator • '{' declaration_list '}'
    6                    | declaration_specifiers declarator • '{' declaration_list statement_list '}'
    7                    | declaration_specifiers declarator • '{' '}'
   28 init_declarator: declarator •
   29                | declarator • '=' initializer

    '{'  shift, and go to state 84
    '='  shift, and go to state 85

    $default  reduce using rule 28 (init_declarator)


State 39

   23 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 86


State 40

   25 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 25 (declaration_specifiers)


State 41

    9 declarator: pointer direct_declarator •
   13 direct_declarator: direct_declarator • '[' constant_expression ']'
   14                  | direct_declarator • '(' parameter_list ')'
   15                  | direct_declarator • '(' identifier_list ')'
   16                  | direct_declarator • '(' ')'

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 9 (declarator)


State 42

  166 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 43

    enumerator_list  go to state 87
    enumerator       go to state 45


State 43

  170 enumerator: IDENTIFIER •
  171           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 88

    $default  reduce using rule 170 (enumerator)


State 44

  165 enum_specifier: ENUM '{' enumerator_list • '}'
  169 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 89
    ','  shift, and go to state 90


State 45

  168 enumerator_list: enumerator •

    $default  reduce using rule 168 (enumerator_list)


State 46

   12 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 12 (direct_declarator)


State 47

  179 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 179 (type_qualifier_list)


State 48

  177 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 177 (pointer)


State 49

  180 identifier_list: IDENTIFIER •

    $default  reduce using rule 180 (identifier_list)


State 50

   16 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 16 (direct_declarator)


State 51

   14 direct_declarator: direct_declarator '(' parameter_list • ')'
   18 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 91
    ','  shift, and go to state 92


State 52

   17 parameter_list: parameter_declaration •

    $default  reduce using rule 17 (parameter_list)


State 53

   19 parameter_declaration: declaration_specifiers • declarator
   20                      | declaration_specifiers • abstract_declarator
   21                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 93
    '['         shift, and go to state 94
    '*'         shift, and go to state 14

    $default  reduce using rule 21 (parameter_declaration)

    declarator                  go to state 95
    direct_declarator           go to state 19
    abstract_declarator         go to state 96
    direct_abstract_declarator  go to state 97
    pointer                     go to state 98


State 54

   15 direct_declarator: direct_declarator '(' identifier_list • ')'
  181 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 99
    ','  shift, and go to state 100


State 55

   77 primary_expression: IDENTIFIER •

    $default  reduce using rule 77 (primary_expression)


State 56

   78 primary_expression: INT_LITERAL •

    $default  reduce using rule 78 (primary_expression)


State 57

   95 unary_expression: SIZEOF • unary_expression
   96                 | SIZEOF • '(' type_name ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 101
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 102
    unary_operator      go to state 70


State 58

   91 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 103
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 104
    unary_operator      go to state 70


State 59

   92 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 103
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 105
    unary_operator      go to state 70


State 60

   79 primary_expression: '(' • expression ')'
  104 cast_expression: '(' • type_name ')' cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 109
    type_specifier             go to state 110
    specifier_qualifier_list   go to state 111
    enum_specifier             go to state 23
    type_qualifier             go to state 112
    type_name                  go to state 113


State 61

   94 unary_expression: '-' • unary_expression
  100 unary_operator: '-' •

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 103
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    IDENTIFIER    [reduce using rule 100 (unary_operator)]
    INT_LITERAL   [reduce using rule 100 (unary_operator)]
    SIZEOF        [reduce using rule 100 (unary_operator)]
    INCREMENT_OP  [reduce using rule 100 (unary_operator)]
    DECREMENT_OP  [reduce using rule 100 (unary_operator)]
    '('           [reduce using rule 100 (unary_operator)]
    '-'           [reduce using rule 100 (unary_operator)]
    '&'           [reduce using rule 100 (unary_operator)]
    '*'           [reduce using rule 100 (unary_operator)]
    '+'           [reduce using rule 100 (unary_operator)]
    '~'           [reduce using rule 100 (unary_operator)]
    '!'           [reduce using rule 100 (unary_operator)]

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 114
    unary_operator      go to state 70


State 62

   97 unary_operator: '&' •

    $default  reduce using rule 97 (unary_operator)


State 63

   98 unary_operator: '*' •

    $default  reduce using rule 98 (unary_operator)


State 64

   99 unary_operator: '+' •

    $default  reduce using rule 99 (unary_operator)


State 65

  101 unary_operator: '~' •

    $default  reduce using rule 101 (unary_operator)


State 66

  102 unary_operator: '!' •

    $default  reduce using rule 102 (unary_operator)


State 67

   80 postfix_expression: primary_expression •

    $default  reduce using rule 80 (postfix_expression)


State 68

   81 postfix_expression: postfix_expression • '[' expression ']'
   82                   | postfix_expression • '(' ')'
   83                   | postfix_expression • '(' argument_expression_list ')'
   84                   | postfix_expression • '.' IDENTIFIER
   85                   | postfix_expression • POINTER_OP IDENTIFIER
   86                   | postfix_expression • INCREMENT_OP
   87                   | postfix_expression • DECREMENT_OP
   90 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 115
    INCREMENT_OP  shift, and go to state 116
    DECREMENT_OP  shift, and go to state 117
    '('           shift, and go to state 118
    '['           shift, and go to state 119
    '.'           shift, and go to state 120

    $default  reduce using rule 90 (unary_expression)


State 69

  103 cast_expression: unary_expression •

    $default  reduce using rule 103 (cast_expression)


State 70

   93 unary_expression: unary_operator • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 121


State 71

  105 multiplicative_expression: cast_expression •

    $default  reduce using rule 105 (multiplicative_expression)


State 72

  106 multiplicative_expression: multiplicative_expression • '*' cast_expression
  107                          | multiplicative_expression • '/' cast_expression
  108                          | multiplicative_expression • '%' cast_expression
  109 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 122
    '/'  shift, and go to state 123
    '%'  shift, and go to state 124

    $default  reduce using rule 109 (additive_expression)


State 73

  110 additive_expression: additive_expression • '+' multiplicative_expression
  111                    | additive_expression • '-' multiplicative_expression
  112 shift_expression: additive_expression •

    '-'  shift, and go to state 125
    '+'  shift, and go to state 126

    $default  reduce using rule 112 (shift_expression)


State 74

  113 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  114                 | shift_expression • RIGHTSHIFT_OP additive_expression
  115 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 115 (relational_expression)


State 75

  116 relational_expression: relational_expression • '<' shift_expression
  117                      | relational_expression • '>' shift_expression
  118                      | relational_expression • LE_OP shift_expression
  119                      | relational_expression • GE_OP shift_expression
  120 equality_expression: relational_expression •

    LE_OP  shift, and go to state 129
    GE_OP  shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132

    $default  reduce using rule 120 (equality_expression)


State 76

  121 equality_expression: equality_expression • EQ_OP relational_expression
  122                    | equality_expression • NE_OP relational_expression
  123 and_expression: equality_expression •

    EQ_OP  shift, and go to state 133
    NE_OP  shift, and go to state 134

    $default  reduce using rule 123 (and_expression)


State 77

  124 and_expression: and_expression • '&' equality_expression
  125 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 135

    $default  reduce using rule 125 (exclusive_or_expression)


State 78

  126 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  127 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 136

    $default  reduce using rule 127 (inclusive_or_expression)


State 79

  128 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  129 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 137

    $default  reduce using rule 129 (logical_and_expression)


State 80

  130 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  131 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 138

    $default  reduce using rule 131 (logical_or_expression)


State 81

  132 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  133 conditional_expression: logical_or_expression •
  134                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 139
    '?'    shift, and go to state 140

    $default  reduce using rule 133 (conditional_expression)


State 82

  150 constant_expression: conditional_expression •

    $default  reduce using rule 150 (constant_expression)


State 83

   13 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 141


State 84

    4 function_definition: declaration_specifiers declarator '{' • statement_list '}'
    5                    | declaration_specifiers declarator '{' • declaration_list '}'
    6                    | declaration_specifiers declarator '{' • declaration_list statement_list '}'
    7                    | declaration_specifiers declarator '{' • '}'

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 155
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    declaration                go to state 157
    declaration_specifiers     go to state 158
    declaration_list           go to state 159
    statement_list             go to state 160
    statement                  go to state 161
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167
    type_specifier             go to state 22
    enum_specifier             go to state 23


State 85

   29 init_declarator: declarator '=' • initializer

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '{'           shift, and go to state 168
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    initializer                go to state 169
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 170


State 86

   23 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 23 (declaration)


State 87

  166 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  169 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 171
    ','  shift, and go to state 90


State 88

  171 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 172


State 89

  165 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 165 (enum_specifier)


State 90

  169 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 43

    enumerator  go to state 173


State 91

   14 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 14 (direct_declarator)


State 92

   18 parameter_list: parameter_list ',' • parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    parameter_declaration   go to state 174
    declaration_specifiers  go to state 53
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 93

   12 direct_declarator: '(' • declarator ')'
   38 direct_abstract_declarator: '(' • abstract_declarator ')'
   43                           | '(' • ')'
   44                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '('         shift, and go to state 93
    ')'         shift, and go to state 175
    '['         shift, and go to state 94
    '*'         shift, and go to state 14

    declarator                  go to state 28
    direct_declarator           go to state 19
    parameter_list              go to state 176
    parameter_declaration       go to state 52
    declaration_specifiers      go to state 53
    abstract_declarator         go to state 177
    direct_abstract_declarator  go to state 97
    type_specifier              go to state 22
    enum_specifier              go to state 23
    pointer                     go to state 98


State 94

   39 direct_abstract_declarator: '[' • ']'
   40                           | '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ']'           shift, and go to state 178
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 179


State 95

   19 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 19 (parameter_declaration)


State 96

   20 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 20 (parameter_declaration)


State 97

   36 abstract_declarator: direct_abstract_declarator •
   41 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   42                           | direct_abstract_declarator • '[' constant_expression ']'
   45                           | direct_abstract_declarator • '(' ')'
   46                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 180
    '['  shift, and go to state 181

    $default  reduce using rule 36 (abstract_declarator)


State 98

    9 declarator: pointer • direct_declarator
   35 abstract_declarator: pointer •
   37                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 93
    '['         shift, and go to state 94

    $default  reduce using rule 35 (abstract_declarator)

    direct_declarator           go to state 41
    direct_abstract_declarator  go to state 182


State 99

   15 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 15 (direct_declarator)


State 100

  181 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 183


State 101

   79 primary_expression: '(' • expression ')'
   96 unary_expression: SIZEOF '(' • type_name ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 109
    type_specifier             go to state 110
    specifier_qualifier_list   go to state 111
    enum_specifier             go to state 23
    type_qualifier             go to state 112
    type_name                  go to state 184


State 102

   95 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 95 (unary_expression)


State 103

   79 primary_expression: '(' • expression ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 109


State 104

   91 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 91 (unary_expression)


State 105

   92 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 92 (unary_expression)


State 106

  103 cast_expression: unary_expression •
  136 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 185
    DIV_ASSIGN         shift, and go to state 186
    MOD_ASSIGN         shift, and go to state 187
    ADD_ASSIGN         shift, and go to state 188
    SUB_ASSIGN         shift, and go to state 189
    LEFTSHIFT_ASSIGN   shift, and go to state 190
    RIGHTSHIFT_ASSIGN  shift, and go to state 191
    AND_ASSIGN         shift, and go to state 192
    XOR_ASSIGN         shift, and go to state 193
    OR_ASSIGN          shift, and go to state 194
    '='                shift, and go to state 195

    $default  reduce using rule 103 (cast_expression)

    assignment_operator  go to state 196


State 107

  135 assignment_expression: conditional_expression •

    $default  reduce using rule 135 (assignment_expression)


State 108

  148 expression: assignment_expression •

    $default  reduce using rule 148 (expression)


State 109

   79 primary_expression: '(' expression • ')'
  149 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 197
    ','  shift, and go to state 198


State 110

  161 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  162                         | type_specifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 162 (specifier_qualifier_list)

    type_specifier            go to state 110
    specifier_qualifier_list  go to state 199
    enum_specifier            go to state 23
    type_qualifier            go to state 112


State 111

  182 type_name: specifier_qualifier_list •
  183          | specifier_qualifier_list • abstract_declarator

    '('  shift, and go to state 200
    '['  shift, and go to state 94
    '*'  shift, and go to state 14

    $default  reduce using rule 182 (type_name)

    abstract_declarator         go to state 201
    direct_abstract_declarator  go to state 97
    pointer                     go to state 202


State 112

  163 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  164                         | type_qualifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 164 (specifier_qualifier_list)

    type_specifier            go to state 110
    specifier_qualifier_list  go to state 203
    enum_specifier            go to state 23
    type_qualifier            go to state 112


State 113

  104 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 204


State 114

   94 unary_expression: '-' unary_expression •

    $default  reduce using rule 94 (unary_expression)


State 115

   85 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 205


State 116

   86 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 86 (postfix_expression)


State 117

   87 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 87 (postfix_expression)


State 118

   82 postfix_expression: postfix_expression '(' • ')'
   83                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ')'           shift, and go to state 206
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    argument_expression_list   go to state 207
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 208


State 119

   81 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 209


State 120

   84 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 210


State 121

   93 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 93 (unary_expression)


State 122

  106 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 211


State 123

  107 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 212


State 124

  108 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 213


State 125

  111 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 214


State 126

  110 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 215


State 127

  113 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 216


State 128

  114 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 217


State 129

  118 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 218


State 130

  119 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 219


State 131

  116 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 220


State 132

  117 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 221


State 133

  121 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 222


State 134

  122 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 223


State 135

  124 and_expression: and_expression '&' • equality_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 224


State 136

  126 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 225


State 137

  128 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 226


State 138

  130 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 227


State 139

  132 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 228


State 140

  134 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 229


State 141

   13 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 13 (direct_declarator)


State 142

   60 labeled_statement: IDENTIFIER • ':' statement
   77 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 230

    $default  reduce using rule 77 (primary_expression)


State 143

   61 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 231


State 144

   62 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 232


State 145

   65 selection_statement: IF • '(' expression ')' statement
   66                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 233


State 146

   67 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 234


State 147

   68 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 235


State 148

   69 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 236
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 149

   70 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   71                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 237


State 150

   72 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 238


State 151

   73 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 239


State 152

   74 jump_statement: BREAK • ';'

    ';'  shift, and go to state 240


State 153

   75 jump_statement: RETURN • ';'
   76               | RETURN • expression ';'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ';'           shift, and go to state 241
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 242


State 154

   56 statement: '{' • '}'
   57          | '{' • statement_list '}'
   58          | '{' • declaration_list '}'
   59          | '{' • declaration_list statement_list '}'

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 243
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    declaration                go to state 157
    declaration_specifiers     go to state 158
    declaration_list           go to state 244
    statement_list             go to state 245
    statement                  go to state 161
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167
    type_specifier             go to state 22
    enum_specifier             go to state 23


State 155

    7 function_definition: declaration_specifiers declarator '{' '}' •

    $default  reduce using rule 7 (function_definition)


State 156

   63 expression_statement: ';' •

    $default  reduce using rule 63 (expression_statement)


State 157

   47 declaration_list: declaration •

    $default  reduce using rule 47 (declaration_list)


State 158

   22 declaration: declaration_specifiers • ';'
   23            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 13
    ';'         shift, and go to state 37
    '*'         shift, and go to state 14

    declarator         go to state 246
    direct_declarator  go to state 19
    init_declarator    go to state 39
    pointer            go to state 24


State 159

    5 function_definition: declaration_specifiers declarator '{' declaration_list • '}'
    6                    | declaration_specifiers declarator '{' declaration_list • statement_list '}'
   48 declaration_list: declaration_list • declaration

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 247
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    declaration                go to state 248
    declaration_specifiers     go to state 158
    statement_list             go to state 249
    statement                  go to state 161
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167
    type_specifier             go to state 22
    enum_specifier             go to state 23


State 160

    4 function_definition: declaration_specifiers declarator '{' statement_list • '}'
   50 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 250
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 251
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 161

   49 statement_list: statement •

    $default  reduce using rule 49 (statement_list)


State 162

   51 statement: labeled_statement •

    $default  reduce using rule 51 (statement)


State 163

   52 statement: expression_statement •

    $default  reduce using rule 52 (statement)


State 164

   53 statement: selection_statement •

    $default  reduce using rule 53 (statement)


State 165

   54 statement: iteration_statement •

    $default  reduce using rule 54 (statement)


State 166

   55 statement: jump_statement •

    $default  reduce using rule 55 (statement)


State 167

   64 expression_statement: expression • ';'
  149 expression: expression • ',' assignment_expression

    ','  shift, and go to state 198
    ';'  shift, and go to state 252


State 168

   31 initializer: '{' • initializer_list '}'
   32            | '{' • initializer_list ',' '}'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '{'           shift, and go to state 168
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    initializer                go to state 253
    initializer_list           go to state 254
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 170


State 169

   29 init_declarator: declarator '=' initializer •

    $default  reduce using rule 29 (init_declarator)


State 170

   30 initializer: assignment_expression •

    $default  reduce using rule 30 (initializer)


State 171

  166 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 166 (enum_specifier)


State 172

  171 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 171 (enumerator)


State 173

  169 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 169 (enumerator_list)


State 174

   18 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 18 (parameter_list)


State 175

   43 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 176

   18 parameter_list: parameter_list • ',' parameter_declaration
   44 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 255
    ','  shift, and go to state 92


State 177

   38 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 256


State 178

   39 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 39 (direct_abstract_declarator)


State 179

   40 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 257


State 180

   45 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   46                           | direct_abstract_declarator '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    ')'       shift, and go to state 258

    parameter_list          go to state 259
    parameter_declaration   go to state 52
    declaration_specifiers  go to state 53
    type_specifier          go to state 22
    enum_specifier          go to state 23


State 181

   41 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
   42                           | direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ']'           shift, and go to state 260
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 82
    constant_expression        go to state 261


State 182

   37 abstract_declarator: pointer direct_abstract_declarator •
   41 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   42                           | direct_abstract_declarator • '[' constant_expression ']'
   45                           | direct_abstract_declarator • '(' ')'
   46                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 180
    '['  shift, and go to state 181

    $default  reduce using rule 37 (abstract_declarator)


State 183

  181 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 181 (identifier_list)


State 184

   96 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 262


State 185

  138 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 138 (assignment_operator)


State 186

  139 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 139 (assignment_operator)


State 187

  140 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 140 (assignment_operator)


State 188

  141 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 141 (assignment_operator)


State 189

  142 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 142 (assignment_operator)


State 190

  143 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 143 (assignment_operator)


State 191

  144 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 144 (assignment_operator)


State 192

  145 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 145 (assignment_operator)


State 193

  146 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 146 (assignment_operator)


State 194

  147 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 147 (assignment_operator)


State 195

  137 assignment_operator: '=' •

    $default  reduce using rule 137 (assignment_operator)


State 196

  136 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 263


State 197

   79 primary_expression: '(' expression ')' •

    $default  reduce using rule 79 (primary_expression)


State 198

  149 expression: expression ',' • assignment_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 264


State 199

  161 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 161 (specifier_qualifier_list)


State 200

   38 direct_abstract_declarator: '(' • abstract_declarator ')'
   43                           | '(' • ')'
   44                           | '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    '('       shift, and go to state 200
    ')'       shift, and go to state 175
    '['       shift, and go to state 94
    '*'       shift, and go to state 14

    parameter_list              go to state 176
    parameter_declaration       go to state 52
    declaration_specifiers      go to state 53
    abstract_declarator         go to state 177
    direct_abstract_declarator  go to state 97
    type_specifier              go to state 22
    enum_specifier              go to state 23
    pointer                     go to state 202


State 201

  183 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 183 (type_name)


State 202

   35 abstract_declarator: pointer •
   37                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 200
    '['  shift, and go to state 94

    $default  reduce using rule 35 (abstract_declarator)

    direct_abstract_declarator  go to state 182


State 203

  163 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 163 (specifier_qualifier_list)


State 204

  104 cast_expression: '(' type_name ')' • cast_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression  go to state 67
    postfix_expression  go to state 68
    unary_expression    go to state 69
    unary_operator      go to state 70
    cast_expression     go to state 265


State 205

   85 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 85 (postfix_expression)


State 206

   82 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 82 (postfix_expression)


State 207

   83 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   89 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 266
    ','  shift, and go to state 267


State 208

   88 argument_expression_list: assignment_expression •

    $default  reduce using rule 88 (argument_expression_list)


State 209

   81 postfix_expression: postfix_expression '[' expression • ']'
  149 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 268
    ','  shift, and go to state 198


State 210

   84 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 84 (postfix_expression)


State 211

  106 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 106 (multiplicative_expression)


State 212

  107 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 107 (multiplicative_expression)


State 213

  108 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 108 (multiplicative_expression)


State 214

  106 multiplicative_expression: multiplicative_expression • '*' cast_expression
  107                          | multiplicative_expression • '/' cast_expression
  108                          | multiplicative_expression • '%' cast_expression
  111 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 122
    '/'  shift, and go to state 123
    '%'  shift, and go to state 124

    $default  reduce using rule 111 (additive_expression)


State 215

  106 multiplicative_expression: multiplicative_expression • '*' cast_expression
  107                          | multiplicative_expression • '/' cast_expression
  108                          | multiplicative_expression • '%' cast_expression
  110 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 122
    '/'  shift, and go to state 123
    '%'  shift, and go to state 124

    $default  reduce using rule 110 (additive_expression)


State 216

  110 additive_expression: additive_expression • '+' multiplicative_expression
  111                    | additive_expression • '-' multiplicative_expression
  113 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '-'  shift, and go to state 125
    '+'  shift, and go to state 126

    $default  reduce using rule 113 (shift_expression)


State 217

  110 additive_expression: additive_expression • '+' multiplicative_expression
  111                    | additive_expression • '-' multiplicative_expression
  114 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '-'  shift, and go to state 125
    '+'  shift, and go to state 126

    $default  reduce using rule 114 (shift_expression)


State 218

  113 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  114                 | shift_expression • RIGHTSHIFT_OP additive_expression
  118 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 118 (relational_expression)


State 219

  113 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  114                 | shift_expression • RIGHTSHIFT_OP additive_expression
  119 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 119 (relational_expression)


State 220

  113 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  114                 | shift_expression • RIGHTSHIFT_OP additive_expression
  116 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 116 (relational_expression)


State 221

  113 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  114                 | shift_expression • RIGHTSHIFT_OP additive_expression
  117 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 127
    RIGHTSHIFT_OP  shift, and go to state 128

    $default  reduce using rule 117 (relational_expression)


State 222

  116 relational_expression: relational_expression • '<' shift_expression
  117                      | relational_expression • '>' shift_expression
  118                      | relational_expression • LE_OP shift_expression
  119                      | relational_expression • GE_OP shift_expression
  121 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 129
    GE_OP  shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132

    $default  reduce using rule 121 (equality_expression)


State 223

  116 relational_expression: relational_expression • '<' shift_expression
  117                      | relational_expression • '>' shift_expression
  118                      | relational_expression • LE_OP shift_expression
  119                      | relational_expression • GE_OP shift_expression
  122 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 129
    GE_OP  shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132

    $default  reduce using rule 122 (equality_expression)


State 224

  121 equality_expression: equality_expression • EQ_OP relational_expression
  122                    | equality_expression • NE_OP relational_expression
  124 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 133
    NE_OP  shift, and go to state 134

    $default  reduce using rule 124 (and_expression)


State 225

  124 and_expression: and_expression • '&' equality_expression
  126 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 135

    $default  reduce using rule 126 (exclusive_or_expression)


State 226

  126 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  128 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 136

    $default  reduce using rule 128 (inclusive_or_expression)


State 227

  128 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  130 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 137

    $default  reduce using rule 130 (logical_and_expression)


State 228

  130 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  132 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 138

    $default  reduce using rule 132 (logical_or_expression)


State 229

  134 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  149 expression: expression • ',' assignment_expression

    ','  shift, and go to state 198
    ':'  shift, and go to state 269


State 230

   60 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 270
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 231

   61 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 271


State 232

   62 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 272
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 233

   65 selection_statement: IF '(' • expression ')' statement
   66                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 273


State 234

   67 selection_statement: SWITCH '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 274


State 235

   68 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 275


State 236

   69 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 276


State 237

   70 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   71                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    expression_statement       go to state 277
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 238

   72 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 278


State 239

   73 jump_statement: CONTINUE ';' •

    $default  reduce using rule 73 (jump_statement)


State 240

   74 jump_statement: BREAK ';' •

    $default  reduce using rule 74 (jump_statement)


State 241

   75 jump_statement: RETURN ';' •

    $default  reduce using rule 75 (jump_statement)


State 242

   76 jump_statement: RETURN expression • ';'
  149 expression: expression • ',' assignment_expression

    ','  shift, and go to state 198
    ';'  shift, and go to state 279


State 243

   56 statement: '{' '}' •

    $default  reduce using rule 56 (statement)


State 244

   48 declaration_list: declaration_list • declaration
   58 statement: '{' declaration_list • '}'
   59          | '{' declaration_list • statement_list '}'

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 280
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    declaration                go to state 248
    declaration_specifiers     go to state 158
    statement_list             go to state 281
    statement                  go to state 161
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167
    type_specifier             go to state 22
    enum_specifier             go to state 23


State 245

   50 statement_list: statement_list • statement
   57 statement: '{' statement_list • '}'

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 282
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 251
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 246

   28 init_declarator: declarator •
   29                | declarator • '=' initializer

    '='  shift, and go to state 85

    $default  reduce using rule 28 (init_declarator)


State 247

    5 function_definition: declaration_specifiers declarator '{' declaration_list '}' •

    $default  reduce using rule 5 (function_definition)


State 248

   48 declaration_list: declaration_list declaration •

    $default  reduce using rule 48 (declaration_list)


State 249

    6 function_definition: declaration_specifiers declarator '{' declaration_list statement_list • '}'
   50 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 283
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 251
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 250

    4 function_definition: declaration_specifiers declarator '{' statement_list '}' •

    $default  reduce using rule 4 (function_definition)


State 251

   50 statement_list: statement_list statement •

    $default  reduce using rule 50 (statement_list)


State 252

   64 expression_statement: expression ';' •

    $default  reduce using rule 64 (expression_statement)


State 253

   33 initializer_list: initializer •

    $default  reduce using rule 33 (initializer_list)


State 254

   31 initializer: '{' initializer_list • '}'
   32            | '{' initializer_list • ',' '}'
   34 initializer_list: initializer_list • ',' initializer

    '}'  shift, and go to state 284
    ','  shift, and go to state 285


State 255

   44 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 256

   38 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 38 (direct_abstract_declarator)


State 257

   40 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 40 (direct_abstract_declarator)


State 258

   45 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 45 (direct_abstract_declarator)


State 259

   18 parameter_list: parameter_list • ',' parameter_declaration
   46 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 286
    ','  shift, and go to state 92


State 260

   41 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 41 (direct_abstract_declarator)


State 261

   42 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 287


State 262

   96 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 96 (unary_expression)


State 263

  136 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 136 (assignment_expression)


State 264

  149 expression: expression ',' assignment_expression •

    $default  reduce using rule 149 (expression)


State 265

  104 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 104 (cast_expression)


State 266

   83 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 83 (postfix_expression)


State 267

   89 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 288


State 268

   81 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 81 (postfix_expression)


State 269

  134 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 69
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 289


State 270

   60 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 60 (labeled_statement)


State 271

   61 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 290
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 272

   62 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 62 (labeled_statement)


State 273

   65 selection_statement: IF '(' expression • ')' statement
   66                    | IF '(' expression • ')' statement ELSE statement
  149 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 291
    ','  shift, and go to state 198


State 274

   67 selection_statement: SWITCH '(' expression • ')' statement
  149 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 292
    ','  shift, and go to state 198


State 275

   68 iteration_statement: WHILE '(' expression • ')' statement
  149 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 293
    ','  shift, and go to state 198


State 276

   69 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 294


State 277

   70 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   71                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    expression_statement       go to state 295
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 278

   72 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 72 (jump_statement)


State 279

   76 jump_statement: RETURN expression ';' •

    $default  reduce using rule 76 (jump_statement)


State 280

   58 statement: '{' declaration_list '}' •

    $default  reduce using rule 58 (statement)


State 281

   50 statement_list: statement_list • statement
   59 statement: '{' declaration_list statement_list • '}'

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '}'           shift, and go to state 296
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 251
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 282

   57 statement: '{' statement_list '}' •

    $default  reduce using rule 57 (statement)


State 283

    6 function_definition: declaration_specifiers declarator '{' declaration_list statement_list '}' •

    $default  reduce using rule 6 (function_definition)


State 284

   31 initializer: '{' initializer_list '}' •

    $default  reduce using rule 31 (initializer)


State 285

   32 initializer: '{' initializer_list ',' • '}'
   34 initializer_list: initializer_list ',' • initializer

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '{'           shift, and go to state 168
    '}'           shift, and go to state 297
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    initializer                go to state 298
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 170


State 286

   46 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 287

   42 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 288

   89 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 89 (argument_expression_list)


State 289

  134 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 134 (conditional_expression)


State 290

   61 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 61 (labeled_statement)


State 291

   65 selection_statement: IF '(' expression ')' • statement
   66                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 299
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 292

   67 selection_statement: SWITCH '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 300
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 293

   68 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 301
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 294

   69 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 302


State 295

   70 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   71                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER    shift, and go to state 55
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    '('           shift, and go to state 60
    ')'           shift, and go to state 303
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 304


State 296

   59 statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 59 (statement)


State 297

   32 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 32 (initializer)


State 298

   34 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 34 (initializer_list)


State 299

   65 selection_statement: IF '(' expression ')' statement •
   66                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 305

    ELSE      [reduce using rule 65 (selection_statement)]
    $default  reduce using rule 65 (selection_statement)


State 300

   67 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 67 (selection_statement)


State 301

   68 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 68 (iteration_statement)


State 302

   69 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  149 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 306
    ','  shift, and go to state 198


State 303

   70 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 307
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 304

   71 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  149 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 308
    ','  shift, and go to state 198


State 305

   66 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 309
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 306

   69 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 310


State 307

   70 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 70 (iteration_statement)


State 308

   71 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER    shift, and go to state 142
    INT_LITERAL   shift, and go to state 56
    SIZEOF        shift, and go to state 57
    INCREMENT_OP  shift, and go to state 58
    DECREMENT_OP  shift, and go to state 59
    CASE          shift, and go to state 143
    DEFAULT       shift, and go to state 144
    IF            shift, and go to state 145
    SWITCH        shift, and go to state 146
    WHILE         shift, and go to state 147
    DO            shift, and go to state 148
    FOR           shift, and go to state 149
    GOTO          shift, and go to state 150
    CONTINUE      shift, and go to state 151
    BREAK         shift, and go to state 152
    RETURN        shift, and go to state 153
    '{'           shift, and go to state 154
    '('           shift, and go to state 60
    ';'           shift, and go to state 156
    '-'           shift, and go to state 61
    '&'           shift, and go to state 62
    '*'           shift, and go to state 63
    '+'           shift, and go to state 64
    '~'           shift, and go to state 65
    '!'           shift, and go to state 66

    statement                  go to state 311
    labeled_statement          go to state 162
    expression_statement       go to state 163
    selection_statement        go to state 164
    iteration_statement        go to state 165
    jump_statement             go to state 166
    primary_expression         go to state 67
    postfix_expression         go to state 68
    unary_expression           go to state 106
    unary_operator             go to state 70
    cast_expression            go to state 71
    multiplicative_expression  go to state 72
    additive_expression        go to state 73
    shift_expression           go to state 74
    relational_expression      go to state 75
    equality_expression        go to state 76
    and_expression             go to state 77
    exclusive_or_expression    go to state 78
    inclusive_or_expression    go to state 79
    logical_and_expression     go to state 80
    logical_or_expression      go to state 81
    conditional_expression     go to state 107
    assignment_expression      go to state 108
    expression                 go to state 167


State 309

   66 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 66 (selection_statement)


State 310

   69 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 69 (iteration_statement)


State 311

   71 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 71 (iteration_statement)
