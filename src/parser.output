Nonterminals useless in grammar

    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    struct_declarator_list
    struct_declarator
    init_declarator_list


Terminals unused in grammar

    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    uminu


Rules useless in grammar

  188 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  189                          | struct_or_union '{' struct_declaration_list '}'
  190                          | struct_or_union IDENTIFIER

  191 struct_or_union: STRUCT
  192                | UNION

  193 struct_declaration_list: struct_declaration
  194                        | struct_declaration_list struct_declaration

  195 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  196 struct_declarator_list: struct_declarator
  197                       | struct_declarator_list ',' struct_declarator

  198 struct_declarator: declarator
  199                  | ':' constant_expression
  200                  | declarator ':' constant_expression


State 20 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 66 conflicts: 11 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement
    7                    | declaration_specifiers declarator ';'
    8                    | enum_specifier ';'
    9                    | declarator

   10 declarator: pointer direct_declarator
   11           | direct_declarator

   12 direct_declarator: IDENTIFIER
   13                  | '(' declarator ')'
   14                  | direct_declarator '[' constant_expression ']'
   15                  | direct_declarator '[' ']'
   16                  | direct_declarator '(' parameter_list ')'
   17                  | direct_declarator '(' identifier_list ')'
   18                  | direct_declarator '(' ')'

   19 parameter_list: parameter_declaration
   20               | parameter_list ',' parameter_declaration

   21 parameter_declaration: declaration_specifiers declarator
   22                      | declaration_specifiers abstract_declarator
   23                      | declaration_specifiers

   24 constant_expression: conditional_expression

   25 declaration: declaration_specifiers ';'
   26            | declaration_specifiers init_declarator ';'

   27 declaration_specifiers: type_specifier
   28                       | type_specifier declaration_specifiers
   29                       | TYPEDEF
   30                       | TYPEDEF declaration_specifiers

   31 init_declarator: declarator
   32                | declarator '=' initializer

   33 initializer: assignment_expression
   34            | '{' initializer_list '}'
   35            | '{' initializer_list ',' '}'

   36 initializer_list: initializer
   37                 | initializer_list ',' initializer

   38 abstract_declarator: pointer
   39                    | direct_abstract_declarator
   40                    | pointer direct_abstract_declarator

   41 direct_abstract_declarator: '(' abstract_declarator ')'
   42                           | '[' ']'
   43                           | '[' constant_expression ']'
   44                           | direct_abstract_declarator '[' ']'
   45                           | direct_abstract_declarator '[' constant_expression ']'
   46                           | '(' ')'
   47                           | '(' parameter_list ')'
   48                           | direct_abstract_declarator '(' ')'
   49                           | direct_abstract_declarator '(' parameter_list ')'

   50 compound_statement: '{' '}'
   51                   | '{' declaration_list '}'
   52                   | '{' statement_list '}'
   53                   | '{' declaration_list statement_list '}'

   54 declaration_list: declaration
   55                 | declaration_list declaration

   56 statement_list: statement
   57               | statement_list statement

   58 statement: labeled_statement
   59          | expression_statement
   60          | selection_statement
   61          | iteration_statement
   62          | jump_statement
   63          | compound_statement

   64 labeled_statement: IDENTIFIER ':' statement
   65                  | CASE constant_expression ':' statement
   66                  | DEFAULT ':' statement

   67 expression_statement: ';'
   68                     | expression ';'

   69 selection_statement: IF '(' expression ')' statement
   70                    | IF '(' expression ')' statement ELSE statement
   71                    | SWITCH '(' expression ')' statement

   72 iteration_statement: WHILE '(' expression ')' statement
   73                    | DO statement WHILE '(' expression ')' ';'
   74                    | FOR '(' expression_statement expression_statement ')' statement
   75                    | FOR '(' expression_statement expression_statement expression ')' statement

   76 jump_statement: GOTO IDENTIFIER ';'
   77               | CONTINUE ';'
   78               | BREAK ';'
   79               | RETURN ';'
   80               | RETURN expression ';'

   81 primary_expression: IDENTIFIER
   82                   | INT_LITERAL
   83                   | FLOAT_LITERAL
   84                   | CHAR_LITERAL
   85                   | '(' expression ')'

   86 postfix_expression: primary_expression
   87                   | postfix_expression '[' expression ']'
   88                   | postfix_expression '(' ')'
   89                   | postfix_expression '(' argument_expression_list ')'
   90                   | postfix_expression '.' IDENTIFIER
   91                   | postfix_expression POINTER_OP IDENTIFIER
   92                   | postfix_expression INCREMENT_OP
   93                   | postfix_expression DECREMENT_OP

   94 argument_expression_list: assignment_expression
   95                         | argument_expression_list ',' assignment_expression

   96 unary_expression: postfix_expression
   97                 | INCREMENT_OP unary_expression
   98                 | DECREMENT_OP unary_expression
   99                 | unary_operator cast_expression
  100                 | '-' unary_expression
  101                 | SIZEOF unary_expression
  102                 | SIZEOF '(' type_name ')'

  103 unary_operator: '&'
  104               | '*'
  105               | '+'
  106               | '-'
  107               | '~'
  108               | '!'

  109 cast_expression: unary_expression
  110                | '(' type_name ')' cast_expression

  111 multiplicative_expression: cast_expression
  112                          | multiplicative_expression '*' cast_expression
  113                          | multiplicative_expression '/' cast_expression
  114                          | multiplicative_expression '%' cast_expression

  115 additive_expression: multiplicative_expression
  116                    | additive_expression '+' multiplicative_expression
  117                    | additive_expression '-' multiplicative_expression

  118 shift_expression: additive_expression
  119                 | shift_expression LEFTSHIFT_OP additive_expression
  120                 | shift_expression RIGHTSHIFT_OP additive_expression

  121 relational_expression: shift_expression
  122                      | relational_expression '<' shift_expression
  123                      | relational_expression '>' shift_expression
  124                      | relational_expression LE_OP shift_expression
  125                      | relational_expression GE_OP shift_expression

  126 equality_expression: relational_expression
  127                    | equality_expression EQ_OP relational_expression
  128                    | equality_expression NE_OP relational_expression

  129 and_expression: equality_expression
  130               | and_expression '&' equality_expression

  131 exclusive_or_expression: and_expression
  132                        | exclusive_or_expression '^' and_expression

  133 inclusive_or_expression: exclusive_or_expression
  134                        | inclusive_or_expression '|' exclusive_or_expression

  135 logical_and_expression: inclusive_or_expression
  136                       | logical_and_expression AND_OP inclusive_or_expression

  137 logical_or_expression: logical_and_expression
  138                      | logical_or_expression OR_OP logical_and_expression

  139 conditional_expression: logical_or_expression
  140                       | logical_or_expression '?' expression ':' conditional_expression

  141 assignment_expression: conditional_expression
  142                      | unary_expression assignment_operator assignment_expression

  143 assignment_operator: '='
  144                    | MUL_ASSIGN
  145                    | DIV_ASSIGN
  146                    | MOD_ASSIGN
  147                    | ADD_ASSIGN
  148                    | SUB_ASSIGN
  149                    | LEFTSHIFT_ASSIGN
  150                    | RIGHTSHIFT_ASSIGN
  151                    | AND_ASSIGN
  152                    | XOR_ASSIGN
  153                    | OR_ASSIGN

  154 expression: assignment_expression
  155           | expression ',' assignment_expression

  156 type_specifier: VOID
  157               | CHAR
  158               | SHORT
  159               | INT
  160               | LONG
  161               | FLOAT
  162               | DOUBLE
  163               | SIGNED
  164               | UNSIGNED

  165 specifier_qualifier_list: type_specifier specifier_qualifier_list
  166                         | type_specifier
  167                         | type_qualifier specifier_qualifier_list
  168                         | type_qualifier

  169 enum_specifier: ENUM '{' enumerator_list '}'
  170               | ENUM IDENTIFIER '{' enumerator_list '}'
  171               | ENUM IDENTIFIER

  172 enumerator_list: enumerator
  173                | enumerator_list ',' enumerator

  174 enumerator: IDENTIFIER
  175           | IDENTIFIER '=' constant_expression

  176 type_qualifier: CONST
  177               | VOLATILE

  178 pointer: '*'
  179        | '*' type_qualifier_list
  180        | '*' pointer
  181        | '*' type_qualifier_list pointer

  182 type_qualifier_list: type_qualifier
  183                    | type_qualifier_list type_qualifier

  184 identifier_list: IDENTIFIER
  185                | identifier_list ',' IDENTIFIER

  186 type_name: specifier_qualifier_list
  187          | specifier_qualifier_list abstract_declarator


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 108
    '%' (37) 114
    '&' (38) 103 130
    '(' (40) 13 16 17 18 41 46 47 48 49 69 70 71 72 73 74 75 85 88 89 102 110
    ')' (41) 13 16 17 18 41 46 47 48 49 69 70 71 72 73 74 75 85 88 89 102 110
    '*' (42) 104 112 178 179 180 181
    '+' (43) 105 116
    ',' (44) 20 35 37 95 155 173 185
    '-' (45) 100 106 117
    '.' (46) 90
    '/' (47) 113
    ':' (58) 64 65 66 140
    ';' (59) 7 8 25 26 67 68 73 76 77 78 79 80
    '<' (60) 122
    '=' (61) 32 143 175
    '>' (62) 123
    '?' (63) 140
    '[' (91) 14 15 42 43 44 45 87
    ']' (93) 14 15 42 43 44 45 87
    '^' (94) 132
    '{' (123) 34 35 50 51 52 53 169 170
    '|' (124) 134
    '}' (125) 34 35 50 51 52 53 169 170
    '~' (126) 107
    error (256)
    IDENTIFIER <string> (258) 12 64 76 81 90 91 170 171 174 175 184 185
    INT_LITERAL <integer> (259) 82
    CHAR_LITERAL <string> (260) 84
    SIZEOF (261) 101 102
    FLOAT_LITERAL <numberFloat> (262) 83
    POINTER_OP (263) 91
    INCREMENT_OP (264) 92 97
    DECREMENT_OP (265) 93 98
    LEFTSHIFT_OP (266) 119
    RIGHTSHIFT_OP (267) 120
    LE_OP (268) 124
    GE_OP (269) 125
    EQ_OP (270) 127
    NE_OP (271) 128
    AND_OP (272) 136
    OR_OP (273) 138
    MUL_ASSIGN (274) 144
    DIV_ASSIGN (275) 145
    MOD_ASSIGN (276) 146
    ADD_ASSIGN (277) 147
    SUB_ASSIGN (278) 148
    LEFTSHIFT_ASSIGN (279) 149
    RIGHTSHIFT_ASSIGN (280) 150
    AND_ASSIGN (281) 151
    XOR_ASSIGN (282) 152
    OR_ASSIGN (283) 153
    TYPE_NAME (284)
    TYPEDEF (285) 29 30
    EXTERN (286)
    STATIC (287)
    AUTO (288)
    REGISTER (289)
    CHAR (290) 157
    SHORT (291) 158
    INT (292) 159
    LONG (293) 160
    SIGNED (294) 163
    UNSIGNED (295) 164
    FLOAT (296) 161
    DOUBLE (297) 162
    CONST (298) 176
    VOLATILE (299) 177
    VOID (300) 156
    STRUCT (301)
    UNION (302)
    ENUM (303) 169 170 171
    ELLIPSIS (304)
    CASE (305) 65
    DEFAULT (306) 66
    IF (307) 69 70
    ELSE (308) 70
    SWITCH (309) 71
    WHILE (310) 72 73
    DO (311) 73
    FOR (312) 74 75
    GOTO (313) 76
    CONTINUE (314) 77
    BREAK (315) 78
    RETURN (316) 79 80
    uminu (317)
    NOELSE (318)


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    ROOT (89)
        on left: 1
        on right: 0
    translation_unit <expressionList> (90)
        on left: 2 3
        on right: 1 3
    external_declaration <expr> (91)
        on left: 4 5
        on right: 2 3
    function_definition <expr> (92)
        on left: 6 7 8 9
        on right: 4
    declarator <expr> (93)
        on left: 10 11
        on right: 6 7 9 13 21 31 32
    direct_declarator <expr> (94)
        on left: 12 13 14 15 16 17 18
        on right: 10 11 14 15 16 17 18
    parameter_list <expressionList> (95)
        on left: 19 20
        on right: 16 20 47 49
    parameter_declaration <expr> (96)
        on left: 21 22 23
        on right: 19 20
    constant_expression <expr> (97)
        on left: 24
        on right: 14 43 45 65 175
    declaration <expr> (98)
        on left: 25 26
        on right: 5 54 55
    declaration_specifiers <string> (99)
        on left: 27 28 29 30
        on right: 6 7 21 22 23 25 26 28 30
    init_declarator <expr> (100)
        on left: 31 32
        on right: 26
    initializer <expr> (101)
        on left: 33 34 35
        on right: 32 36 37
    initializer_list <expressionList> (102)
        on left: 36 37
        on right: 34 35 37
    abstract_declarator <expr> (103)
        on left: 38 39 40
        on right: 22 41 187
    direct_abstract_declarator <expr> (104)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 39 40 44 45 48 49
    compound_statement <expressionList> (105)
        on left: 50 51 52 53
        on right: 6 63
    declaration_list <expressionList> (106)
        on left: 54 55
        on right: 51 53 55
    statement_list <expressionList> (107)
        on left: 56 57
        on right: 52 53 57
    statement <expr> (108)
        on left: 58 59 60 61 62 63
        on right: 56 57 64 65 66 69 70 71 72 73 74 75
    labeled_statement <expr> (109)
        on left: 64 65 66
        on right: 58
    expression_statement <expr> (110)
        on left: 67 68
        on right: 59 74 75
    selection_statement <expr> (111)
        on left: 69 70 71
        on right: 60
    iteration_statement <expr> (112)
        on left: 72 73 74 75
        on right: 61
    jump_statement <expr> (113)
        on left: 76 77 78 79 80
        on right: 62
    primary_expression <expr> (114)
        on left: 81 82 83 84 85
        on right: 86
    postfix_expression <expr> (115)
        on left: 86 87 88 89 90 91 92 93
        on right: 87 88 89 90 91 92 93 96
    argument_expression_list <expressionList> (116)
        on left: 94 95
        on right: 89 95
    unary_expression <expr> (117)
        on left: 96 97 98 99 100 101 102
        on right: 97 98 100 101 109 142
    unary_operator (118)
        on left: 103 104 105 106 107 108
        on right: 99
    cast_expression <expr> (119)
        on left: 109 110
        on right: 99 110 111 112 113 114
    multiplicative_expression <expr> (120)
        on left: 111 112 113 114
        on right: 112 113 114 115 116 117
    additive_expression <expr> (121)
        on left: 115 116 117
        on right: 116 117 118 119 120
    shift_expression <expr> (122)
        on left: 118 119 120
        on right: 119 120 121 122 123 124 125
    relational_expression <expr> (123)
        on left: 121 122 123 124 125
        on right: 122 123 124 125 126 127 128
    equality_expression <expr> (124)
        on left: 126 127 128
        on right: 127 128 129 130
    and_expression <expr> (125)
        on left: 129 130
        on right: 130 131 132
    exclusive_or_expression <expr> (126)
        on left: 131 132
        on right: 132 133 134
    inclusive_or_expression <expr> (127)
        on left: 133 134
        on right: 134 135 136
    logical_and_expression <expr> (128)
        on left: 135 136
        on right: 136 137 138
    logical_or_expression <expr> (129)
        on left: 137 138
        on right: 138 139 140
    conditional_expression <expr> (130)
        on left: 139 140
        on right: 24 140 141
    assignment_expression <expr> (131)
        on left: 141 142
        on right: 33 94 95 142 154 155
    assignment_operator <string> (132)
        on left: 143 144 145 146 147 148 149 150 151 152 153
        on right: 142
    expression <expr> (133)
        on left: 154 155
        on right: 68 69 70 71 72 73 75 80 85 87 140 155
    type_specifier <string> (134)
        on left: 156 157 158 159 160 161 162 163 164
        on right: 27 28 165 166
    specifier_qualifier_list <expressionList> (135)
        on left: 165 166 167 168
        on right: 165 167 186 187
    enum_specifier <expr> (136)
        on left: 169 170 171
        on right: 8
    enumerator_list <expressionList> (137)
        on left: 172 173
        on right: 169 170 173
    enumerator <expr> (138)
        on left: 174 175
        on right: 172 173
    type_qualifier (139)
        on left: 176 177
        on right: 167 168 182 183
    pointer <expr> (140)
        on left: 178 179 180 181
        on right: 10 38 40 180 181
    type_qualifier_list (141)
        on left: 182 183
        on right: 179 181 183
    identifier_list <expressionList> (142)
        on left: 184 185
        on right: 17 185
    type_name <expr> (143)
        on left: 186 187
        on right: 102 110


State 0

    0 $accept: . ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    ROOT                    go to state 15
    translation_unit        go to state 16
    external_declaration    go to state 17
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 1

   12 direct_declarator: IDENTIFIER .

    $default  reduce using rule 12 (direct_declarator)


State 2

   29 declaration_specifiers: TYPEDEF .
   30                       | TYPEDEF . declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 29 (declaration_specifiers)

    declaration_specifiers  go to state 26
    type_specifier          go to state 23


State 3

  157 type_specifier: CHAR .

    $default  reduce using rule 157 (type_specifier)


State 4

  158 type_specifier: SHORT .

    $default  reduce using rule 158 (type_specifier)


State 5

  159 type_specifier: INT .

    $default  reduce using rule 159 (type_specifier)


State 6

  160 type_specifier: LONG .

    $default  reduce using rule 160 (type_specifier)


State 7

  163 type_specifier: SIGNED .

    $default  reduce using rule 163 (type_specifier)


State 8

  164 type_specifier: UNSIGNED .

    $default  reduce using rule 164 (type_specifier)


State 9

  161 type_specifier: FLOAT .

    $default  reduce using rule 161 (type_specifier)


State 10

  162 type_specifier: DOUBLE .

    $default  reduce using rule 162 (type_specifier)


State 11

  156 type_specifier: VOID .

    $default  reduce using rule 156 (type_specifier)


State 12

  169 enum_specifier: ENUM . '{' enumerator_list '}'
  170               | ENUM . IDENTIFIER '{' enumerator_list '}'
  171               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 27
    '{'         shift, and go to state 28


State 13

  178 pointer: '*' .
  179        | '*' . type_qualifier_list
  180        | '*' . pointer
  181        | '*' . type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 178 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 14

   13 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 34
    direct_declarator  go to state 20
    pointer            go to state 25


State 15

    0 $accept: ROOT . $end

    $end  shift, and go to state 35


State 16

    1 ROOT: translation_unit .
    3 translation_unit: translation_unit . external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 1 (ROOT)

    external_declaration    go to state 36
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 17

    2 translation_unit: external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 18

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 19

    9 function_definition: declarator .

    $default  reduce using rule 9 (function_definition)


State 20

   11 declarator: direct_declarator .
   14 direct_declarator: direct_declarator . '[' constant_expression ']'
   15                  | direct_declarator . '[' ']'
   16                  | direct_declarator . '(' parameter_list ')'
   17                  | direct_declarator . '(' identifier_list ')'
   18                  | direct_declarator . '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 11 (declarator)]
    $default  reduce using rule 11 (declarator)


State 21

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 22

    6 function_definition: declaration_specifiers . declarator compound_statement
    7                    | declaration_specifiers . declarator ';'
   25 declaration: declaration_specifiers . ';'
   26            | declaration_specifiers . init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 40
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 23

   27 declaration_specifiers: type_specifier .
   28                       | type_specifier . declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 27 (declaration_specifiers)

    declaration_specifiers  go to state 42
    type_specifier          go to state 23


State 24

    8 function_definition: enum_specifier . ';'

    ';'  shift, and go to state 43


State 25

   10 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 14

    direct_declarator  go to state 44


State 26

   30 declaration_specifiers: TYPEDEF declaration_specifiers .

    $default  reduce using rule 30 (declaration_specifiers)


State 27

  170 enum_specifier: ENUM IDENTIFIER . '{' enumerator_list '}'
  171               | ENUM IDENTIFIER .

    '{'  shift, and go to state 45

    $default  reduce using rule 171 (enum_specifier)


State 28

  169 enum_specifier: ENUM '{' . enumerator_list '}'

    IDENTIFIER  shift, and go to state 46

    enumerator_list  go to state 47
    enumerator       go to state 48


State 29

  176 type_qualifier: CONST .

    $default  reduce using rule 176 (type_qualifier)


State 30

  177 type_qualifier: VOLATILE .

    $default  reduce using rule 177 (type_qualifier)


State 31

  182 type_qualifier_list: type_qualifier .

    $default  reduce using rule 182 (type_qualifier_list)


State 32

  180 pointer: '*' pointer .

    $default  reduce using rule 180 (pointer)


State 33

  179 pointer: '*' type_qualifier_list .
  181        | '*' type_qualifier_list . pointer
  183 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 179 (pointer)

    type_qualifier  go to state 49
    pointer         go to state 50


State 34

   13 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 51


State 35

    0 $accept: ROOT $end .

    $default  accept


State 36

    3 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 3 (translation_unit)


State 37

   16 direct_declarator: direct_declarator '(' . parameter_list ')'
   17                  | direct_declarator '(' . identifier_list ')'
   18                  | direct_declarator '(' . ')'

    IDENTIFIER  shift, and go to state 52
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ')'         shift, and go to state 53

    parameter_list          go to state 54
    parameter_declaration   go to state 55
    declaration_specifiers  go to state 56
    type_specifier          go to state 23
    identifier_list         go to state 57


State 38

   14 direct_declarator: direct_declarator '[' . constant_expression ']'
   15                  | direct_declarator '[' . ']'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    ']'            shift, and go to state 69
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    constant_expression        go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89


State 39

   25 declaration: declaration_specifiers ';' .

    $default  reduce using rule 25 (declaration)


State 40

    6 function_definition: declaration_specifiers declarator . compound_statement
    7                    | declaration_specifiers declarator . ';'
   31 init_declarator: declarator .
   32                | declarator . '=' initializer

    ';'  shift, and go to state 90
    '='  shift, and go to state 91
    '{'  shift, and go to state 92

    ';'  [reduce using rule 31 (init_declarator)]

    compound_statement  go to state 93


State 41

   26 declaration: declaration_specifiers init_declarator . ';'

    ';'  shift, and go to state 94


State 42

   28 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 28 (declaration_specifiers)


State 43

    8 function_definition: enum_specifier ';' .

    $default  reduce using rule 8 (function_definition)


State 44

   10 declarator: pointer direct_declarator .
   14 direct_declarator: direct_declarator . '[' constant_expression ']'
   15                  | direct_declarator . '[' ']'
   16                  | direct_declarator . '(' parameter_list ')'
   17                  | direct_declarator . '(' identifier_list ')'
   18                  | direct_declarator . '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 10 (declarator)]
    $default  reduce using rule 10 (declarator)


State 45

  170 enum_specifier: ENUM IDENTIFIER '{' . enumerator_list '}'

    IDENTIFIER  shift, and go to state 46

    enumerator_list  go to state 95
    enumerator       go to state 48


State 46

  174 enumerator: IDENTIFIER .
  175           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 96

    $default  reduce using rule 174 (enumerator)


State 47

  169 enum_specifier: ENUM '{' enumerator_list . '}'
  173 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 97
    '}'  shift, and go to state 98


State 48

  172 enumerator_list: enumerator .

    $default  reduce using rule 172 (enumerator_list)


State 49

  183 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 183 (type_qualifier_list)


State 50

  181 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 181 (pointer)


State 51

   13 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 13 (direct_declarator)


State 52

  184 identifier_list: IDENTIFIER .

    $default  reduce using rule 184 (identifier_list)


State 53

   18 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 18 (direct_declarator)


State 54

   16 direct_declarator: direct_declarator '(' parameter_list . ')'
   20 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 99
    ','  shift, and go to state 100


State 55

   19 parameter_list: parameter_declaration .

    $default  reduce using rule 19 (parameter_list)


State 56

   21 parameter_declaration: declaration_specifiers . declarator
   22                      | declaration_specifiers . abstract_declarator
   23                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 101
    '['         shift, and go to state 102

    $default  reduce using rule 23 (parameter_declaration)

    declarator                  go to state 103
    direct_declarator           go to state 20
    abstract_declarator         go to state 104
    direct_abstract_declarator  go to state 105
    pointer                     go to state 106


State 57

   17 direct_declarator: direct_declarator '(' identifier_list . ')'
  185 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 107
    ','  shift, and go to state 108


State 58

   81 primary_expression: IDENTIFIER .

    $default  reduce using rule 81 (primary_expression)


State 59

   82 primary_expression: INT_LITERAL .

    $default  reduce using rule 82 (primary_expression)


State 60

   84 primary_expression: CHAR_LITERAL .

    $default  reduce using rule 84 (primary_expression)


State 61

  101 unary_expression: SIZEOF . unary_expression
  102                 | SIZEOF . '(' type_name ')'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 109
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 110
    unary_operator      go to state 77


State 62

   83 primary_expression: FLOAT_LITERAL .

    $default  reduce using rule 83 (primary_expression)


State 63

   97 unary_expression: INCREMENT_OP . unary_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 111
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 112
    unary_operator      go to state 77


State 64

   98 unary_expression: DECREMENT_OP . unary_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 111
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 113
    unary_operator      go to state 77


State 65

  105 unary_operator: '+' .

    $default  reduce using rule 105 (unary_operator)


State 66

  100 unary_expression: '-' . unary_expression
  106 unary_operator: '-' .

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '*'            shift, and go to state 67
    '('            shift, and go to state 111
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    IDENTIFIER     [reduce using rule 106 (unary_operator)]
    INT_LITERAL    [reduce using rule 106 (unary_operator)]
    CHAR_LITERAL   [reduce using rule 106 (unary_operator)]
    SIZEOF         [reduce using rule 106 (unary_operator)]
    FLOAT_LITERAL  [reduce using rule 106 (unary_operator)]
    INCREMENT_OP   [reduce using rule 106 (unary_operator)]
    DECREMENT_OP   [reduce using rule 106 (unary_operator)]
    '('            [reduce using rule 106 (unary_operator)]
    '&'            [reduce using rule 106 (unary_operator)]
    '~'            [reduce using rule 106 (unary_operator)]
    '!'            [reduce using rule 106 (unary_operator)]
    $default       reduce using rule 106 (unary_operator)

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 114
    unary_operator      go to state 77


State 67

  104 unary_operator: '*' .

    $default  reduce using rule 104 (unary_operator)


State 68

   85 primary_expression: '(' . expression ')'
  110 cast_expression: '(' . type_name ')' cast_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    CONST          shift, and go to state 29
    VOLATILE       shift, and go to state 30
    VOID           shift, and go to state 11
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    type_qualifier             go to state 121
    type_name                  go to state 122


State 69

   15 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 15 (direct_declarator)


State 70

  103 unary_operator: '&' .

    $default  reduce using rule 103 (unary_operator)


State 71

  107 unary_operator: '~' .

    $default  reduce using rule 107 (unary_operator)


State 72

  108 unary_operator: '!' .

    $default  reduce using rule 108 (unary_operator)


State 73

   14 direct_declarator: direct_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 123


State 74

   86 postfix_expression: primary_expression .

    $default  reduce using rule 86 (postfix_expression)


State 75

   87 postfix_expression: postfix_expression . '[' expression ']'
   88                   | postfix_expression . '(' ')'
   89                   | postfix_expression . '(' argument_expression_list ')'
   90                   | postfix_expression . '.' IDENTIFIER
   91                   | postfix_expression . POINTER_OP IDENTIFIER
   92                   | postfix_expression . INCREMENT_OP
   93                   | postfix_expression . DECREMENT_OP
   96 unary_expression: postfix_expression .

    POINTER_OP    shift, and go to state 124
    INCREMENT_OP  shift, and go to state 125
    DECREMENT_OP  shift, and go to state 126
    '('           shift, and go to state 127
    '['           shift, and go to state 128
    '.'           shift, and go to state 129

    $default  reduce using rule 96 (unary_expression)


State 76

  109 cast_expression: unary_expression .

    $default  reduce using rule 109 (cast_expression)


State 77

   99 unary_expression: unary_operator . cast_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 76
    unary_operator      go to state 77
    cast_expression     go to state 130


State 78

  111 multiplicative_expression: cast_expression .

    $default  reduce using rule 111 (multiplicative_expression)


State 79

  112 multiplicative_expression: multiplicative_expression . '*' cast_expression
  113                          | multiplicative_expression . '/' cast_expression
  114                          | multiplicative_expression . '%' cast_expression
  115 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 131
    '/'  shift, and go to state 132
    '%'  shift, and go to state 133

    $default  reduce using rule 115 (additive_expression)


State 80

  116 additive_expression: additive_expression . '+' multiplicative_expression
  117                    | additive_expression . '-' multiplicative_expression
  118 shift_expression: additive_expression .

    '+'  shift, and go to state 134
    '-'  shift, and go to state 135

    $default  reduce using rule 118 (shift_expression)


State 81

  119 shift_expression: shift_expression . LEFTSHIFT_OP additive_expression
  120                 | shift_expression . RIGHTSHIFT_OP additive_expression
  121 relational_expression: shift_expression .

    LEFTSHIFT_OP   shift, and go to state 136
    RIGHTSHIFT_OP  shift, and go to state 137

    $default  reduce using rule 121 (relational_expression)


State 82

  122 relational_expression: relational_expression . '<' shift_expression
  123                      | relational_expression . '>' shift_expression
  124                      | relational_expression . LE_OP shift_expression
  125                      | relational_expression . GE_OP shift_expression
  126 equality_expression: relational_expression .

    LE_OP  shift, and go to state 138
    GE_OP  shift, and go to state 139
    '<'    shift, and go to state 140
    '>'    shift, and go to state 141

    $default  reduce using rule 126 (equality_expression)


State 83

  127 equality_expression: equality_expression . EQ_OP relational_expression
  128                    | equality_expression . NE_OP relational_expression
  129 and_expression: equality_expression .

    EQ_OP  shift, and go to state 142
    NE_OP  shift, and go to state 143

    $default  reduce using rule 129 (and_expression)


State 84

  130 and_expression: and_expression . '&' equality_expression
  131 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 144

    $default  reduce using rule 131 (exclusive_or_expression)


State 85

  132 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  133 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 145

    $default  reduce using rule 133 (inclusive_or_expression)


State 86

  134 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  135 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 146

    $default  reduce using rule 135 (logical_and_expression)


State 87

  136 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
  137 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 147

    $default  reduce using rule 137 (logical_or_expression)


State 88

  138 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  139 conditional_expression: logical_or_expression .
  140                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 148
    '?'    shift, and go to state 149

    $default  reduce using rule 139 (conditional_expression)


State 89

   24 constant_expression: conditional_expression .

    $default  reduce using rule 24 (constant_expression)


State 90

    7 function_definition: declaration_specifiers declarator ';' .

    $default  reduce using rule 7 (function_definition)


State 91

   32 init_declarator: declarator '=' . initializer

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '{'            shift, and go to state 150
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    initializer                go to state 151
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 152


State 92

   50 compound_statement: '{' . '}'
   51                   | '{' . declaration_list '}'
   52                   | '{' . statement_list '}'
   53                   | '{' . declaration_list statement_list '}'

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    TYPEDEF        shift, and go to state 2
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    VOID           shift, and go to state 11
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '}'            shift, and go to state 166
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    declaration                go to state 167
    declaration_specifiers     go to state 168
    compound_statement         go to state 169
    declaration_list           go to state 170
    statement_list             go to state 171
    statement                  go to state 172
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178
    type_specifier             go to state 23


State 93

    6 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 6 (function_definition)


State 94

   26 declaration: declaration_specifiers init_declarator ';' .

    $default  reduce using rule 26 (declaration)


State 95

  170 enum_specifier: ENUM IDENTIFIER '{' enumerator_list . '}'
  173 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 97
    '}'  shift, and go to state 179


State 96

  175 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    constant_expression        go to state 180
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89


State 97

  173 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 46

    enumerator  go to state 181


State 98

  169 enum_specifier: ENUM '{' enumerator_list '}' .

    $default  reduce using rule 169 (enum_specifier)


State 99

   16 direct_declarator: direct_declarator '(' parameter_list ')' .

    $default  reduce using rule 16 (direct_declarator)


State 100

   20 parameter_list: parameter_list ',' . parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    parameter_declaration   go to state 182
    declaration_specifiers  go to state 56
    type_specifier          go to state 23


State 101

   13 direct_declarator: '(' . declarator ')'
   41 direct_abstract_declarator: '(' . abstract_declarator ')'
   46                           | '(' . ')'
   47                           | '(' . parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    '*'         shift, and go to state 13
    '('         shift, and go to state 101
    ')'         shift, and go to state 183
    '['         shift, and go to state 102

    declarator                  go to state 34
    direct_declarator           go to state 20
    parameter_list              go to state 184
    parameter_declaration       go to state 55
    declaration_specifiers      go to state 56
    abstract_declarator         go to state 185
    direct_abstract_declarator  go to state 105
    type_specifier              go to state 23
    pointer                     go to state 106


State 102

   42 direct_abstract_declarator: '[' . ']'
   43                           | '[' . constant_expression ']'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    ']'            shift, and go to state 186
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    constant_expression        go to state 187
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89


State 103

   21 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 21 (parameter_declaration)


State 104

   22 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 22 (parameter_declaration)


State 105

   39 abstract_declarator: direct_abstract_declarator .
   44 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
   45                           | direct_abstract_declarator . '[' constant_expression ']'
   48                           | direct_abstract_declarator . '(' ')'
   49                           | direct_abstract_declarator . '(' parameter_list ')'

    '('  shift, and go to state 188
    '['  shift, and go to state 189

    $default  reduce using rule 39 (abstract_declarator)


State 106

   10 declarator: pointer . direct_declarator
   38 abstract_declarator: pointer .
   40                    | pointer . direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 101
    '['         shift, and go to state 102

    $default  reduce using rule 38 (abstract_declarator)

    direct_declarator           go to state 44
    direct_abstract_declarator  go to state 190


State 107

   17 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 17 (direct_declarator)


State 108

  185 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 191


State 109

   85 primary_expression: '(' . expression ')'
  102 unary_expression: SIZEOF '(' . type_name ')'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    CONST          shift, and go to state 29
    VOLATILE       shift, and go to state 30
    VOID           shift, and go to state 11
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    type_qualifier             go to state 121
    type_name                  go to state 192


State 110

  101 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 101 (unary_expression)


State 111

   85 primary_expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 118


State 112

   97 unary_expression: INCREMENT_OP unary_expression .

    $default  reduce using rule 97 (unary_expression)


State 113

   98 unary_expression: DECREMENT_OP unary_expression .

    $default  reduce using rule 98 (unary_expression)


State 114

  100 unary_expression: '-' unary_expression .

    $default  reduce using rule 100 (unary_expression)


State 115

  109 cast_expression: unary_expression .
  142 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 193
    DIV_ASSIGN         shift, and go to state 194
    MOD_ASSIGN         shift, and go to state 195
    ADD_ASSIGN         shift, and go to state 196
    SUB_ASSIGN         shift, and go to state 197
    LEFTSHIFT_ASSIGN   shift, and go to state 198
    RIGHTSHIFT_ASSIGN  shift, and go to state 199
    AND_ASSIGN         shift, and go to state 200
    XOR_ASSIGN         shift, and go to state 201
    OR_ASSIGN          shift, and go to state 202
    '='                shift, and go to state 203

    $default  reduce using rule 109 (cast_expression)

    assignment_operator  go to state 204


State 116

  141 assignment_expression: conditional_expression .

    $default  reduce using rule 141 (assignment_expression)


State 117

  154 expression: assignment_expression .

    $default  reduce using rule 154 (expression)


State 118

   85 primary_expression: '(' expression . ')'
  155 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 205
    ','  shift, and go to state 206


State 119

  165 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  166                         | type_specifier .

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11

    $default  reduce using rule 166 (specifier_qualifier_list)

    type_specifier            go to state 119
    specifier_qualifier_list  go to state 207
    type_qualifier            go to state 121


State 120

  186 type_name: specifier_qualifier_list .
  187          | specifier_qualifier_list . abstract_declarator

    '*'  shift, and go to state 13
    '('  shift, and go to state 208
    '['  shift, and go to state 102

    $default  reduce using rule 186 (type_name)

    abstract_declarator         go to state 209
    direct_abstract_declarator  go to state 105
    pointer                     go to state 210


State 121

  167 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  168                         | type_qualifier .

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11

    $default  reduce using rule 168 (specifier_qualifier_list)

    type_specifier            go to state 119
    specifier_qualifier_list  go to state 211
    type_qualifier            go to state 121


State 122

  110 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 212


State 123

   14 direct_declarator: direct_declarator '[' constant_expression ']' .

    $default  reduce using rule 14 (direct_declarator)


State 124

   91 postfix_expression: postfix_expression POINTER_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 213


State 125

   92 postfix_expression: postfix_expression INCREMENT_OP .

    $default  reduce using rule 92 (postfix_expression)


State 126

   93 postfix_expression: postfix_expression DECREMENT_OP .

    $default  reduce using rule 93 (postfix_expression)


State 127

   88 postfix_expression: postfix_expression '(' . ')'
   89                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    ')'            shift, and go to state 214
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    argument_expression_list   go to state 215
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 216


State 128

   87 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 217


State 129

   90 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 218


State 130

   99 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 99 (unary_expression)


State 131

  112 multiplicative_expression: multiplicative_expression '*' . cast_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 76
    unary_operator      go to state 77
    cast_expression     go to state 219


State 132

  113 multiplicative_expression: multiplicative_expression '/' . cast_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 76
    unary_operator      go to state 77
    cast_expression     go to state 220


State 133

  114 multiplicative_expression: multiplicative_expression '%' . cast_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 76
    unary_operator      go to state 77
    cast_expression     go to state 221


State 134

  116 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 222


State 135

  117 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 223


State 136

  119 shift_expression: shift_expression LEFTSHIFT_OP . additive_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 224


State 137

  120 shift_expression: shift_expression RIGHTSHIFT_OP . additive_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 225


State 138

  124 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 226


State 139

  125 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 227


State 140

  122 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 228


State 141

  123 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 229


State 142

  127 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 230


State 143

  128 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 231


State 144

  130 and_expression: and_expression '&' . equality_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 232


State 145

  132 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 233


State 146

  134 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 234


State 147

  136 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 235


State 148

  138 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 236


State 149

  140 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 237


State 150

   34 initializer: '{' . initializer_list '}'
   35            | '{' . initializer_list ',' '}'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '{'            shift, and go to state 150
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    initializer                go to state 238
    initializer_list           go to state 239
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 152


State 151

   32 init_declarator: declarator '=' initializer .

    $default  reduce using rule 32 (init_declarator)


State 152

   33 initializer: assignment_expression .

    $default  reduce using rule 33 (initializer)


State 153

   64 labeled_statement: IDENTIFIER . ':' statement
   81 primary_expression: IDENTIFIER .

    ':'  shift, and go to state 240

    $default  reduce using rule 81 (primary_expression)


State 154

   65 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    constant_expression        go to state 241
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89


State 155

   66 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 242


State 156

   69 selection_statement: IF . '(' expression ')' statement
   70                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 243


State 157

   71 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 244


State 158

   72 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 245


State 159

   73 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 246
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 160

   74 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
   75                    | FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 247


State 161

   76 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 248


State 162

   77 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 249


State 163

   78 jump_statement: BREAK . ';'

    ';'  shift, and go to state 250


State 164

   79 jump_statement: RETURN . ';'
   80               | RETURN . expression ';'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 251
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 252


State 165

   67 expression_statement: ';' .

    $default  reduce using rule 67 (expression_statement)


State 166

   50 compound_statement: '{' '}' .

    $default  reduce using rule 50 (compound_statement)


State 167

   54 declaration_list: declaration .

    $default  reduce using rule 54 (declaration_list)


State 168

   25 declaration: declaration_specifiers . ';'
   26            | declaration_specifiers . init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 253
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 169

   63 statement: compound_statement .

    $default  reduce using rule 63 (statement)


State 170

   51 compound_statement: '{' declaration_list . '}'
   53                   | '{' declaration_list . statement_list '}'
   55 declaration_list: declaration_list . declaration

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    TYPEDEF        shift, and go to state 2
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    VOID           shift, and go to state 11
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '}'            shift, and go to state 254
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    declaration                go to state 255
    declaration_specifiers     go to state 168
    compound_statement         go to state 169
    statement_list             go to state 256
    statement                  go to state 172
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178
    type_specifier             go to state 23


State 171

   52 compound_statement: '{' statement_list . '}'
   57 statement_list: statement_list . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '}'            shift, and go to state 257
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 258
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 172

   56 statement_list: statement .

    $default  reduce using rule 56 (statement_list)


State 173

   58 statement: labeled_statement .

    $default  reduce using rule 58 (statement)


State 174

   59 statement: expression_statement .

    $default  reduce using rule 59 (statement)


State 175

   60 statement: selection_statement .

    $default  reduce using rule 60 (statement)


State 176

   61 statement: iteration_statement .

    $default  reduce using rule 61 (statement)


State 177

   62 statement: jump_statement .

    $default  reduce using rule 62 (statement)


State 178

   68 expression_statement: expression . ';'
  155 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 259
    ','  shift, and go to state 206


State 179

  170 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' .

    $default  reduce using rule 170 (enum_specifier)


State 180

  175 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 175 (enumerator)


State 181

  173 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 173 (enumerator_list)


State 182

   20 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 20 (parameter_list)


State 183

   46 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 46 (direct_abstract_declarator)


State 184

   20 parameter_list: parameter_list . ',' parameter_declaration
   47 direct_abstract_declarator: '(' parameter_list . ')'

    ')'  shift, and go to state 260
    ','  shift, and go to state 100


State 185

   41 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 261


State 186

   42 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 42 (direct_abstract_declarator)


State 187

   43 direct_abstract_declarator: '[' constant_expression . ']'

    ']'  shift, and go to state 262


State 188

   48 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
   49                           | direct_abstract_declarator '(' . parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ')'       shift, and go to state 263

    parameter_list          go to state 264
    parameter_declaration   go to state 55
    declaration_specifiers  go to state 56
    type_specifier          go to state 23


State 189

   44 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
   45                           | direct_abstract_declarator '[' . constant_expression ']'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    ']'            shift, and go to state 265
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    constant_expression        go to state 266
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89


State 190

   40 abstract_declarator: pointer direct_abstract_declarator .
   44 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
   45                           | direct_abstract_declarator . '[' constant_expression ']'
   48                           | direct_abstract_declarator . '(' ')'
   49                           | direct_abstract_declarator . '(' parameter_list ')'

    '('  shift, and go to state 188
    '['  shift, and go to state 189

    $default  reduce using rule 40 (abstract_declarator)


State 191

  185 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 185 (identifier_list)


State 192

  102 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 267


State 193

  144 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 144 (assignment_operator)


State 194

  145 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 145 (assignment_operator)


State 195

  146 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 146 (assignment_operator)


State 196

  147 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 147 (assignment_operator)


State 197

  148 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 148 (assignment_operator)


State 198

  149 assignment_operator: LEFTSHIFT_ASSIGN .

    $default  reduce using rule 149 (assignment_operator)


State 199

  150 assignment_operator: RIGHTSHIFT_ASSIGN .

    $default  reduce using rule 150 (assignment_operator)


State 200

  151 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 151 (assignment_operator)


State 201

  152 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 152 (assignment_operator)


State 202

  153 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 153 (assignment_operator)


State 203

  143 assignment_operator: '=' .

    $default  reduce using rule 143 (assignment_operator)


State 204

  142 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 268


State 205

   85 primary_expression: '(' expression ')' .

    $default  reduce using rule 85 (primary_expression)


State 206

  155 expression: expression ',' . assignment_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 269


State 207

  165 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 165 (specifier_qualifier_list)


State 208

   41 direct_abstract_declarator: '(' . abstract_declarator ')'
   46                           | '(' . ')'
   47                           | '(' . parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    '*'       shift, and go to state 13
    '('       shift, and go to state 208
    ')'       shift, and go to state 183
    '['       shift, and go to state 102

    parameter_list              go to state 184
    parameter_declaration       go to state 55
    declaration_specifiers      go to state 56
    abstract_declarator         go to state 185
    direct_abstract_declarator  go to state 105
    type_specifier              go to state 23
    pointer                     go to state 210


State 209

  187 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 187 (type_name)


State 210

   38 abstract_declarator: pointer .
   40                    | pointer . direct_abstract_declarator

    '('  shift, and go to state 208
    '['  shift, and go to state 102

    $default  reduce using rule 38 (abstract_declarator)

    direct_abstract_declarator  go to state 190


State 211

  167 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 167 (specifier_qualifier_list)


State 212

  110 cast_expression: '(' type_name ')' . cast_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 76
    unary_operator      go to state 77
    cast_expression     go to state 270


State 213

   91 postfix_expression: postfix_expression POINTER_OP IDENTIFIER .

    $default  reduce using rule 91 (postfix_expression)


State 214

   88 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 88 (postfix_expression)


State 215

   89 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   95 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 271
    ','  shift, and go to state 272


State 216

   94 argument_expression_list: assignment_expression .

    $default  reduce using rule 94 (argument_expression_list)


State 217

   87 postfix_expression: postfix_expression '[' expression . ']'
  155 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 273
    ','  shift, and go to state 206


State 218

   90 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 90 (postfix_expression)


State 219

  112 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 112 (multiplicative_expression)


State 220

  113 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 113 (multiplicative_expression)


State 221

  114 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 114 (multiplicative_expression)


State 222

  112 multiplicative_expression: multiplicative_expression . '*' cast_expression
  113                          | multiplicative_expression . '/' cast_expression
  114                          | multiplicative_expression . '%' cast_expression
  116 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 131
    '/'  shift, and go to state 132
    '%'  shift, and go to state 133

    $default  reduce using rule 116 (additive_expression)


State 223

  112 multiplicative_expression: multiplicative_expression . '*' cast_expression
  113                          | multiplicative_expression . '/' cast_expression
  114                          | multiplicative_expression . '%' cast_expression
  117 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 131
    '/'  shift, and go to state 132
    '%'  shift, and go to state 133

    $default  reduce using rule 117 (additive_expression)


State 224

  116 additive_expression: additive_expression . '+' multiplicative_expression
  117                    | additive_expression . '-' multiplicative_expression
  119 shift_expression: shift_expression LEFTSHIFT_OP additive_expression .

    '+'  shift, and go to state 134
    '-'  shift, and go to state 135

    $default  reduce using rule 119 (shift_expression)


State 225

  116 additive_expression: additive_expression . '+' multiplicative_expression
  117                    | additive_expression . '-' multiplicative_expression
  120 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression .

    '+'  shift, and go to state 134
    '-'  shift, and go to state 135

    $default  reduce using rule 120 (shift_expression)


State 226

  119 shift_expression: shift_expression . LEFTSHIFT_OP additive_expression
  120                 | shift_expression . RIGHTSHIFT_OP additive_expression
  124 relational_expression: relational_expression LE_OP shift_expression .

    LEFTSHIFT_OP   shift, and go to state 136
    RIGHTSHIFT_OP  shift, and go to state 137

    $default  reduce using rule 124 (relational_expression)


State 227

  119 shift_expression: shift_expression . LEFTSHIFT_OP additive_expression
  120                 | shift_expression . RIGHTSHIFT_OP additive_expression
  125 relational_expression: relational_expression GE_OP shift_expression .

    LEFTSHIFT_OP   shift, and go to state 136
    RIGHTSHIFT_OP  shift, and go to state 137

    $default  reduce using rule 125 (relational_expression)


State 228

  119 shift_expression: shift_expression . LEFTSHIFT_OP additive_expression
  120                 | shift_expression . RIGHTSHIFT_OP additive_expression
  122 relational_expression: relational_expression '<' shift_expression .

    LEFTSHIFT_OP   shift, and go to state 136
    RIGHTSHIFT_OP  shift, and go to state 137

    $default  reduce using rule 122 (relational_expression)


State 229

  119 shift_expression: shift_expression . LEFTSHIFT_OP additive_expression
  120                 | shift_expression . RIGHTSHIFT_OP additive_expression
  123 relational_expression: relational_expression '>' shift_expression .

    LEFTSHIFT_OP   shift, and go to state 136
    RIGHTSHIFT_OP  shift, and go to state 137

    $default  reduce using rule 123 (relational_expression)


State 230

  122 relational_expression: relational_expression . '<' shift_expression
  123                      | relational_expression . '>' shift_expression
  124                      | relational_expression . LE_OP shift_expression
  125                      | relational_expression . GE_OP shift_expression
  127 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 138
    GE_OP  shift, and go to state 139
    '<'    shift, and go to state 140
    '>'    shift, and go to state 141

    $default  reduce using rule 127 (equality_expression)


State 231

  122 relational_expression: relational_expression . '<' shift_expression
  123                      | relational_expression . '>' shift_expression
  124                      | relational_expression . LE_OP shift_expression
  125                      | relational_expression . GE_OP shift_expression
  128 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 138
    GE_OP  shift, and go to state 139
    '<'    shift, and go to state 140
    '>'    shift, and go to state 141

    $default  reduce using rule 128 (equality_expression)


State 232

  127 equality_expression: equality_expression . EQ_OP relational_expression
  128                    | equality_expression . NE_OP relational_expression
  130 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 142
    NE_OP  shift, and go to state 143

    $default  reduce using rule 130 (and_expression)


State 233

  130 and_expression: and_expression . '&' equality_expression
  132 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 144

    $default  reduce using rule 132 (exclusive_or_expression)


State 234

  132 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  134 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 145

    $default  reduce using rule 134 (inclusive_or_expression)


State 235

  134 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  136 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  shift, and go to state 146

    $default  reduce using rule 136 (logical_and_expression)


State 236

  136 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
  138 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 147

    $default  reduce using rule 138 (logical_or_expression)


State 237

  140 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
  155 expression: expression . ',' assignment_expression

    ','  shift, and go to state 206
    ':'  shift, and go to state 274


State 238

   36 initializer_list: initializer .

    $default  reduce using rule 36 (initializer_list)


State 239

   34 initializer: '{' initializer_list . '}'
   35            | '{' initializer_list . ',' '}'
   37 initializer_list: initializer_list . ',' initializer

    ','  shift, and go to state 275
    '}'  shift, and go to state 276


State 240

   64 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 277
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 241

   65 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 278


State 242

   66 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 279
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 243

   69 selection_statement: IF '(' . expression ')' statement
   70                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 280


State 244

   71 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 281


State 245

   72 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 282


State 246

   73 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 283


State 247

   74 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
   75                    | FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    expression_statement       go to state 284
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 248

   76 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 285


State 249

   77 jump_statement: CONTINUE ';' .

    $default  reduce using rule 77 (jump_statement)


State 250

   78 jump_statement: BREAK ';' .

    $default  reduce using rule 78 (jump_statement)


State 251

   79 jump_statement: RETURN ';' .

    $default  reduce using rule 79 (jump_statement)


State 252

   80 jump_statement: RETURN expression . ';'
  155 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 286
    ','  shift, and go to state 206


State 253

   31 init_declarator: declarator .
   32                | declarator . '=' initializer

    '='  shift, and go to state 91

    $default  reduce using rule 31 (init_declarator)


State 254

   51 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 51 (compound_statement)


State 255

   55 declaration_list: declaration_list declaration .

    $default  reduce using rule 55 (declaration_list)


State 256

   53 compound_statement: '{' declaration_list statement_list . '}'
   57 statement_list: statement_list . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '}'            shift, and go to state 287
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 258
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 257

   52 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 52 (compound_statement)


State 258

   57 statement_list: statement_list statement .

    $default  reduce using rule 57 (statement_list)


State 259

   68 expression_statement: expression ';' .

    $default  reduce using rule 68 (expression_statement)


State 260

   47 direct_abstract_declarator: '(' parameter_list ')' .

    $default  reduce using rule 47 (direct_abstract_declarator)


State 261

   41 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 41 (direct_abstract_declarator)


State 262

   43 direct_abstract_declarator: '[' constant_expression ']' .

    $default  reduce using rule 43 (direct_abstract_declarator)


State 263

   48 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 48 (direct_abstract_declarator)


State 264

   20 parameter_list: parameter_list . ',' parameter_declaration
   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list . ')'

    ')'  shift, and go to state 288
    ','  shift, and go to state 100


State 265

   44 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 44 (direct_abstract_declarator)


State 266

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 289


State 267

  102 unary_expression: SIZEOF '(' type_name ')' .

    $default  reduce using rule 102 (unary_expression)


State 268

  142 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 142 (assignment_expression)


State 269

  155 expression: expression ',' assignment_expression .

    $default  reduce using rule 155 (expression)


State 270

  110 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 110 (cast_expression)


State 271

   89 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 89 (postfix_expression)


State 272

   95 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 290


State 273

   87 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 87 (postfix_expression)


State 274

  140 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 291


State 275

   35 initializer: '{' initializer_list ',' . '}'
   37 initializer_list: initializer_list ',' . initializer

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '{'            shift, and go to state 150
    '}'            shift, and go to state 292
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    initializer                go to state 293
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 152


State 276

   34 initializer: '{' initializer_list '}' .

    $default  reduce using rule 34 (initializer)


State 277

   64 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 64 (labeled_statement)


State 278

   65 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 294
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 279

   66 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 66 (labeled_statement)


State 280

   69 selection_statement: IF '(' expression . ')' statement
   70                    | IF '(' expression . ')' statement ELSE statement
  155 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 295
    ','  shift, and go to state 206


State 281

   71 selection_statement: SWITCH '(' expression . ')' statement
  155 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 296
    ','  shift, and go to state 206


State 282

   72 iteration_statement: WHILE '(' expression . ')' statement
  155 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 297
    ','  shift, and go to state 206


State 283

   73 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 298


State 284

   74 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
   75                    | FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    expression_statement       go to state 299
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 285

   76 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 76 (jump_statement)


State 286

   80 jump_statement: RETURN expression ';' .

    $default  reduce using rule 80 (jump_statement)


State 287

   53 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 53 (compound_statement)


State 288

   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' .

    $default  reduce using rule 49 (direct_abstract_declarator)


State 289

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' .

    $default  reduce using rule 45 (direct_abstract_declarator)


State 290

   95 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 95 (argument_expression_list)


State 291

  140 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 140 (conditional_expression)


State 292

   35 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 35 (initializer)


State 293

   37 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 37 (initializer_list)


State 294

   65 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 65 (labeled_statement)


State 295

   69 selection_statement: IF '(' expression ')' . statement
   70                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 300
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 296

   71 selection_statement: SWITCH '(' expression ')' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 301
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 297

   72 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 302
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 298

   73 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 303


State 299

   74 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
   75                    | FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER     shift, and go to state 58
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    '('            shift, and go to state 68
    ')'            shift, and go to state 304
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 305


State 300

   69 selection_statement: IF '(' expression ')' statement .
   70                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 306

    $default  reduce using rule 69 (selection_statement)


State 301

   71 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 71 (selection_statement)


State 302

   72 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 72 (iteration_statement)


State 303

   73 iteration_statement: DO statement WHILE '(' expression . ')' ';'
  155 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 307
    ','  shift, and go to state 206


State 304

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 308
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 305

   75 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement
  155 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 309
    ','  shift, and go to state 206


State 306

   70 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 310
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 307

   73 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 311


State 308

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 74 (iteration_statement)


State 309

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER     shift, and go to state 153
    INT_LITERAL    shift, and go to state 59
    CHAR_LITERAL   shift, and go to state 60
    SIZEOF         shift, and go to state 61
    FLOAT_LITERAL  shift, and go to state 62
    INCREMENT_OP   shift, and go to state 63
    DECREMENT_OP   shift, and go to state 64
    CASE           shift, and go to state 154
    DEFAULT        shift, and go to state 155
    IF             shift, and go to state 156
    SWITCH         shift, and go to state 157
    WHILE          shift, and go to state 158
    DO             shift, and go to state 159
    FOR            shift, and go to state 160
    GOTO           shift, and go to state 161
    CONTINUE       shift, and go to state 162
    BREAK          shift, and go to state 163
    RETURN         shift, and go to state 164
    '+'            shift, and go to state 65
    '-'            shift, and go to state 66
    '*'            shift, and go to state 67
    ';'            shift, and go to state 165
    '('            shift, and go to state 68
    '{'            shift, and go to state 92
    '&'            shift, and go to state 70
    '~'            shift, and go to state 71
    '!'            shift, and go to state 72

    compound_statement         go to state 169
    statement                  go to state 312
    labeled_statement          go to state 173
    expression_statement       go to state 174
    selection_statement        go to state 175
    iteration_statement        go to state 176
    jump_statement             go to state 177
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 115
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    expression                 go to state 178


State 310

   70 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 70 (selection_statement)


State 311

   73 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 73 (iteration_statement)


State 312

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 75 (iteration_statement)
