Nonterminals useless in grammar

    init_declarator_list
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    struct_declarator_list
    struct_declarator


Terminals unused in grammar

    CHAR_LITERAL
    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    uminu


Rules useless in grammar

  185 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  186                          | struct_or_union '{' struct_declaration_list '}'
  187                          | struct_or_union IDENTIFIER

  188 struct_or_union: STRUCT
  189                | UNION

  190 struct_declaration_list: struct_declaration
  191                        | struct_declaration_list struct_declaration

  192 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  193 struct_declarator_list: struct_declarator
  194                       | struct_declarator_list ',' struct_declarator

  195 struct_declarator: declarator
  196                  | ':' constant_expression
  197                  | declarator ':' constant_expression


State 20 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 63 conflicts: 9 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement
    7                    | declarator

    8 declarator: pointer direct_declarator
    9           | direct_declarator

   10 direct_declarator: IDENTIFIER
   11                  | '(' declarator ')'
   12                  | direct_declarator '[' constant_expression ']'
   13                  | direct_declarator '[' ']'
   14                  | direct_declarator '(' parameter_list ')'
   15                  | direct_declarator '(' identifier_list ')'
   16                  | direct_declarator '(' ')'

   17 parameter_list: parameter_declaration
   18               | parameter_list ',' parameter_declaration

   19 parameter_declaration: declaration_specifiers declarator
   20                      | declaration_specifiers abstract_declarator
   21                      | declaration_specifiers

   22 constant_expression: conditional_expression

   23 declaration: declaration_specifiers ';'
   24            | declaration_specifiers init_declarator ';'

   25 declaration_specifiers: type_specifier
   26                       | type_specifier declaration_specifiers
   27                       | TYPEDEF
   28                       | TYPEDEF declaration_specifiers

   29 init_declarator: declarator
   30                | declarator '=' initializer

   31 initializer: assignment_expression
   32            | '{' initializer_list '}'
   33            | '{' initializer_list ',' '}'

   34 initializer_list: initializer
   35                 | initializer_list ',' initializer

   36 abstract_declarator: pointer
   37                    | direct_abstract_declarator
   38                    | pointer direct_abstract_declarator

   39 direct_abstract_declarator: '(' abstract_declarator ')'
   40                           | '[' ']'
   41                           | '[' constant_expression ']'
   42                           | direct_abstract_declarator '[' ']'
   43                           | direct_abstract_declarator '[' constant_expression ']'
   44                           | '(' ')'
   45                           | '(' parameter_list ')'
   46                           | direct_abstract_declarator '(' ')'
   47                           | direct_abstract_declarator '(' parameter_list ')'

   48 compound_statement: '{' '}'
   49                   | '{' declaration_list '}'
   50                   | '{' statement_list '}'
   51                   | '{' declaration_list statement_list '}'

   52 declaration_list: declaration
   53                 | declaration_list declaration

   54 statement_list: statement
   55               | statement_list statement

   56 statement: labeled_statement
   57          | expression_statement
   58          | selection_statement
   59          | iteration_statement
   60          | jump_statement
   61          | compound_statement

   62 labeled_statement: IDENTIFIER ':' statement
   63                  | CASE constant_expression ':' statement
   64                  | DEFAULT ':' statement

   65 expression_statement: ';'
   66                     | expression ';'

   67 selection_statement: IF '(' expression ')' statement
   68                    | IF '(' expression ')' statement ELSE statement
   69                    | SWITCH '(' expression ')' statement

   70 iteration_statement: WHILE '(' expression ')' statement
   71                    | DO statement WHILE '(' expression ')' ';'
   72                    | FOR '(' expression_statement expression_statement ')' statement
   73                    | FOR '(' expression_statement expression_statement expression ')' statement

   74 jump_statement: GOTO IDENTIFIER ';'
   75               | CONTINUE ';'
   76               | BREAK ';'
   77               | RETURN ';'
   78               | RETURN expression ';'

   79 primary_expression: IDENTIFIER
   80                   | INT_LITERAL
   81                   | '(' expression ')'

   82 postfix_expression: primary_expression
   83                   | postfix_expression '[' expression ']'
   84                   | postfix_expression '(' ')'
   85                   | postfix_expression '(' argument_expression_list ')'
   86                   | postfix_expression '.' IDENTIFIER
   87                   | postfix_expression POINTER_OP IDENTIFIER
   88                   | postfix_expression INCREMENT_OP
   89                   | postfix_expression DECREMENT_OP

   90 argument_expression_list: assignment_expression
   91                         | argument_expression_list ',' assignment_expression

   92 unary_expression: postfix_expression
   93                 | INCREMENT_OP unary_expression
   94                 | DECREMENT_OP unary_expression
   95                 | unary_operator cast_expression
   96                 | '-' unary_expression
   97                 | SIZEOF unary_expression
   98                 | SIZEOF '(' type_name ')'

   99 unary_operator: '&'
  100               | '*'
  101               | '+'
  102               | '-'
  103               | '~'
  104               | '!'

  105 cast_expression: unary_expression
  106                | '(' type_name ')' cast_expression

  107 multiplicative_expression: cast_expression
  108                          | multiplicative_expression '*' cast_expression
  109                          | multiplicative_expression '/' cast_expression
  110                          | multiplicative_expression '%' cast_expression

  111 additive_expression: multiplicative_expression
  112                    | additive_expression '+' multiplicative_expression
  113                    | additive_expression '-' multiplicative_expression

  114 shift_expression: additive_expression
  115                 | shift_expression LEFTSHIFT_OP additive_expression
  116                 | shift_expression RIGHTSHIFT_OP additive_expression

  117 relational_expression: shift_expression
  118                      | relational_expression '<' shift_expression
  119                      | relational_expression '>' shift_expression
  120                      | relational_expression LE_OP shift_expression
  121                      | relational_expression GE_OP shift_expression

  122 equality_expression: relational_expression
  123                    | equality_expression EQ_OP relational_expression
  124                    | equality_expression NE_OP relational_expression

  125 and_expression: equality_expression
  126               | and_expression '&' equality_expression

  127 exclusive_or_expression: and_expression
  128                        | exclusive_or_expression '^' and_expression

  129 inclusive_or_expression: exclusive_or_expression
  130                        | inclusive_or_expression '|' exclusive_or_expression

  131 logical_and_expression: inclusive_or_expression
  132                       | logical_and_expression AND_OP inclusive_or_expression

  133 logical_or_expression: logical_and_expression
  134                      | logical_or_expression OR_OP logical_and_expression

  135 conditional_expression: logical_or_expression
  136                       | logical_or_expression '?' expression ':' conditional_expression

  137 assignment_expression: conditional_expression
  138                      | unary_expression assignment_operator assignment_expression

  139 assignment_operator: '='
  140                    | MUL_ASSIGN
  141                    | DIV_ASSIGN
  142                    | MOD_ASSIGN
  143                    | ADD_ASSIGN
  144                    | SUB_ASSIGN
  145                    | LEFTSHIFT_ASSIGN
  146                    | RIGHTSHIFT_ASSIGN
  147                    | AND_ASSIGN
  148                    | XOR_ASSIGN
  149                    | OR_ASSIGN

  150 expression: assignment_expression
  151           | expression ',' assignment_expression

  152 type_specifier: VOID
  153               | CHAR
  154               | SHORT
  155               | INT
  156               | LONG
  157               | FLOAT
  158               | DOUBLE
  159               | SIGNED
  160               | UNSIGNED
  161               | enum_specifier

  162 specifier_qualifier_list: type_specifier specifier_qualifier_list
  163                         | type_specifier
  164                         | type_qualifier specifier_qualifier_list
  165                         | type_qualifier

  166 enum_specifier: ENUM '{' enumerator_list '}'
  167               | ENUM IDENTIFIER '{' enumerator_list '}'
  168               | ENUM IDENTIFIER

  169 enumerator_list: enumerator
  170                | enumerator_list ',' enumerator

  171 enumerator: IDENTIFIER
  172           | IDENTIFIER '=' constant_expression

  173 type_qualifier: CONST
  174               | VOLATILE

  175 pointer: '*'
  176        | '*' type_qualifier_list
  177        | '*' pointer
  178        | '*' type_qualifier_list pointer

  179 type_qualifier_list: type_qualifier
  180                    | type_qualifier_list type_qualifier

  181 identifier_list: IDENTIFIER
  182                | identifier_list ',' IDENTIFIER

  183 type_name: specifier_qualifier_list
  184          | specifier_qualifier_list abstract_declarator


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104
    '%' (37) 110
    '&' (38) 99 126
    '(' (40) 11 14 15 16 39 44 45 46 47 67 68 69 70 71 72 73 81 84 85 98 106
    ')' (41) 11 14 15 16 39 44 45 46 47 67 68 69 70 71 72 73 81 84 85 98 106
    '*' (42) 100 108 175 176 177 178
    '+' (43) 101 112
    ',' (44) 18 33 35 91 151 170 182
    '-' (45) 96 102 113
    '.' (46) 86
    '/' (47) 109
    ':' (58) 62 63 64 136
    ';' (59) 23 24 65 66 71 74 75 76 77 78
    '<' (60) 118
    '=' (61) 30 139 172
    '>' (62) 119
    '?' (63) 136
    '[' (91) 12 13 40 41 42 43 83
    ']' (93) 12 13 40 41 42 43 83
    '^' (94) 128
    '{' (123) 32 33 48 49 50 51 166 167
    '|' (124) 130
    '}' (125) 32 33 48 49 50 51 166 167
    '~' (126) 103
    error (256)
    IDENTIFIER <string> (258) 10 62 74 79 86 87 167 168 171 172 181 182
    INT_LITERAL <integer> (259) 80
    CHAR_LITERAL (260)
    SIZEOF (261) 97 98
    POINTER_OP (262) 87
    INCREMENT_OP (263) 88 93
    DECREMENT_OP (264) 89 94
    LEFTSHIFT_OP (265) 115
    RIGHTSHIFT_OP (266) 116
    LE_OP (267) 120
    GE_OP (268) 121
    EQ_OP (269) 123
    NE_OP (270) 124
    AND_OP (271) 132
    OR_OP (272) 134
    MUL_ASSIGN (273) 140
    DIV_ASSIGN (274) 141
    MOD_ASSIGN (275) 142
    ADD_ASSIGN (276) 143
    SUB_ASSIGN (277) 144
    LEFTSHIFT_ASSIGN (278) 145
    RIGHTSHIFT_ASSIGN (279) 146
    AND_ASSIGN (280) 147
    XOR_ASSIGN (281) 148
    OR_ASSIGN (282) 149
    TYPE_NAME (283)
    TYPEDEF (284) 27 28
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 153
    SHORT (290) 154
    INT (291) 155
    LONG (292) 156
    SIGNED (293) 159
    UNSIGNED (294) 160
    FLOAT (295) 157
    DOUBLE (296) 158
    CONST (297) 173
    VOLATILE (298) 174
    VOID (299) 152
    STRUCT (300)
    UNION (301)
    ENUM (302) 166 167 168
    ELLIPSIS (303)
    CASE (304) 63
    DEFAULT (305) 64
    IF (306) 67 68
    ELSE (307) 68
    SWITCH (308) 69
    WHILE (309) 70 71
    DO (310) 71
    FOR (311) 72 73
    GOTO (312) 74
    CONTINUE (313) 75
    BREAK (314) 76
    RETURN (315) 77 78
    uminu (316)
    NOELSE (317)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    ROOT (88)
        on left: 1
        on right: 0
    translation_unit <expressionList> (89)
        on left: 2 3
        on right: 1 3
    external_declaration <expr> (90)
        on left: 4 5
        on right: 2 3
    function_definition <expr> (91)
        on left: 6 7
        on right: 4
    declarator <expr> (92)
        on left: 8 9
        on right: 6 7 11 19 29 30
    direct_declarator <expr> (93)
        on left: 10 11 12 13 14 15 16
        on right: 8 9 12 13 14 15 16
    parameter_list <expressionList> (94)
        on left: 17 18
        on right: 14 18 45 47
    parameter_declaration <expr> (95)
        on left: 19 20 21
        on right: 17 18
    constant_expression <expr> (96)
        on left: 22
        on right: 12 41 43 63 172
    declaration <expr> (97)
        on left: 23 24
        on right: 5 52 53
    declaration_specifiers <string> (98)
        on left: 25 26 27 28
        on right: 6 19 20 21 23 24 26 28
    init_declarator <expr> (99)
        on left: 29 30
        on right: 24
    initializer <expr> (100)
        on left: 31 32 33
        on right: 30 34 35
    initializer_list <expressionList> (101)
        on left: 34 35
        on right: 32 33 35
    abstract_declarator <expr> (102)
        on left: 36 37 38
        on right: 20 39 184
    direct_abstract_declarator <expr> (103)
        on left: 39 40 41 42 43 44 45 46 47
        on right: 37 38 42 43 46 47
    compound_statement <expressionList> (104)
        on left: 48 49 50 51
        on right: 6 61
    declaration_list <expressionList> (105)
        on left: 52 53
        on right: 49 51 53
    statement_list <expressionList> (106)
        on left: 54 55
        on right: 50 51 55
    statement <expr> (107)
        on left: 56 57 58 59 60 61
        on right: 54 55 62 63 64 67 68 69 70 71 72 73
    labeled_statement <expr> (108)
        on left: 62 63 64
        on right: 56
    expression_statement <expr> (109)
        on left: 65 66
        on right: 57 72 73
    selection_statement <expr> (110)
        on left: 67 68 69
        on right: 58
    iteration_statement <expr> (111)
        on left: 70 71 72 73
        on right: 59
    jump_statement <expr> (112)
        on left: 74 75 76 77 78
        on right: 60
    primary_expression <expr> (113)
        on left: 79 80 81
        on right: 82
    postfix_expression <expr> (114)
        on left: 82 83 84 85 86 87 88 89
        on right: 83 84 85 86 87 88 89 92
    argument_expression_list <expressionList> (115)
        on left: 90 91
        on right: 85 91
    unary_expression <expr> (116)
        on left: 92 93 94 95 96 97 98
        on right: 93 94 96 97 105 138
    unary_operator (117)
        on left: 99 100 101 102 103 104
        on right: 95
    cast_expression <expr> (118)
        on left: 105 106
        on right: 95 106 107 108 109 110
    multiplicative_expression <expr> (119)
        on left: 107 108 109 110
        on right: 108 109 110 111 112 113
    additive_expression <expr> (120)
        on left: 111 112 113
        on right: 112 113 114 115 116
    shift_expression <expr> (121)
        on left: 114 115 116
        on right: 115 116 117 118 119 120 121
    relational_expression <expr> (122)
        on left: 117 118 119 120 121
        on right: 118 119 120 121 122 123 124
    equality_expression <expr> (123)
        on left: 122 123 124
        on right: 123 124 125 126
    and_expression <expr> (124)
        on left: 125 126
        on right: 126 127 128
    exclusive_or_expression <expr> (125)
        on left: 127 128
        on right: 128 129 130
    inclusive_or_expression <expr> (126)
        on left: 129 130
        on right: 130 131 132
    logical_and_expression <expr> (127)
        on left: 131 132
        on right: 132 133 134
    logical_or_expression <expr> (128)
        on left: 133 134
        on right: 134 135 136
    conditional_expression <expr> (129)
        on left: 135 136
        on right: 22 136 137
    assignment_expression <expr> (130)
        on left: 137 138
        on right: 31 90 91 138 150 151
    assignment_operator <string> (131)
        on left: 139 140 141 142 143 144 145 146 147 148 149
        on right: 138
    expression <expr> (132)
        on left: 150 151
        on right: 66 67 68 69 70 71 73 78 81 83 136 151
    type_specifier <string> (133)
        on left: 152 153 154 155 156 157 158 159 160 161
        on right: 25 26 162 163
    specifier_qualifier_list <expressionList> (134)
        on left: 162 163 164 165
        on right: 162 164 183 184
    enum_specifier <expr> (135)
        on left: 166 167 168
        on right: 161
    enumerator_list <expressionList> (136)
        on left: 169 170
        on right: 166 167 170
    enumerator <expr> (137)
        on left: 171 172
        on right: 169 170
    type_qualifier (138)
        on left: 173 174
        on right: 164 165 179 180
    pointer <expr> (139)
        on left: 175 176 177 178
        on right: 8 36 38 177 178
    type_qualifier_list (140)
        on left: 179 180
        on right: 176 178 180
    identifier_list <expressionList> (141)
        on left: 181 182
        on right: 15 182
    type_name <expr> (142)
        on left: 183 184
        on right: 98 106


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    ROOT                    go to state 15
    translation_unit        go to state 16
    external_declaration    go to state 17
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 1

   10 direct_declarator: IDENTIFIER •

    $default  reduce using rule 10 (direct_declarator)


State 2

   27 declaration_specifiers: TYPEDEF •
   28                       | TYPEDEF • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 27 (declaration_specifiers)

    declaration_specifiers  go to state 26
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 3

  153 type_specifier: CHAR •

    $default  reduce using rule 153 (type_specifier)


State 4

  154 type_specifier: SHORT •

    $default  reduce using rule 154 (type_specifier)


State 5

  155 type_specifier: INT •

    $default  reduce using rule 155 (type_specifier)


State 6

  156 type_specifier: LONG •

    $default  reduce using rule 156 (type_specifier)


State 7

  159 type_specifier: SIGNED •

    $default  reduce using rule 159 (type_specifier)


State 8

  160 type_specifier: UNSIGNED •

    $default  reduce using rule 160 (type_specifier)


State 9

  157 type_specifier: FLOAT •

    $default  reduce using rule 157 (type_specifier)


State 10

  158 type_specifier: DOUBLE •

    $default  reduce using rule 158 (type_specifier)


State 11

  152 type_specifier: VOID •

    $default  reduce using rule 152 (type_specifier)


State 12

  166 enum_specifier: ENUM • '{' enumerator_list '}'
  167               | ENUM • IDENTIFIER '{' enumerator_list '}'
  168               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 27
    '{'         shift, and go to state 28


State 13

  175 pointer: '*' •
  176        | '*' • type_qualifier_list
  177        | '*' • pointer
  178        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 175 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 14

   11 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 34
    direct_declarator  go to state 20
    pointer            go to state 25


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 35


State 16

    1 ROOT: translation_unit •
    3 translation_unit: translation_unit • external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 1 (ROOT)

    external_declaration    go to state 36
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 17

    2 translation_unit: external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 18

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 19

    7 function_definition: declarator •

    $default  reduce using rule 7 (function_definition)


State 20

    9 declarator: direct_declarator •
   12 direct_declarator: direct_declarator • '[' constant_expression ']'
   13                  | direct_declarator • '[' ']'
   14                  | direct_declarator • '(' parameter_list ')'
   15                  | direct_declarator • '(' identifier_list ')'
   16                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 9 (declarator)]
    $default  reduce using rule 9 (declarator)


State 21

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 22

    6 function_definition: declaration_specifiers • declarator compound_statement
   23 declaration: declaration_specifiers • ';'
   24            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14
    ';'         shift, and go to state 39

    declarator         go to state 40
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 23

   25 declaration_specifiers: type_specifier •
   26                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 25 (declaration_specifiers)

    declaration_specifiers  go to state 42
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 24

  161 type_specifier: enum_specifier •

    $default  reduce using rule 161 (type_specifier)


State 25

    8 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 14

    direct_declarator  go to state 43


State 26

   28 declaration_specifiers: TYPEDEF declaration_specifiers •

    $default  reduce using rule 28 (declaration_specifiers)


State 27

  167 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  168               | ENUM IDENTIFIER •

    '{'  shift, and go to state 44

    $default  reduce using rule 168 (enum_specifier)


State 28

  166 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 45

    enumerator_list  go to state 46
    enumerator       go to state 47


State 29

  173 type_qualifier: CONST •

    $default  reduce using rule 173 (type_qualifier)


State 30

  174 type_qualifier: VOLATILE •

    $default  reduce using rule 174 (type_qualifier)


State 31

  179 type_qualifier_list: type_qualifier •

    $default  reduce using rule 179 (type_qualifier_list)


State 32

  177 pointer: '*' pointer •

    $default  reduce using rule 177 (pointer)


State 33

  176 pointer: '*' type_qualifier_list •
  178        | '*' type_qualifier_list • pointer
  180 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 176 (pointer)

    type_qualifier  go to state 48
    pointer         go to state 49


State 34

   11 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 50


State 35

    0 $accept: ROOT $end •

    $default  accept


State 36

    3 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 3 (translation_unit)


State 37

   14 direct_declarator: direct_declarator '(' • parameter_list ')'
   15                  | direct_declarator '(' • identifier_list ')'
   16                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 51
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    ')'         shift, and go to state 52

    parameter_list          go to state 53
    parameter_declaration   go to state 54
    declaration_specifiers  go to state 55
    type_specifier          go to state 23
    enum_specifier          go to state 24
    identifier_list         go to state 56


State 38

   12 direct_declarator: direct_declarator '[' • constant_expression ']'
   13                  | direct_declarator '[' • ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ']'           shift, and go to state 66
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 70
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 39

   23 declaration: declaration_specifiers ';' •

    $default  reduce using rule 23 (declaration)


State 40

    6 function_definition: declaration_specifiers declarator • compound_statement
   29 init_declarator: declarator •
   30                | declarator • '=' initializer

    '='  shift, and go to state 87
    '{'  shift, and go to state 88

    $default  reduce using rule 29 (init_declarator)

    compound_statement  go to state 89


State 41

   24 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 90


State 42

   26 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 26 (declaration_specifiers)


State 43

    8 declarator: pointer direct_declarator •
   12 direct_declarator: direct_declarator • '[' constant_expression ']'
   13                  | direct_declarator • '[' ']'
   14                  | direct_declarator • '(' parameter_list ')'
   15                  | direct_declarator • '(' identifier_list ')'
   16                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 8 (declarator)]
    $default  reduce using rule 8 (declarator)


State 44

  167 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 45

    enumerator_list  go to state 91
    enumerator       go to state 47


State 45

  171 enumerator: IDENTIFIER •
  172           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 92

    $default  reduce using rule 171 (enumerator)


State 46

  166 enum_specifier: ENUM '{' enumerator_list • '}'
  170 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 93
    '}'  shift, and go to state 94


State 47

  169 enumerator_list: enumerator •

    $default  reduce using rule 169 (enumerator_list)


State 48

  180 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 180 (type_qualifier_list)


State 49

  178 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 178 (pointer)


State 50

   11 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 11 (direct_declarator)


State 51

  181 identifier_list: IDENTIFIER •

    $default  reduce using rule 181 (identifier_list)


State 52

   16 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 16 (direct_declarator)


State 53

   14 direct_declarator: direct_declarator '(' parameter_list • ')'
   18 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 95
    ','  shift, and go to state 96


State 54

   17 parameter_list: parameter_declaration •

    $default  reduce using rule 17 (parameter_list)


State 55

   19 parameter_declaration: declaration_specifiers • declarator
   20                      | declaration_specifiers • abstract_declarator
   21                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 97
    '['         shift, and go to state 98

    $default  reduce using rule 21 (parameter_declaration)

    declarator                  go to state 99
    direct_declarator           go to state 20
    abstract_declarator         go to state 100
    direct_abstract_declarator  go to state 101
    pointer                     go to state 102


State 56

   15 direct_declarator: direct_declarator '(' identifier_list • ')'
  182 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 103
    ','  shift, and go to state 104


State 57

   79 primary_expression: IDENTIFIER •

    $default  reduce using rule 79 (primary_expression)


State 58

   80 primary_expression: INT_LITERAL •

    $default  reduce using rule 80 (primary_expression)


State 59

   97 unary_expression: SIZEOF • unary_expression
   98                 | SIZEOF • '(' type_name ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 105
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 106
    unary_operator      go to state 74


State 60

   93 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 107
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 108
    unary_operator      go to state 74


State 61

   94 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 107
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 109
    unary_operator      go to state 74


State 62

  101 unary_operator: '+' •

    $default  reduce using rule 101 (unary_operator)


State 63

   96 unary_expression: '-' • unary_expression
  102 unary_operator: '-' •

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '*'           shift, and go to state 64
    '('           shift, and go to state 107
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    IDENTIFIER    [reduce using rule 102 (unary_operator)]
    INT_LITERAL   [reduce using rule 102 (unary_operator)]
    SIZEOF        [reduce using rule 102 (unary_operator)]
    INCREMENT_OP  [reduce using rule 102 (unary_operator)]
    DECREMENT_OP  [reduce using rule 102 (unary_operator)]
    '('           [reduce using rule 102 (unary_operator)]
    '&'           [reduce using rule 102 (unary_operator)]
    '~'           [reduce using rule 102 (unary_operator)]
    '!'           [reduce using rule 102 (unary_operator)]
    $default      reduce using rule 102 (unary_operator)

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 110
    unary_operator      go to state 74


State 64

  100 unary_operator: '*' •

    $default  reduce using rule 100 (unary_operator)


State 65

   81 primary_expression: '(' • expression ')'
  106 cast_expression: '(' • type_name ')' cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    type_specifier             go to state 115
    specifier_qualifier_list   go to state 116
    enum_specifier             go to state 24
    type_qualifier             go to state 117
    type_name                  go to state 118


State 66

   13 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 13 (direct_declarator)


State 67

   99 unary_operator: '&' •

    $default  reduce using rule 99 (unary_operator)


State 68

  103 unary_operator: '~' •

    $default  reduce using rule 103 (unary_operator)


State 69

  104 unary_operator: '!' •

    $default  reduce using rule 104 (unary_operator)


State 70

   12 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 119


State 71

   82 postfix_expression: primary_expression •

    $default  reduce using rule 82 (postfix_expression)


State 72

   83 postfix_expression: postfix_expression • '[' expression ']'
   84                   | postfix_expression • '(' ')'
   85                   | postfix_expression • '(' argument_expression_list ')'
   86                   | postfix_expression • '.' IDENTIFIER
   87                   | postfix_expression • POINTER_OP IDENTIFIER
   88                   | postfix_expression • INCREMENT_OP
   89                   | postfix_expression • DECREMENT_OP
   92 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 120
    INCREMENT_OP  shift, and go to state 121
    DECREMENT_OP  shift, and go to state 122
    '('           shift, and go to state 123
    '['           shift, and go to state 124
    '.'           shift, and go to state 125

    $default  reduce using rule 92 (unary_expression)


State 73

  105 cast_expression: unary_expression •

    $default  reduce using rule 105 (cast_expression)


State 74

   95 unary_expression: unary_operator • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 126


State 75

  107 multiplicative_expression: cast_expression •

    $default  reduce using rule 107 (multiplicative_expression)


State 76

  108 multiplicative_expression: multiplicative_expression • '*' cast_expression
  109                          | multiplicative_expression • '/' cast_expression
  110                          | multiplicative_expression • '%' cast_expression
  111 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 111 (additive_expression)


State 77

  112 additive_expression: additive_expression • '+' multiplicative_expression
  113                    | additive_expression • '-' multiplicative_expression
  114 shift_expression: additive_expression •

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131

    $default  reduce using rule 114 (shift_expression)


State 78

  115 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  116                 | shift_expression • RIGHTSHIFT_OP additive_expression
  117 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 117 (relational_expression)


State 79

  118 relational_expression: relational_expression • '<' shift_expression
  119                      | relational_expression • '>' shift_expression
  120                      | relational_expression • LE_OP shift_expression
  121                      | relational_expression • GE_OP shift_expression
  122 equality_expression: relational_expression •

    LE_OP  shift, and go to state 134
    GE_OP  shift, and go to state 135
    '<'    shift, and go to state 136
    '>'    shift, and go to state 137

    $default  reduce using rule 122 (equality_expression)


State 80

  123 equality_expression: equality_expression • EQ_OP relational_expression
  124                    | equality_expression • NE_OP relational_expression
  125 and_expression: equality_expression •

    EQ_OP  shift, and go to state 138
    NE_OP  shift, and go to state 139

    $default  reduce using rule 125 (and_expression)


State 81

  126 and_expression: and_expression • '&' equality_expression
  127 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 140

    $default  reduce using rule 127 (exclusive_or_expression)


State 82

  128 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  129 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 141

    $default  reduce using rule 129 (inclusive_or_expression)


State 83

  130 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  131 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 142

    $default  reduce using rule 131 (logical_and_expression)


State 84

  132 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  133 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 143

    $default  reduce using rule 133 (logical_or_expression)


State 85

  134 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  135 conditional_expression: logical_or_expression •
  136                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 144
    '?'    shift, and go to state 145

    $default  reduce using rule 135 (conditional_expression)


State 86

   22 constant_expression: conditional_expression •

    $default  reduce using rule 22 (constant_expression)


State 87

   30 init_declarator: declarator '=' • initializer

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '{'           shift, and go to state 146
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    initializer                go to state 147
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 148


State 88

   48 compound_statement: '{' • '}'
   49                   | '{' • declaration_list '}'
   50                   | '{' • statement_list '}'
   51                   | '{' • declaration_list statement_list '}'

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '}'           shift, and go to state 162
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    declaration                go to state 163
    declaration_specifiers     go to state 164
    compound_statement         go to state 165
    declaration_list           go to state 166
    statement_list             go to state 167
    statement                  go to state 168
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174
    type_specifier             go to state 23
    enum_specifier             go to state 24


State 89

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 90

   24 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 24 (declaration)


State 91

  167 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  170 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 93
    '}'  shift, and go to state 175


State 92

  172 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 176
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 93

  170 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 45

    enumerator  go to state 177


State 94

  166 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 166 (enum_specifier)


State 95

   14 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 14 (direct_declarator)


State 96

   18 parameter_list: parameter_list ',' • parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    parameter_declaration   go to state 178
    declaration_specifiers  go to state 55
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 97

   11 direct_declarator: '(' • declarator ')'
   39 direct_abstract_declarator: '(' • abstract_declarator ')'
   44                           | '(' • ')'
   45                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 97
    ')'         shift, and go to state 179
    '['         shift, and go to state 98

    declarator                  go to state 34
    direct_declarator           go to state 20
    parameter_list              go to state 180
    parameter_declaration       go to state 54
    declaration_specifiers      go to state 55
    abstract_declarator         go to state 181
    direct_abstract_declarator  go to state 101
    type_specifier              go to state 23
    enum_specifier              go to state 24
    pointer                     go to state 102


State 98

   40 direct_abstract_declarator: '[' • ']'
   41                           | '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ']'           shift, and go to state 182
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 183
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 99

   19 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 19 (parameter_declaration)


State 100

   20 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 20 (parameter_declaration)


State 101

   37 abstract_declarator: direct_abstract_declarator •
   42 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   43                           | direct_abstract_declarator • '[' constant_expression ']'
   46                           | direct_abstract_declarator • '(' ')'
   47                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 184
    '['  shift, and go to state 185

    $default  reduce using rule 37 (abstract_declarator)


State 102

    8 declarator: pointer • direct_declarator
   36 abstract_declarator: pointer •
   38                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 97
    '['         shift, and go to state 98

    $default  reduce using rule 36 (abstract_declarator)

    direct_declarator           go to state 43
    direct_abstract_declarator  go to state 186


State 103

   15 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 15 (direct_declarator)


State 104

  182 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 187


State 105

   81 primary_expression: '(' • expression ')'
   98 unary_expression: SIZEOF '(' • type_name ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    type_specifier             go to state 115
    specifier_qualifier_list   go to state 116
    enum_specifier             go to state 24
    type_qualifier             go to state 117
    type_name                  go to state 188


State 106

   97 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 97 (unary_expression)


State 107

   81 primary_expression: '(' • expression ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114


State 108

   93 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 93 (unary_expression)


State 109

   94 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 94 (unary_expression)


State 110

   96 unary_expression: '-' unary_expression •

    $default  reduce using rule 96 (unary_expression)


State 111

  105 cast_expression: unary_expression •
  138 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 189
    DIV_ASSIGN         shift, and go to state 190
    MOD_ASSIGN         shift, and go to state 191
    ADD_ASSIGN         shift, and go to state 192
    SUB_ASSIGN         shift, and go to state 193
    LEFTSHIFT_ASSIGN   shift, and go to state 194
    RIGHTSHIFT_ASSIGN  shift, and go to state 195
    AND_ASSIGN         shift, and go to state 196
    XOR_ASSIGN         shift, and go to state 197
    OR_ASSIGN          shift, and go to state 198
    '='                shift, and go to state 199

    $default  reduce using rule 105 (cast_expression)

    assignment_operator  go to state 200


State 112

  137 assignment_expression: conditional_expression •

    $default  reduce using rule 137 (assignment_expression)


State 113

  150 expression: assignment_expression •

    $default  reduce using rule 150 (expression)


State 114

   81 primary_expression: '(' expression • ')'
  151 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 201
    ','  shift, and go to state 202


State 115

  162 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  163                         | type_specifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 163 (specifier_qualifier_list)

    type_specifier            go to state 115
    specifier_qualifier_list  go to state 203
    enum_specifier            go to state 24
    type_qualifier            go to state 117


State 116

  183 type_name: specifier_qualifier_list •
  184          | specifier_qualifier_list • abstract_declarator

    '*'  shift, and go to state 13
    '('  shift, and go to state 204
    '['  shift, and go to state 98

    $default  reduce using rule 183 (type_name)

    abstract_declarator         go to state 205
    direct_abstract_declarator  go to state 101
    pointer                     go to state 206


State 117

  164 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  165                         | type_qualifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 165 (specifier_qualifier_list)

    type_specifier            go to state 115
    specifier_qualifier_list  go to state 207
    enum_specifier            go to state 24
    type_qualifier            go to state 117


State 118

  106 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 208


State 119

   12 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 12 (direct_declarator)


State 120

   87 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 209


State 121

   88 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 88 (postfix_expression)


State 122

   89 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 89 (postfix_expression)


State 123

   84 postfix_expression: postfix_expression '(' • ')'
   85                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ')'           shift, and go to state 210
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    argument_expression_list   go to state 211
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 212


State 124

   83 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 213


State 125

   86 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 214


State 126

   95 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 95 (unary_expression)


State 127

  108 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 215


State 128

  109 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 216


State 129

  110 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 217


State 130

  112 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 218


State 131

  113 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 219


State 132

  115 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 220


State 133

  116 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 221


State 134

  120 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 222


State 135

  121 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 223


State 136

  118 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 224


State 137

  119 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 225


State 138

  123 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 226


State 139

  124 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 227


State 140

  126 and_expression: and_expression '&' • equality_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 228


State 141

  128 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 229


State 142

  130 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 230


State 143

  132 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 231


State 144

  134 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 232


State 145

  136 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 233


State 146

   32 initializer: '{' • initializer_list '}'
   33            | '{' • initializer_list ',' '}'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '{'           shift, and go to state 146
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    initializer                go to state 234
    initializer_list           go to state 235
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 148


State 147

   30 init_declarator: declarator '=' initializer •

    $default  reduce using rule 30 (init_declarator)


State 148

   31 initializer: assignment_expression •

    $default  reduce using rule 31 (initializer)


State 149

   62 labeled_statement: IDENTIFIER • ':' statement
   79 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 236

    $default  reduce using rule 79 (primary_expression)


State 150

   63 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 237
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 151

   64 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 238


State 152

   67 selection_statement: IF • '(' expression ')' statement
   68                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 239


State 153

   69 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 240


State 154

   70 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 241


State 155

   71 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 242
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 156

   72 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   73                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 243


State 157

   74 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 244


State 158

   75 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 245


State 159

   76 jump_statement: BREAK • ';'

    ';'  shift, and go to state 246


State 160

   77 jump_statement: RETURN • ';'
   78               | RETURN • expression ';'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 247
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 248


State 161

   65 expression_statement: ';' •

    $default  reduce using rule 65 (expression_statement)


State 162

   48 compound_statement: '{' '}' •

    $default  reduce using rule 48 (compound_statement)


State 163

   52 declaration_list: declaration •

    $default  reduce using rule 52 (declaration_list)


State 164

   23 declaration: declaration_specifiers • ';'
   24            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14
    ';'         shift, and go to state 39

    declarator         go to state 249
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 165

   61 statement: compound_statement •

    $default  reduce using rule 61 (statement)


State 166

   49 compound_statement: '{' declaration_list • '}'
   51                   | '{' declaration_list • statement_list '}'
   53 declaration_list: declaration_list • declaration

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '}'           shift, and go to state 250
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    declaration                go to state 251
    declaration_specifiers     go to state 164
    compound_statement         go to state 165
    statement_list             go to state 252
    statement                  go to state 168
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174
    type_specifier             go to state 23
    enum_specifier             go to state 24


State 167

   50 compound_statement: '{' statement_list • '}'
   55 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '}'           shift, and go to state 253
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 254
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 168

   54 statement_list: statement •

    $default  reduce using rule 54 (statement_list)


State 169

   56 statement: labeled_statement •

    $default  reduce using rule 56 (statement)


State 170

   57 statement: expression_statement •

    $default  reduce using rule 57 (statement)


State 171

   58 statement: selection_statement •

    $default  reduce using rule 58 (statement)


State 172

   59 statement: iteration_statement •

    $default  reduce using rule 59 (statement)


State 173

   60 statement: jump_statement •

    $default  reduce using rule 60 (statement)


State 174

   66 expression_statement: expression • ';'
  151 expression: expression • ',' assignment_expression

    ','  shift, and go to state 202
    ';'  shift, and go to state 255


State 175

  167 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 167 (enum_specifier)


State 176

  172 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 172 (enumerator)


State 177

  170 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 170 (enumerator_list)


State 178

   18 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 18 (parameter_list)


State 179

   44 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 180

   18 parameter_list: parameter_list • ',' parameter_declaration
   45 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 256
    ','  shift, and go to state 96


State 181

   39 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 257


State 182

   40 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 40 (direct_abstract_declarator)


State 183

   41 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 258


State 184

   46 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   47                           | direct_abstract_declarator '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    ')'       shift, and go to state 259

    parameter_list          go to state 260
    parameter_declaration   go to state 54
    declaration_specifiers  go to state 55
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 185

   42 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
   43                           | direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ']'           shift, and go to state 261
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 262
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 186

   38 abstract_declarator: pointer direct_abstract_declarator •
   42 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   43                           | direct_abstract_declarator • '[' constant_expression ']'
   46                           | direct_abstract_declarator • '(' ')'
   47                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 184
    '['  shift, and go to state 185

    $default  reduce using rule 38 (abstract_declarator)


State 187

  182 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 182 (identifier_list)


State 188

   98 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 263


State 189

  140 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 140 (assignment_operator)


State 190

  141 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 141 (assignment_operator)


State 191

  142 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 142 (assignment_operator)


State 192

  143 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 143 (assignment_operator)


State 193

  144 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 144 (assignment_operator)


State 194

  145 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 145 (assignment_operator)


State 195

  146 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 146 (assignment_operator)


State 196

  147 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 147 (assignment_operator)


State 197

  148 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 148 (assignment_operator)


State 198

  149 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 149 (assignment_operator)


State 199

  139 assignment_operator: '=' •

    $default  reduce using rule 139 (assignment_operator)


State 200

  138 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 264


State 201

   81 primary_expression: '(' expression ')' •

    $default  reduce using rule 81 (primary_expression)


State 202

  151 expression: expression ',' • assignment_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 265


State 203

  162 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 162 (specifier_qualifier_list)


State 204

   39 direct_abstract_declarator: '(' • abstract_declarator ')'
   44                           | '(' • ')'
   45                           | '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    '*'       shift, and go to state 13
    '('       shift, and go to state 204
    ')'       shift, and go to state 179
    '['       shift, and go to state 98

    parameter_list              go to state 180
    parameter_declaration       go to state 54
    declaration_specifiers      go to state 55
    abstract_declarator         go to state 181
    direct_abstract_declarator  go to state 101
    type_specifier              go to state 23
    enum_specifier              go to state 24
    pointer                     go to state 206


State 205

  184 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 184 (type_name)


State 206

   36 abstract_declarator: pointer •
   38                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 204
    '['  shift, and go to state 98

    $default  reduce using rule 36 (abstract_declarator)

    direct_abstract_declarator  go to state 186


State 207

  164 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 164 (specifier_qualifier_list)


State 208

  106 cast_expression: '(' type_name ')' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 266


State 209

   87 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 87 (postfix_expression)


State 210

   84 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 84 (postfix_expression)


State 211

   85 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   91 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 267
    ','  shift, and go to state 268


State 212

   90 argument_expression_list: assignment_expression •

    $default  reduce using rule 90 (argument_expression_list)


State 213

   83 postfix_expression: postfix_expression '[' expression • ']'
  151 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 269
    ','  shift, and go to state 202


State 214

   86 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 86 (postfix_expression)


State 215

  108 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 108 (multiplicative_expression)


State 216

  109 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 109 (multiplicative_expression)


State 217

  110 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 110 (multiplicative_expression)


State 218

  108 multiplicative_expression: multiplicative_expression • '*' cast_expression
  109                          | multiplicative_expression • '/' cast_expression
  110                          | multiplicative_expression • '%' cast_expression
  112 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 112 (additive_expression)


State 219

  108 multiplicative_expression: multiplicative_expression • '*' cast_expression
  109                          | multiplicative_expression • '/' cast_expression
  110                          | multiplicative_expression • '%' cast_expression
  113 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 113 (additive_expression)


State 220

  112 additive_expression: additive_expression • '+' multiplicative_expression
  113                    | additive_expression • '-' multiplicative_expression
  115 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131

    $default  reduce using rule 115 (shift_expression)


State 221

  112 additive_expression: additive_expression • '+' multiplicative_expression
  113                    | additive_expression • '-' multiplicative_expression
  116 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131

    $default  reduce using rule 116 (shift_expression)


State 222

  115 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  116                 | shift_expression • RIGHTSHIFT_OP additive_expression
  120 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 120 (relational_expression)


State 223

  115 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  116                 | shift_expression • RIGHTSHIFT_OP additive_expression
  121 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 121 (relational_expression)


State 224

  115 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  116                 | shift_expression • RIGHTSHIFT_OP additive_expression
  118 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 118 (relational_expression)


State 225

  115 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  116                 | shift_expression • RIGHTSHIFT_OP additive_expression
  119 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 119 (relational_expression)


State 226

  118 relational_expression: relational_expression • '<' shift_expression
  119                      | relational_expression • '>' shift_expression
  120                      | relational_expression • LE_OP shift_expression
  121                      | relational_expression • GE_OP shift_expression
  123 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 134
    GE_OP  shift, and go to state 135
    '<'    shift, and go to state 136
    '>'    shift, and go to state 137

    $default  reduce using rule 123 (equality_expression)


State 227

  118 relational_expression: relational_expression • '<' shift_expression
  119                      | relational_expression • '>' shift_expression
  120                      | relational_expression • LE_OP shift_expression
  121                      | relational_expression • GE_OP shift_expression
  124 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 134
    GE_OP  shift, and go to state 135
    '<'    shift, and go to state 136
    '>'    shift, and go to state 137

    $default  reduce using rule 124 (equality_expression)


State 228

  123 equality_expression: equality_expression • EQ_OP relational_expression
  124                    | equality_expression • NE_OP relational_expression
  126 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 138
    NE_OP  shift, and go to state 139

    $default  reduce using rule 126 (and_expression)


State 229

  126 and_expression: and_expression • '&' equality_expression
  128 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 140

    $default  reduce using rule 128 (exclusive_or_expression)


State 230

  128 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  130 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 141

    $default  reduce using rule 130 (inclusive_or_expression)


State 231

  130 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  132 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 142

    $default  reduce using rule 132 (logical_and_expression)


State 232

  132 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  134 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 143

    $default  reduce using rule 134 (logical_or_expression)


State 233

  136 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  151 expression: expression • ',' assignment_expression

    ','  shift, and go to state 202
    ':'  shift, and go to state 270


State 234

   34 initializer_list: initializer •

    $default  reduce using rule 34 (initializer_list)


State 235

   32 initializer: '{' initializer_list • '}'
   33            | '{' initializer_list • ',' '}'
   35 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 271
    '}'  shift, and go to state 272


State 236

   62 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 273
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 237

   63 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 274


State 238

   64 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 275
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 239

   67 selection_statement: IF '(' • expression ')' statement
   68                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 276


State 240

   69 selection_statement: SWITCH '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 277


State 241

   70 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 278


State 242

   71 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 279


State 243

   72 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   73                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    expression_statement       go to state 280
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 244

   74 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 281


State 245

   75 jump_statement: CONTINUE ';' •

    $default  reduce using rule 75 (jump_statement)


State 246

   76 jump_statement: BREAK ';' •

    $default  reduce using rule 76 (jump_statement)


State 247

   77 jump_statement: RETURN ';' •

    $default  reduce using rule 77 (jump_statement)


State 248

   78 jump_statement: RETURN expression • ';'
  151 expression: expression • ',' assignment_expression

    ','  shift, and go to state 202
    ';'  shift, and go to state 282


State 249

   29 init_declarator: declarator •
   30                | declarator • '=' initializer

    '='  shift, and go to state 87

    $default  reduce using rule 29 (init_declarator)


State 250

   49 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 49 (compound_statement)


State 251

   53 declaration_list: declaration_list declaration •

    $default  reduce using rule 53 (declaration_list)


State 252

   51 compound_statement: '{' declaration_list statement_list • '}'
   55 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '}'           shift, and go to state 283
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 254
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 253

   50 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 50 (compound_statement)


State 254

   55 statement_list: statement_list statement •

    $default  reduce using rule 55 (statement_list)


State 255

   66 expression_statement: expression ';' •

    $default  reduce using rule 66 (expression_statement)


State 256

   45 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 45 (direct_abstract_declarator)


State 257

   39 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 39 (direct_abstract_declarator)


State 258

   41 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 41 (direct_abstract_declarator)


State 259

   46 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 260

   18 parameter_list: parameter_list • ',' parameter_declaration
   47 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 284
    ','  shift, and go to state 96


State 261

   42 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 262

   43 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 285


State 263

   98 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 98 (unary_expression)


State 264

  138 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 138 (assignment_expression)


State 265

  151 expression: expression ',' assignment_expression •

    $default  reduce using rule 151 (expression)


State 266

  106 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 106 (cast_expression)


State 267

   85 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 85 (postfix_expression)


State 268

   91 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 286


State 269

   83 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 83 (postfix_expression)


State 270

  136 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 287


State 271

   33 initializer: '{' initializer_list ',' • '}'
   35 initializer_list: initializer_list ',' • initializer

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '{'           shift, and go to state 146
    '}'           shift, and go to state 288
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    initializer                go to state 289
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 148


State 272

   32 initializer: '{' initializer_list '}' •

    $default  reduce using rule 32 (initializer)


State 273

   62 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 62 (labeled_statement)


State 274

   63 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 290
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 275

   64 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 64 (labeled_statement)


State 276

   67 selection_statement: IF '(' expression • ')' statement
   68                    | IF '(' expression • ')' statement ELSE statement
  151 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 291
    ','  shift, and go to state 202


State 277

   69 selection_statement: SWITCH '(' expression • ')' statement
  151 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 292
    ','  shift, and go to state 202


State 278

   70 iteration_statement: WHILE '(' expression • ')' statement
  151 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 293
    ','  shift, and go to state 202


State 279

   71 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 294


State 280

   72 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   73                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    expression_statement       go to state 295
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 281

   74 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 74 (jump_statement)


State 282

   78 jump_statement: RETURN expression ';' •

    $default  reduce using rule 78 (jump_statement)


State 283

   51 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 51 (compound_statement)


State 284

   47 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 47 (direct_abstract_declarator)


State 285

   43 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 286

   91 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 91 (argument_expression_list)


State 287

  136 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 136 (conditional_expression)


State 288

   33 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 33 (initializer)


State 289

   35 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 35 (initializer_list)


State 290

   63 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 63 (labeled_statement)


State 291

   67 selection_statement: IF '(' expression ')' • statement
   68                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 296
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 292

   69 selection_statement: SWITCH '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 297
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 293

   70 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 298
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 294

   71 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 299


State 295

   72 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   73                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ')'           shift, and go to state 300
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 301


State 296

   67 selection_statement: IF '(' expression ')' statement •
   68                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 302

    $default  reduce using rule 67 (selection_statement)


State 297

   69 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 69 (selection_statement)


State 298

   70 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 70 (iteration_statement)


State 299

   71 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  151 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 303
    ','  shift, and go to state 202


State 300

   72 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 304
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 301

   73 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  151 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 305
    ','  shift, and go to state 202


State 302

   68 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 306
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 303

   71 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 307


State 304

   72 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 72 (iteration_statement)


State 305

   73 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ';'           shift, and go to state 161
    '{'           shift, and go to state 88
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 165
    statement                  go to state 308
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 111
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 174


State 306

   68 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 68 (selection_statement)


State 307

   71 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 71 (iteration_statement)


State 308

   73 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 73 (iteration_statement)
