Nonterminals useless in grammar

    init_declarator_list
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    struct_declarator_list
    struct_declarator


Terminals unused in grammar

    CHAR_LITERAL
    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    uminu


Rules useless in grammar

  186 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  187                          | struct_or_union '{' struct_declaration_list '}'
  188                          | struct_or_union IDENTIFIER

  189 struct_or_union: STRUCT
  190                | UNION

  191 struct_declaration_list: struct_declaration
  192                        | struct_declaration_list struct_declaration

  193 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  194 struct_declarator_list: struct_declarator
  195                       | struct_declarator_list ',' struct_declarator

  196 struct_declarator: declarator
  197                  | ':' constant_expression
  198                  | declarator ':' constant_expression


State 20 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 63 conflicts: 9 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement
    7                    | declaration_specifiers declarator ';'
    8                    | declarator

    9 declarator: pointer direct_declarator
   10           | direct_declarator

   11 direct_declarator: IDENTIFIER
   12                  | '(' declarator ')'
   13                  | direct_declarator '[' constant_expression ']'
   14                  | direct_declarator '[' ']'
   15                  | direct_declarator '(' parameter_list ')'
   16                  | direct_declarator '(' identifier_list ')'
   17                  | direct_declarator '(' ')'

   18 parameter_list: parameter_declaration
   19               | parameter_list ',' parameter_declaration

   20 parameter_declaration: declaration_specifiers declarator
   21                      | declaration_specifiers abstract_declarator
   22                      | declaration_specifiers

   23 constant_expression: conditional_expression

   24 declaration: declaration_specifiers ';'
   25            | declaration_specifiers init_declarator ';'

   26 declaration_specifiers: type_specifier
   27                       | type_specifier declaration_specifiers
   28                       | TYPEDEF
   29                       | TYPEDEF declaration_specifiers

   30 init_declarator: declarator
   31                | declarator '=' initializer

   32 initializer: assignment_expression
   33            | '{' initializer_list '}'
   34            | '{' initializer_list ',' '}'

   35 initializer_list: initializer
   36                 | initializer_list ',' initializer

   37 abstract_declarator: pointer
   38                    | direct_abstract_declarator
   39                    | pointer direct_abstract_declarator

   40 direct_abstract_declarator: '(' abstract_declarator ')'
   41                           | '[' ']'
   42                           | '[' constant_expression ']'
   43                           | direct_abstract_declarator '[' ']'
   44                           | direct_abstract_declarator '[' constant_expression ']'
   45                           | '(' ')'
   46                           | '(' parameter_list ')'
   47                           | direct_abstract_declarator '(' ')'
   48                           | direct_abstract_declarator '(' parameter_list ')'

   49 compound_statement: '{' '}'
   50                   | '{' declaration_list '}'
   51                   | '{' statement_list '}'
   52                   | '{' declaration_list statement_list '}'

   53 declaration_list: declaration
   54                 | declaration_list declaration

   55 statement_list: statement
   56               | statement_list statement

   57 statement: labeled_statement
   58          | expression_statement
   59          | selection_statement
   60          | iteration_statement
   61          | jump_statement
   62          | compound_statement

   63 labeled_statement: IDENTIFIER ':' statement
   64                  | CASE constant_expression ':' statement
   65                  | DEFAULT ':' statement

   66 expression_statement: ';'
   67                     | expression ';'

   68 selection_statement: IF '(' expression ')' statement
   69                    | IF '(' expression ')' statement ELSE statement
   70                    | SWITCH '(' expression ')' statement

   71 iteration_statement: WHILE '(' expression ')' statement
   72                    | DO statement WHILE '(' expression ')' ';'
   73                    | FOR '(' expression_statement expression_statement ')' statement
   74                    | FOR '(' expression_statement expression_statement expression ')' statement

   75 jump_statement: GOTO IDENTIFIER ';'
   76               | CONTINUE ';'
   77               | BREAK ';'
   78               | RETURN ';'
   79               | RETURN expression ';'

   80 primary_expression: IDENTIFIER
   81                   | INT_LITERAL
   82                   | '(' expression ')'

   83 postfix_expression: primary_expression
   84                   | postfix_expression '[' expression ']'
   85                   | postfix_expression '(' ')'
   86                   | postfix_expression '(' argument_expression_list ')'
   87                   | postfix_expression '.' IDENTIFIER
   88                   | postfix_expression POINTER_OP IDENTIFIER
   89                   | postfix_expression INCREMENT_OP
   90                   | postfix_expression DECREMENT_OP

   91 argument_expression_list: assignment_expression
   92                         | argument_expression_list ',' assignment_expression

   93 unary_expression: postfix_expression
   94                 | INCREMENT_OP unary_expression
   95                 | DECREMENT_OP unary_expression
   96                 | unary_operator cast_expression
   97                 | '-' unary_expression
   98                 | SIZEOF unary_expression
   99                 | SIZEOF '(' type_name ')'

  100 unary_operator: '&'
  101               | '*'
  102               | '+'
  103               | '-'
  104               | '~'
  105               | '!'

  106 cast_expression: unary_expression
  107                | '(' type_name ')' cast_expression

  108 multiplicative_expression: cast_expression
  109                          | multiplicative_expression '*' cast_expression
  110                          | multiplicative_expression '/' cast_expression
  111                          | multiplicative_expression '%' cast_expression

  112 additive_expression: multiplicative_expression
  113                    | additive_expression '+' multiplicative_expression
  114                    | additive_expression '-' multiplicative_expression

  115 shift_expression: additive_expression
  116                 | shift_expression LEFTSHIFT_OP additive_expression
  117                 | shift_expression RIGHTSHIFT_OP additive_expression

  118 relational_expression: shift_expression
  119                      | relational_expression '<' shift_expression
  120                      | relational_expression '>' shift_expression
  121                      | relational_expression LE_OP shift_expression
  122                      | relational_expression GE_OP shift_expression

  123 equality_expression: relational_expression
  124                    | equality_expression EQ_OP relational_expression
  125                    | equality_expression NE_OP relational_expression

  126 and_expression: equality_expression
  127               | and_expression '&' equality_expression

  128 exclusive_or_expression: and_expression
  129                        | exclusive_or_expression '^' and_expression

  130 inclusive_or_expression: exclusive_or_expression
  131                        | inclusive_or_expression '|' exclusive_or_expression

  132 logical_and_expression: inclusive_or_expression
  133                       | logical_and_expression AND_OP inclusive_or_expression

  134 logical_or_expression: logical_and_expression
  135                      | logical_or_expression OR_OP logical_and_expression

  136 conditional_expression: logical_or_expression
  137                       | logical_or_expression '?' expression ':' conditional_expression

  138 assignment_expression: conditional_expression
  139                      | unary_expression assignment_operator assignment_expression

  140 assignment_operator: '='
  141                    | MUL_ASSIGN
  142                    | DIV_ASSIGN
  143                    | MOD_ASSIGN
  144                    | ADD_ASSIGN
  145                    | SUB_ASSIGN
  146                    | LEFTSHIFT_ASSIGN
  147                    | RIGHTSHIFT_ASSIGN
  148                    | AND_ASSIGN
  149                    | XOR_ASSIGN
  150                    | OR_ASSIGN

  151 expression: assignment_expression
  152           | expression ',' assignment_expression

  153 type_specifier: VOID
  154               | CHAR
  155               | SHORT
  156               | INT
  157               | LONG
  158               | FLOAT
  159               | DOUBLE
  160               | SIGNED
  161               | UNSIGNED
  162               | enum_specifier

  163 specifier_qualifier_list: type_specifier specifier_qualifier_list
  164                         | type_specifier
  165                         | type_qualifier specifier_qualifier_list
  166                         | type_qualifier

  167 enum_specifier: ENUM '{' enumerator_list '}'
  168               | ENUM IDENTIFIER '{' enumerator_list '}'
  169               | ENUM IDENTIFIER

  170 enumerator_list: enumerator
  171                | enumerator_list ',' enumerator

  172 enumerator: IDENTIFIER
  173           | IDENTIFIER '=' constant_expression

  174 type_qualifier: CONST
  175               | VOLATILE

  176 pointer: '*'
  177        | '*' type_qualifier_list
  178        | '*' pointer
  179        | '*' type_qualifier_list pointer

  180 type_qualifier_list: type_qualifier
  181                    | type_qualifier_list type_qualifier

  182 identifier_list: IDENTIFIER
  183                | identifier_list ',' IDENTIFIER

  184 type_name: specifier_qualifier_list
  185          | specifier_qualifier_list abstract_declarator


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 105
    '%' (37) 111
    '&' (38) 100 127
    '(' (40) 12 15 16 17 40 45 46 47 48 68 69 70 71 72 73 74 82 85 86 99 107
    ')' (41) 12 15 16 17 40 45 46 47 48 68 69 70 71 72 73 74 82 85 86 99 107
    '*' (42) 101 109 176 177 178 179
    '+' (43) 102 113
    ',' (44) 19 34 36 92 152 171 183
    '-' (45) 97 103 114
    '.' (46) 87
    '/' (47) 110
    ':' (58) 63 64 65 137
    ';' (59) 7 24 25 66 67 72 75 76 77 78 79
    '<' (60) 119
    '=' (61) 31 140 173
    '>' (62) 120
    '?' (63) 137
    '[' (91) 13 14 41 42 43 44 84
    ']' (93) 13 14 41 42 43 44 84
    '^' (94) 129
    '{' (123) 33 34 49 50 51 52 167 168
    '|' (124) 131
    '}' (125) 33 34 49 50 51 52 167 168
    '~' (126) 104
    error (256)
    IDENTIFIER <string> (258) 11 63 75 80 87 88 168 169 172 173 182 183
    INT_LITERAL <integer> (259) 81
    CHAR_LITERAL (260)
    SIZEOF (261) 98 99
    POINTER_OP (262) 88
    INCREMENT_OP (263) 89 94
    DECREMENT_OP (264) 90 95
    LEFTSHIFT_OP (265) 116
    RIGHTSHIFT_OP (266) 117
    LE_OP (267) 121
    GE_OP (268) 122
    EQ_OP (269) 124
    NE_OP (270) 125
    AND_OP (271) 133
    OR_OP (272) 135
    MUL_ASSIGN (273) 141
    DIV_ASSIGN (274) 142
    MOD_ASSIGN (275) 143
    ADD_ASSIGN (276) 144
    SUB_ASSIGN (277) 145
    LEFTSHIFT_ASSIGN (278) 146
    RIGHTSHIFT_ASSIGN (279) 147
    AND_ASSIGN (280) 148
    XOR_ASSIGN (281) 149
    OR_ASSIGN (282) 150
    TYPE_NAME (283)
    TYPEDEF (284) 28 29
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 154
    SHORT (290) 155
    INT (291) 156
    LONG (292) 157
    SIGNED (293) 160
    UNSIGNED (294) 161
    FLOAT (295) 158
    DOUBLE (296) 159
    CONST (297) 174
    VOLATILE (298) 175
    VOID (299) 153
    STRUCT (300)
    UNION (301)
    ENUM (302) 167 168 169
    ELLIPSIS (303)
    CASE (304) 64
    DEFAULT (305) 65
    IF (306) 68 69
    ELSE (307) 69
    SWITCH (308) 70
    WHILE (309) 71 72
    DO (310) 72
    FOR (311) 73 74
    GOTO (312) 75
    CONTINUE (313) 76
    BREAK (314) 77
    RETURN (315) 78 79
    uminu (316)
    NOELSE (317)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    ROOT (88)
        on left: 1
        on right: 0
    translation_unit <expressionList> (89)
        on left: 2 3
        on right: 1 3
    external_declaration <expr> (90)
        on left: 4 5
        on right: 2 3
    function_definition <expr> (91)
        on left: 6 7 8
        on right: 4
    declarator <expr> (92)
        on left: 9 10
        on right: 6 7 8 12 20 30 31
    direct_declarator <expr> (93)
        on left: 11 12 13 14 15 16 17
        on right: 9 10 13 14 15 16 17
    parameter_list <expressionList> (94)
        on left: 18 19
        on right: 15 19 46 48
    parameter_declaration <expr> (95)
        on left: 20 21 22
        on right: 18 19
    constant_expression <expr> (96)
        on left: 23
        on right: 13 42 44 64 173
    declaration <expr> (97)
        on left: 24 25
        on right: 5 53 54
    declaration_specifiers <string> (98)
        on left: 26 27 28 29
        on right: 6 7 20 21 22 24 25 27 29
    init_declarator <expr> (99)
        on left: 30 31
        on right: 25
    initializer <expr> (100)
        on left: 32 33 34
        on right: 31 35 36
    initializer_list <expressionList> (101)
        on left: 35 36
        on right: 33 34 36
    abstract_declarator <expr> (102)
        on left: 37 38 39
        on right: 21 40 185
    direct_abstract_declarator <expr> (103)
        on left: 40 41 42 43 44 45 46 47 48
        on right: 38 39 43 44 47 48
    compound_statement <expressionList> (104)
        on left: 49 50 51 52
        on right: 6 62
    declaration_list <expressionList> (105)
        on left: 53 54
        on right: 50 52 54
    statement_list <expressionList> (106)
        on left: 55 56
        on right: 51 52 56
    statement <expr> (107)
        on left: 57 58 59 60 61 62
        on right: 55 56 63 64 65 68 69 70 71 72 73 74
    labeled_statement <expr> (108)
        on left: 63 64 65
        on right: 57
    expression_statement <expr> (109)
        on left: 66 67
        on right: 58 73 74
    selection_statement <expr> (110)
        on left: 68 69 70
        on right: 59
    iteration_statement <expr> (111)
        on left: 71 72 73 74
        on right: 60
    jump_statement <expr> (112)
        on left: 75 76 77 78 79
        on right: 61
    primary_expression <expr> (113)
        on left: 80 81 82
        on right: 83
    postfix_expression <expr> (114)
        on left: 83 84 85 86 87 88 89 90
        on right: 84 85 86 87 88 89 90 93
    argument_expression_list <expressionList> (115)
        on left: 91 92
        on right: 86 92
    unary_expression <expr> (116)
        on left: 93 94 95 96 97 98 99
        on right: 94 95 97 98 106 139
    unary_operator (117)
        on left: 100 101 102 103 104 105
        on right: 96
    cast_expression <expr> (118)
        on left: 106 107
        on right: 96 107 108 109 110 111
    multiplicative_expression <expr> (119)
        on left: 108 109 110 111
        on right: 109 110 111 112 113 114
    additive_expression <expr> (120)
        on left: 112 113 114
        on right: 113 114 115 116 117
    shift_expression <expr> (121)
        on left: 115 116 117
        on right: 116 117 118 119 120 121 122
    relational_expression <expr> (122)
        on left: 118 119 120 121 122
        on right: 119 120 121 122 123 124 125
    equality_expression <expr> (123)
        on left: 123 124 125
        on right: 124 125 126 127
    and_expression <expr> (124)
        on left: 126 127
        on right: 127 128 129
    exclusive_or_expression <expr> (125)
        on left: 128 129
        on right: 129 130 131
    inclusive_or_expression <expr> (126)
        on left: 130 131
        on right: 131 132 133
    logical_and_expression <expr> (127)
        on left: 132 133
        on right: 133 134 135
    logical_or_expression <expr> (128)
        on left: 134 135
        on right: 135 136 137
    conditional_expression <expr> (129)
        on left: 136 137
        on right: 23 137 138
    assignment_expression <expr> (130)
        on left: 138 139
        on right: 32 91 92 139 151 152
    assignment_operator <string> (131)
        on left: 140 141 142 143 144 145 146 147 148 149 150
        on right: 139
    expression <expr> (132)
        on left: 151 152
        on right: 67 68 69 70 71 72 74 79 82 84 137 152
    type_specifier <string> (133)
        on left: 153 154 155 156 157 158 159 160 161 162
        on right: 26 27 163 164
    specifier_qualifier_list <expressionList> (134)
        on left: 163 164 165 166
        on right: 163 165 184 185
    enum_specifier <expr> (135)
        on left: 167 168 169
        on right: 162
    enumerator_list <expressionList> (136)
        on left: 170 171
        on right: 167 168 171
    enumerator <expr> (137)
        on left: 172 173
        on right: 170 171
    type_qualifier (138)
        on left: 174 175
        on right: 165 166 180 181
    pointer <expr> (139)
        on left: 176 177 178 179
        on right: 9 37 39 178 179
    type_qualifier_list (140)
        on left: 180 181
        on right: 177 179 181
    identifier_list <expressionList> (141)
        on left: 182 183
        on right: 16 183
    type_name <expr> (142)
        on left: 184 185
        on right: 99 107


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    ROOT                    go to state 15
    translation_unit        go to state 16
    external_declaration    go to state 17
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 1

   11 direct_declarator: IDENTIFIER •

    $default  reduce using rule 11 (direct_declarator)


State 2

   28 declaration_specifiers: TYPEDEF •
   29                       | TYPEDEF • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 28 (declaration_specifiers)

    declaration_specifiers  go to state 26
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 3

  154 type_specifier: CHAR •

    $default  reduce using rule 154 (type_specifier)


State 4

  155 type_specifier: SHORT •

    $default  reduce using rule 155 (type_specifier)


State 5

  156 type_specifier: INT •

    $default  reduce using rule 156 (type_specifier)


State 6

  157 type_specifier: LONG •

    $default  reduce using rule 157 (type_specifier)


State 7

  160 type_specifier: SIGNED •

    $default  reduce using rule 160 (type_specifier)


State 8

  161 type_specifier: UNSIGNED •

    $default  reduce using rule 161 (type_specifier)


State 9

  158 type_specifier: FLOAT •

    $default  reduce using rule 158 (type_specifier)


State 10

  159 type_specifier: DOUBLE •

    $default  reduce using rule 159 (type_specifier)


State 11

  153 type_specifier: VOID •

    $default  reduce using rule 153 (type_specifier)


State 12

  167 enum_specifier: ENUM • '{' enumerator_list '}'
  168               | ENUM • IDENTIFIER '{' enumerator_list '}'
  169               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 27
    '{'         shift, and go to state 28


State 13

  176 pointer: '*' •
  177        | '*' • type_qualifier_list
  178        | '*' • pointer
  179        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 176 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 14

   12 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 34
    direct_declarator  go to state 20
    pointer            go to state 25


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 35


State 16

    1 ROOT: translation_unit •
    3 translation_unit: translation_unit • external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 1 (ROOT)

    external_declaration    go to state 36
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 17

    2 translation_unit: external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 18

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 19

    8 function_definition: declarator •

    $default  reduce using rule 8 (function_definition)


State 20

   10 declarator: direct_declarator •
   13 direct_declarator: direct_declarator • '[' constant_expression ']'
   14                  | direct_declarator • '[' ']'
   15                  | direct_declarator • '(' parameter_list ')'
   16                  | direct_declarator • '(' identifier_list ')'
   17                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 10 (declarator)]
    $default  reduce using rule 10 (declarator)


State 21

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 22

    6 function_definition: declaration_specifiers • declarator compound_statement
    7                    | declaration_specifiers • declarator ';'
   24 declaration: declaration_specifiers • ';'
   25            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 40
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 23

   26 declaration_specifiers: type_specifier •
   27                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 26 (declaration_specifiers)

    declaration_specifiers  go to state 42
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 24

  162 type_specifier: enum_specifier •

    $default  reduce using rule 162 (type_specifier)


State 25

    9 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 14

    direct_declarator  go to state 43


State 26

   29 declaration_specifiers: TYPEDEF declaration_specifiers •

    $default  reduce using rule 29 (declaration_specifiers)


State 27

  168 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  169               | ENUM IDENTIFIER •

    '{'  shift, and go to state 44

    $default  reduce using rule 169 (enum_specifier)


State 28

  167 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 45

    enumerator_list  go to state 46
    enumerator       go to state 47


State 29

  174 type_qualifier: CONST •

    $default  reduce using rule 174 (type_qualifier)


State 30

  175 type_qualifier: VOLATILE •

    $default  reduce using rule 175 (type_qualifier)


State 31

  180 type_qualifier_list: type_qualifier •

    $default  reduce using rule 180 (type_qualifier_list)


State 32

  178 pointer: '*' pointer •

    $default  reduce using rule 178 (pointer)


State 33

  177 pointer: '*' type_qualifier_list •
  179        | '*' type_qualifier_list • pointer
  181 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 177 (pointer)

    type_qualifier  go to state 48
    pointer         go to state 49


State 34

   12 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 50


State 35

    0 $accept: ROOT $end •

    $default  accept


State 36

    3 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 3 (translation_unit)


State 37

   15 direct_declarator: direct_declarator '(' • parameter_list ')'
   16                  | direct_declarator '(' • identifier_list ')'
   17                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 51
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    ')'         shift, and go to state 52

    parameter_list          go to state 53
    parameter_declaration   go to state 54
    declaration_specifiers  go to state 55
    type_specifier          go to state 23
    enum_specifier          go to state 24
    identifier_list         go to state 56


State 38

   13 direct_declarator: direct_declarator '[' • constant_expression ']'
   14                  | direct_declarator '[' • ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ']'           shift, and go to state 66
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 70
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 39

   24 declaration: declaration_specifiers ';' •

    $default  reduce using rule 24 (declaration)


State 40

    6 function_definition: declaration_specifiers declarator • compound_statement
    7                    | declaration_specifiers declarator • ';'
   30 init_declarator: declarator •
   31                | declarator • '=' initializer

    ';'  shift, and go to state 87
    '='  shift, and go to state 88
    '{'  shift, and go to state 89

    ';'  [reduce using rule 30 (init_declarator)]

    compound_statement  go to state 90


State 41

   25 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 91


State 42

   27 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 27 (declaration_specifiers)


State 43

    9 declarator: pointer direct_declarator •
   13 direct_declarator: direct_declarator • '[' constant_expression ']'
   14                  | direct_declarator • '[' ']'
   15                  | direct_declarator • '(' parameter_list ')'
   16                  | direct_declarator • '(' identifier_list ')'
   17                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 9 (declarator)]
    $default  reduce using rule 9 (declarator)


State 44

  168 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 45

    enumerator_list  go to state 92
    enumerator       go to state 47


State 45

  172 enumerator: IDENTIFIER •
  173           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 93

    $default  reduce using rule 172 (enumerator)


State 46

  167 enum_specifier: ENUM '{' enumerator_list • '}'
  171 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 94
    '}'  shift, and go to state 95


State 47

  170 enumerator_list: enumerator •

    $default  reduce using rule 170 (enumerator_list)


State 48

  181 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 181 (type_qualifier_list)


State 49

  179 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 179 (pointer)


State 50

   12 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 12 (direct_declarator)


State 51

  182 identifier_list: IDENTIFIER •

    $default  reduce using rule 182 (identifier_list)


State 52

   17 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 17 (direct_declarator)


State 53

   15 direct_declarator: direct_declarator '(' parameter_list • ')'
   19 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 96
    ','  shift, and go to state 97


State 54

   18 parameter_list: parameter_declaration •

    $default  reduce using rule 18 (parameter_list)


State 55

   20 parameter_declaration: declaration_specifiers • declarator
   21                      | declaration_specifiers • abstract_declarator
   22                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 98
    '['         shift, and go to state 99

    $default  reduce using rule 22 (parameter_declaration)

    declarator                  go to state 100
    direct_declarator           go to state 20
    abstract_declarator         go to state 101
    direct_abstract_declarator  go to state 102
    pointer                     go to state 103


State 56

   16 direct_declarator: direct_declarator '(' identifier_list • ')'
  183 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 104
    ','  shift, and go to state 105


State 57

   80 primary_expression: IDENTIFIER •

    $default  reduce using rule 80 (primary_expression)


State 58

   81 primary_expression: INT_LITERAL •

    $default  reduce using rule 81 (primary_expression)


State 59

   98 unary_expression: SIZEOF • unary_expression
   99                 | SIZEOF • '(' type_name ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 106
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 107
    unary_operator      go to state 74


State 60

   94 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 108
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 109
    unary_operator      go to state 74


State 61

   95 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 108
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 110
    unary_operator      go to state 74


State 62

  102 unary_operator: '+' •

    $default  reduce using rule 102 (unary_operator)


State 63

   97 unary_expression: '-' • unary_expression
  103 unary_operator: '-' •

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '*'           shift, and go to state 64
    '('           shift, and go to state 108
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    IDENTIFIER    [reduce using rule 103 (unary_operator)]
    INT_LITERAL   [reduce using rule 103 (unary_operator)]
    SIZEOF        [reduce using rule 103 (unary_operator)]
    INCREMENT_OP  [reduce using rule 103 (unary_operator)]
    DECREMENT_OP  [reduce using rule 103 (unary_operator)]
    '('           [reduce using rule 103 (unary_operator)]
    '&'           [reduce using rule 103 (unary_operator)]
    '~'           [reduce using rule 103 (unary_operator)]
    '!'           [reduce using rule 103 (unary_operator)]
    $default      reduce using rule 103 (unary_operator)

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 111
    unary_operator      go to state 74


State 64

  101 unary_operator: '*' •

    $default  reduce using rule 101 (unary_operator)


State 65

   82 primary_expression: '(' • expression ')'
  107 cast_expression: '(' • type_name ')' cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 24
    type_qualifier             go to state 118
    type_name                  go to state 119


State 66

   14 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 14 (direct_declarator)


State 67

  100 unary_operator: '&' •

    $default  reduce using rule 100 (unary_operator)


State 68

  104 unary_operator: '~' •

    $default  reduce using rule 104 (unary_operator)


State 69

  105 unary_operator: '!' •

    $default  reduce using rule 105 (unary_operator)


State 70

   13 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 120


State 71

   83 postfix_expression: primary_expression •

    $default  reduce using rule 83 (postfix_expression)


State 72

   84 postfix_expression: postfix_expression • '[' expression ']'
   85                   | postfix_expression • '(' ')'
   86                   | postfix_expression • '(' argument_expression_list ')'
   87                   | postfix_expression • '.' IDENTIFIER
   88                   | postfix_expression • POINTER_OP IDENTIFIER
   89                   | postfix_expression • INCREMENT_OP
   90                   | postfix_expression • DECREMENT_OP
   93 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 121
    INCREMENT_OP  shift, and go to state 122
    DECREMENT_OP  shift, and go to state 123
    '('           shift, and go to state 124
    '['           shift, and go to state 125
    '.'           shift, and go to state 126

    $default  reduce using rule 93 (unary_expression)


State 73

  106 cast_expression: unary_expression •

    $default  reduce using rule 106 (cast_expression)


State 74

   96 unary_expression: unary_operator • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 127


State 75

  108 multiplicative_expression: cast_expression •

    $default  reduce using rule 108 (multiplicative_expression)


State 76

  109 multiplicative_expression: multiplicative_expression • '*' cast_expression
  110                          | multiplicative_expression • '/' cast_expression
  111                          | multiplicative_expression • '%' cast_expression
  112 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 128
    '/'  shift, and go to state 129
    '%'  shift, and go to state 130

    $default  reduce using rule 112 (additive_expression)


State 77

  113 additive_expression: additive_expression • '+' multiplicative_expression
  114                    | additive_expression • '-' multiplicative_expression
  115 shift_expression: additive_expression •

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132

    $default  reduce using rule 115 (shift_expression)


State 78

  116 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  117                 | shift_expression • RIGHTSHIFT_OP additive_expression
  118 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 133
    RIGHTSHIFT_OP  shift, and go to state 134

    $default  reduce using rule 118 (relational_expression)


State 79

  119 relational_expression: relational_expression • '<' shift_expression
  120                      | relational_expression • '>' shift_expression
  121                      | relational_expression • LE_OP shift_expression
  122                      | relational_expression • GE_OP shift_expression
  123 equality_expression: relational_expression •

    LE_OP  shift, and go to state 135
    GE_OP  shift, and go to state 136
    '<'    shift, and go to state 137
    '>'    shift, and go to state 138

    $default  reduce using rule 123 (equality_expression)


State 80

  124 equality_expression: equality_expression • EQ_OP relational_expression
  125                    | equality_expression • NE_OP relational_expression
  126 and_expression: equality_expression •

    EQ_OP  shift, and go to state 139
    NE_OP  shift, and go to state 140

    $default  reduce using rule 126 (and_expression)


State 81

  127 and_expression: and_expression • '&' equality_expression
  128 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 141

    $default  reduce using rule 128 (exclusive_or_expression)


State 82

  129 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  130 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 142

    $default  reduce using rule 130 (inclusive_or_expression)


State 83

  131 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  132 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 143

    $default  reduce using rule 132 (logical_and_expression)


State 84

  133 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  134 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 144

    $default  reduce using rule 134 (logical_or_expression)


State 85

  135 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  136 conditional_expression: logical_or_expression •
  137                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 145
    '?'    shift, and go to state 146

    $default  reduce using rule 136 (conditional_expression)


State 86

   23 constant_expression: conditional_expression •

    $default  reduce using rule 23 (constant_expression)


State 87

    7 function_definition: declaration_specifiers declarator ';' •

    $default  reduce using rule 7 (function_definition)


State 88

   31 init_declarator: declarator '=' • initializer

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '{'           shift, and go to state 147
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    initializer                go to state 148
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 149


State 89

   49 compound_statement: '{' • '}'
   50                   | '{' • declaration_list '}'
   51                   | '{' • statement_list '}'
   52                   | '{' • declaration_list statement_list '}'

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '}'           shift, and go to state 163
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    declaration                go to state 164
    declaration_specifiers     go to state 165
    compound_statement         go to state 166
    declaration_list           go to state 167
    statement_list             go to state 168
    statement                  go to state 169
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175
    type_specifier             go to state 23
    enum_specifier             go to state 24


State 90

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 91

   25 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 25 (declaration)


State 92

  168 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  171 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 94
    '}'  shift, and go to state 176


State 93

  173 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 177
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 94

  171 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 45

    enumerator  go to state 178


State 95

  167 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 167 (enum_specifier)


State 96

   15 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 15 (direct_declarator)


State 97

   19 parameter_list: parameter_list ',' • parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    parameter_declaration   go to state 179
    declaration_specifiers  go to state 55
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 98

   12 direct_declarator: '(' • declarator ')'
   40 direct_abstract_declarator: '(' • abstract_declarator ')'
   45                           | '(' • ')'
   46                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 98
    ')'         shift, and go to state 180
    '['         shift, and go to state 99

    declarator                  go to state 34
    direct_declarator           go to state 20
    parameter_list              go to state 181
    parameter_declaration       go to state 54
    declaration_specifiers      go to state 55
    abstract_declarator         go to state 182
    direct_abstract_declarator  go to state 102
    type_specifier              go to state 23
    enum_specifier              go to state 24
    pointer                     go to state 103


State 99

   41 direct_abstract_declarator: '[' • ']'
   42                           | '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ']'           shift, and go to state 183
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 184
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 100

   20 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 20 (parameter_declaration)


State 101

   21 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 21 (parameter_declaration)


State 102

   38 abstract_declarator: direct_abstract_declarator •
   43 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   44                           | direct_abstract_declarator • '[' constant_expression ']'
   47                           | direct_abstract_declarator • '(' ')'
   48                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 185
    '['  shift, and go to state 186

    $default  reduce using rule 38 (abstract_declarator)


State 103

    9 declarator: pointer • direct_declarator
   37 abstract_declarator: pointer •
   39                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 98
    '['         shift, and go to state 99

    $default  reduce using rule 37 (abstract_declarator)

    direct_declarator           go to state 43
    direct_abstract_declarator  go to state 187


State 104

   16 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 16 (direct_declarator)


State 105

  183 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 188


State 106

   82 primary_expression: '(' • expression ')'
   99 unary_expression: SIZEOF '(' • type_name ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 24
    type_qualifier             go to state 118
    type_name                  go to state 189


State 107

   98 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 98 (unary_expression)


State 108

   82 primary_expression: '(' • expression ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115


State 109

   94 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 94 (unary_expression)


State 110

   95 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 95 (unary_expression)


State 111

   97 unary_expression: '-' unary_expression •

    $default  reduce using rule 97 (unary_expression)


State 112

  106 cast_expression: unary_expression •
  139 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 190
    DIV_ASSIGN         shift, and go to state 191
    MOD_ASSIGN         shift, and go to state 192
    ADD_ASSIGN         shift, and go to state 193
    SUB_ASSIGN         shift, and go to state 194
    LEFTSHIFT_ASSIGN   shift, and go to state 195
    RIGHTSHIFT_ASSIGN  shift, and go to state 196
    AND_ASSIGN         shift, and go to state 197
    XOR_ASSIGN         shift, and go to state 198
    OR_ASSIGN          shift, and go to state 199
    '='                shift, and go to state 200

    $default  reduce using rule 106 (cast_expression)

    assignment_operator  go to state 201


State 113

  138 assignment_expression: conditional_expression •

    $default  reduce using rule 138 (assignment_expression)


State 114

  151 expression: assignment_expression •

    $default  reduce using rule 151 (expression)


State 115

   82 primary_expression: '(' expression • ')'
  152 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 202
    ','  shift, and go to state 203


State 116

  163 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  164                         | type_specifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 164 (specifier_qualifier_list)

    type_specifier            go to state 116
    specifier_qualifier_list  go to state 204
    enum_specifier            go to state 24
    type_qualifier            go to state 118


State 117

  184 type_name: specifier_qualifier_list •
  185          | specifier_qualifier_list • abstract_declarator

    '*'  shift, and go to state 13
    '('  shift, and go to state 205
    '['  shift, and go to state 99

    $default  reduce using rule 184 (type_name)

    abstract_declarator         go to state 206
    direct_abstract_declarator  go to state 102
    pointer                     go to state 207


State 118

  165 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  166                         | type_qualifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12

    $default  reduce using rule 166 (specifier_qualifier_list)

    type_specifier            go to state 116
    specifier_qualifier_list  go to state 208
    enum_specifier            go to state 24
    type_qualifier            go to state 118


State 119

  107 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 209


State 120

   13 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 13 (direct_declarator)


State 121

   88 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 210


State 122

   89 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 89 (postfix_expression)


State 123

   90 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 90 (postfix_expression)


State 124

   85 postfix_expression: postfix_expression '(' • ')'
   86                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ')'           shift, and go to state 211
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    argument_expression_list   go to state 212
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 213


State 125

   84 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 214


State 126

   87 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 127

   96 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 96 (unary_expression)


State 128

  109 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 216


State 129

  110 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 217


State 130

  111 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 218


State 131

  113 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 219


State 132

  114 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 220


State 133

  116 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 221


State 134

  117 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 222


State 135

  121 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 223


State 136

  122 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 224


State 137

  119 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 225


State 138

  120 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 226


State 139

  124 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 227


State 140

  125 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 228


State 141

  127 and_expression: and_expression '&' • equality_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 229


State 142

  129 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 230


State 143

  131 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 231


State 144

  133 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 232


State 145

  135 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 233


State 146

  137 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 234


State 147

   33 initializer: '{' • initializer_list '}'
   34            | '{' • initializer_list ',' '}'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '{'           shift, and go to state 147
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    initializer                go to state 235
    initializer_list           go to state 236
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 149


State 148

   31 init_declarator: declarator '=' initializer •

    $default  reduce using rule 31 (init_declarator)


State 149

   32 initializer: assignment_expression •

    $default  reduce using rule 32 (initializer)


State 150

   63 labeled_statement: IDENTIFIER • ':' statement
   80 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 237

    $default  reduce using rule 80 (primary_expression)


State 151

   64 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 238
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 152

   65 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 239


State 153

   68 selection_statement: IF • '(' expression ')' statement
   69                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 240


State 154

   70 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 241


State 155

   71 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 242


State 156

   72 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 243
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 157

   73 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   74                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 244


State 158

   75 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 245


State 159

   76 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 246


State 160

   77 jump_statement: BREAK • ';'

    ';'  shift, and go to state 247


State 161

   78 jump_statement: RETURN • ';'
   79               | RETURN • expression ';'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 248
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 249


State 162

   66 expression_statement: ';' •

    $default  reduce using rule 66 (expression_statement)


State 163

   49 compound_statement: '{' '}' •

    $default  reduce using rule 49 (compound_statement)


State 164

   53 declaration_list: declaration •

    $default  reduce using rule 53 (declaration_list)


State 165

   24 declaration: declaration_specifiers • ';'
   25            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 250
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 166

   62 statement: compound_statement •

    $default  reduce using rule 62 (statement)


State 167

   50 compound_statement: '{' declaration_list • '}'
   52                   | '{' declaration_list • statement_list '}'
   54 declaration_list: declaration_list • declaration

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    ENUM          shift, and go to state 12
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '}'           shift, and go to state 251
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    declaration                go to state 252
    declaration_specifiers     go to state 165
    compound_statement         go to state 166
    statement_list             go to state 253
    statement                  go to state 169
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175
    type_specifier             go to state 23
    enum_specifier             go to state 24


State 168

   51 compound_statement: '{' statement_list • '}'
   56 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '}'           shift, and go to state 254
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 255
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 169

   55 statement_list: statement •

    $default  reduce using rule 55 (statement_list)


State 170

   57 statement: labeled_statement •

    $default  reduce using rule 57 (statement)


State 171

   58 statement: expression_statement •

    $default  reduce using rule 58 (statement)


State 172

   59 statement: selection_statement •

    $default  reduce using rule 59 (statement)


State 173

   60 statement: iteration_statement •

    $default  reduce using rule 60 (statement)


State 174

   61 statement: jump_statement •

    $default  reduce using rule 61 (statement)


State 175

   67 expression_statement: expression • ';'
  152 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 256
    ','  shift, and go to state 203


State 176

  168 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 168 (enum_specifier)


State 177

  173 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 173 (enumerator)


State 178

  171 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 171 (enumerator_list)


State 179

   19 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 19 (parameter_list)


State 180

   45 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 45 (direct_abstract_declarator)


State 181

   19 parameter_list: parameter_list • ',' parameter_declaration
   46 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 257
    ','  shift, and go to state 97


State 182

   40 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 258


State 183

   41 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 41 (direct_abstract_declarator)


State 184

   42 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 259


State 185

   47 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   48                           | direct_abstract_declarator '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    ')'       shift, and go to state 260

    parameter_list          go to state 261
    parameter_declaration   go to state 54
    declaration_specifiers  go to state 55
    type_specifier          go to state 23
    enum_specifier          go to state 24


State 186

   43 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
   44                           | direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ']'           shift, and go to state 262
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    constant_expression        go to state 263
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 86


State 187

   39 abstract_declarator: pointer direct_abstract_declarator •
   43 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   44                           | direct_abstract_declarator • '[' constant_expression ']'
   47                           | direct_abstract_declarator • '(' ')'
   48                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 185
    '['  shift, and go to state 186

    $default  reduce using rule 39 (abstract_declarator)


State 188

  183 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 183 (identifier_list)


State 189

   99 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 264


State 190

  141 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 141 (assignment_operator)


State 191

  142 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 142 (assignment_operator)


State 192

  143 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 143 (assignment_operator)


State 193

  144 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 144 (assignment_operator)


State 194

  145 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 145 (assignment_operator)


State 195

  146 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 146 (assignment_operator)


State 196

  147 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 147 (assignment_operator)


State 197

  148 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 148 (assignment_operator)


State 198

  149 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 149 (assignment_operator)


State 199

  150 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 150 (assignment_operator)


State 200

  140 assignment_operator: '=' •

    $default  reduce using rule 140 (assignment_operator)


State 201

  139 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 265


State 202

   82 primary_expression: '(' expression ')' •

    $default  reduce using rule 82 (primary_expression)


State 203

  152 expression: expression ',' • assignment_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 266


State 204

  163 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 163 (specifier_qualifier_list)


State 205

   40 direct_abstract_declarator: '(' • abstract_declarator ')'
   45                           | '(' • ')'
   46                           | '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ENUM      shift, and go to state 12
    '*'       shift, and go to state 13
    '('       shift, and go to state 205
    ')'       shift, and go to state 180
    '['       shift, and go to state 99

    parameter_list              go to state 181
    parameter_declaration       go to state 54
    declaration_specifiers      go to state 55
    abstract_declarator         go to state 182
    direct_abstract_declarator  go to state 102
    type_specifier              go to state 23
    enum_specifier              go to state 24
    pointer                     go to state 207


State 206

  185 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 185 (type_name)


State 207

   37 abstract_declarator: pointer •
   39                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 205
    '['  shift, and go to state 99

    $default  reduce using rule 37 (abstract_declarator)

    direct_abstract_declarator  go to state 187


State 208

  165 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 165 (specifier_qualifier_list)


State 209

  107 cast_expression: '(' type_name ')' • cast_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression  go to state 71
    postfix_expression  go to state 72
    unary_expression    go to state 73
    unary_operator      go to state 74
    cast_expression     go to state 267


State 210

   88 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 88 (postfix_expression)


State 211

   85 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 85 (postfix_expression)


State 212

   86 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   92 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 268
    ','  shift, and go to state 269


State 213

   91 argument_expression_list: assignment_expression •

    $default  reduce using rule 91 (argument_expression_list)


State 214

   84 postfix_expression: postfix_expression '[' expression • ']'
  152 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 270
    ','  shift, and go to state 203


State 215

   87 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 87 (postfix_expression)


State 216

  109 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 109 (multiplicative_expression)


State 217

  110 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 110 (multiplicative_expression)


State 218

  111 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 111 (multiplicative_expression)


State 219

  109 multiplicative_expression: multiplicative_expression • '*' cast_expression
  110                          | multiplicative_expression • '/' cast_expression
  111                          | multiplicative_expression • '%' cast_expression
  113 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 128
    '/'  shift, and go to state 129
    '%'  shift, and go to state 130

    $default  reduce using rule 113 (additive_expression)


State 220

  109 multiplicative_expression: multiplicative_expression • '*' cast_expression
  110                          | multiplicative_expression • '/' cast_expression
  111                          | multiplicative_expression • '%' cast_expression
  114 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 128
    '/'  shift, and go to state 129
    '%'  shift, and go to state 130

    $default  reduce using rule 114 (additive_expression)


State 221

  113 additive_expression: additive_expression • '+' multiplicative_expression
  114                    | additive_expression • '-' multiplicative_expression
  116 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132

    $default  reduce using rule 116 (shift_expression)


State 222

  113 additive_expression: additive_expression • '+' multiplicative_expression
  114                    | additive_expression • '-' multiplicative_expression
  117 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132

    $default  reduce using rule 117 (shift_expression)


State 223

  116 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  117                 | shift_expression • RIGHTSHIFT_OP additive_expression
  121 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 133
    RIGHTSHIFT_OP  shift, and go to state 134

    $default  reduce using rule 121 (relational_expression)


State 224

  116 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  117                 | shift_expression • RIGHTSHIFT_OP additive_expression
  122 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 133
    RIGHTSHIFT_OP  shift, and go to state 134

    $default  reduce using rule 122 (relational_expression)


State 225

  116 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  117                 | shift_expression • RIGHTSHIFT_OP additive_expression
  119 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 133
    RIGHTSHIFT_OP  shift, and go to state 134

    $default  reduce using rule 119 (relational_expression)


State 226

  116 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  117                 | shift_expression • RIGHTSHIFT_OP additive_expression
  120 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 133
    RIGHTSHIFT_OP  shift, and go to state 134

    $default  reduce using rule 120 (relational_expression)


State 227

  119 relational_expression: relational_expression • '<' shift_expression
  120                      | relational_expression • '>' shift_expression
  121                      | relational_expression • LE_OP shift_expression
  122                      | relational_expression • GE_OP shift_expression
  124 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 135
    GE_OP  shift, and go to state 136
    '<'    shift, and go to state 137
    '>'    shift, and go to state 138

    $default  reduce using rule 124 (equality_expression)


State 228

  119 relational_expression: relational_expression • '<' shift_expression
  120                      | relational_expression • '>' shift_expression
  121                      | relational_expression • LE_OP shift_expression
  122                      | relational_expression • GE_OP shift_expression
  125 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 135
    GE_OP  shift, and go to state 136
    '<'    shift, and go to state 137
    '>'    shift, and go to state 138

    $default  reduce using rule 125 (equality_expression)


State 229

  124 equality_expression: equality_expression • EQ_OP relational_expression
  125                    | equality_expression • NE_OP relational_expression
  127 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 139
    NE_OP  shift, and go to state 140

    $default  reduce using rule 127 (and_expression)


State 230

  127 and_expression: and_expression • '&' equality_expression
  129 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 141

    $default  reduce using rule 129 (exclusive_or_expression)


State 231

  129 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  131 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 142

    $default  reduce using rule 131 (inclusive_or_expression)


State 232

  131 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  133 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 143

    $default  reduce using rule 133 (logical_and_expression)


State 233

  133 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  135 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 144

    $default  reduce using rule 135 (logical_or_expression)


State 234

  137 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  152 expression: expression • ',' assignment_expression

    ','  shift, and go to state 203
    ':'  shift, and go to state 271


State 235

   35 initializer_list: initializer •

    $default  reduce using rule 35 (initializer_list)


State 236

   33 initializer: '{' initializer_list • '}'
   34            | '{' initializer_list • ',' '}'
   36 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 272
    '}'  shift, and go to state 273


State 237

   63 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 274
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 238

   64 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 275


State 239

   65 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 276
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 240

   68 selection_statement: IF '(' • expression ')' statement
   69                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 277


State 241

   70 selection_statement: SWITCH '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 278


State 242

   71 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 279


State 243

   72 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 280


State 244

   73 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   74                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    expression_statement       go to state 281
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 245

   75 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 282


State 246

   76 jump_statement: CONTINUE ';' •

    $default  reduce using rule 76 (jump_statement)


State 247

   77 jump_statement: BREAK ';' •

    $default  reduce using rule 77 (jump_statement)


State 248

   78 jump_statement: RETURN ';' •

    $default  reduce using rule 78 (jump_statement)


State 249

   79 jump_statement: RETURN expression • ';'
  152 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 283
    ','  shift, and go to state 203


State 250

   30 init_declarator: declarator •
   31                | declarator • '=' initializer

    '='  shift, and go to state 88

    $default  reduce using rule 30 (init_declarator)


State 251

   50 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 50 (compound_statement)


State 252

   54 declaration_list: declaration_list declaration •

    $default  reduce using rule 54 (declaration_list)


State 253

   52 compound_statement: '{' declaration_list statement_list • '}'
   56 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '}'           shift, and go to state 284
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 255
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 254

   51 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 51 (compound_statement)


State 255

   56 statement_list: statement_list statement •

    $default  reduce using rule 56 (statement_list)


State 256

   67 expression_statement: expression ';' •

    $default  reduce using rule 67 (expression_statement)


State 257

   46 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 258

   40 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 40 (direct_abstract_declarator)


State 259

   42 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 260

   47 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 47 (direct_abstract_declarator)


State 261

   19 parameter_list: parameter_list • ',' parameter_declaration
   48 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 285
    ','  shift, and go to state 97


State 262

   43 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 263

   44 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 286


State 264

   99 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 99 (unary_expression)


State 265

  139 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 139 (assignment_expression)


State 266

  152 expression: expression ',' assignment_expression •

    $default  reduce using rule 152 (expression)


State 267

  107 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 107 (cast_expression)


State 268

   86 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 86 (postfix_expression)


State 269

   92 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 287


State 270

   84 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 84 (postfix_expression)


State 271

  137 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 73
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 288


State 272

   34 initializer: '{' initializer_list ',' • '}'
   36 initializer_list: initializer_list ',' • initializer

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '{'           shift, and go to state 147
    '}'           shift, and go to state 289
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    initializer                go to state 290
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 149


State 273

   33 initializer: '{' initializer_list '}' •

    $default  reduce using rule 33 (initializer)


State 274

   63 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 63 (labeled_statement)


State 275

   64 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 291
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 276

   65 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 65 (labeled_statement)


State 277

   68 selection_statement: IF '(' expression • ')' statement
   69                    | IF '(' expression • ')' statement ELSE statement
  152 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 292
    ','  shift, and go to state 203


State 278

   70 selection_statement: SWITCH '(' expression • ')' statement
  152 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 293
    ','  shift, and go to state 203


State 279

   71 iteration_statement: WHILE '(' expression • ')' statement
  152 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 294
    ','  shift, and go to state 203


State 280

   72 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 295


State 281

   73 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   74                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    expression_statement       go to state 296
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 282

   75 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 75 (jump_statement)


State 283

   79 jump_statement: RETURN expression ';' •

    $default  reduce using rule 79 (jump_statement)


State 284

   52 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 52 (compound_statement)


State 285

   48 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 48 (direct_abstract_declarator)


State 286

   44 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 287

   92 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 92 (argument_expression_list)


State 288

  137 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 137 (conditional_expression)


State 289

   34 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 34 (initializer)


State 290

   36 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 36 (initializer_list)


State 291

   64 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 64 (labeled_statement)


State 292

   68 selection_statement: IF '(' expression ')' • statement
   69                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 297
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 293

   70 selection_statement: SWITCH '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 298
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 294

   71 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 299
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 295

   72 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 300


State 296

   73 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   74                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER    shift, and go to state 57
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '('           shift, and go to state 65
    ')'           shift, and go to state 301
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 302


State 297

   68 selection_statement: IF '(' expression ')' statement •
   69                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 303

    $default  reduce using rule 68 (selection_statement)


State 298

   70 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 70 (selection_statement)


State 299

   71 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 71 (iteration_statement)


State 300

   72 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  152 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 304
    ','  shift, and go to state 203


State 301

   73 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 305
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 302

   74 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  152 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 306
    ','  shift, and go to state 203


State 303

   69 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 307
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 304

   72 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 308


State 305

   73 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 73 (iteration_statement)


State 306

   74 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER    shift, and go to state 150
    INT_LITERAL   shift, and go to state 58
    SIZEOF        shift, and go to state 59
    INCREMENT_OP  shift, and go to state 60
    DECREMENT_OP  shift, and go to state 61
    CASE          shift, and go to state 151
    DEFAULT       shift, and go to state 152
    IF            shift, and go to state 153
    SWITCH        shift, and go to state 154
    WHILE         shift, and go to state 155
    DO            shift, and go to state 156
    FOR           shift, and go to state 157
    GOTO          shift, and go to state 158
    CONTINUE      shift, and go to state 159
    BREAK         shift, and go to state 160
    RETURN        shift, and go to state 161
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ';'           shift, and go to state 162
    '('           shift, and go to state 65
    '{'           shift, and go to state 89
    '&'           shift, and go to state 67
    '~'           shift, and go to state 68
    '!'           shift, and go to state 69

    compound_statement         go to state 166
    statement                  go to state 309
    labeled_statement          go to state 170
    expression_statement       go to state 171
    selection_statement        go to state 172
    iteration_statement        go to state 173
    jump_statement             go to state 174
    primary_expression         go to state 71
    postfix_expression         go to state 72
    unary_expression           go to state 112
    unary_operator             go to state 74
    cast_expression            go to state 75
    multiplicative_expression  go to state 76
    additive_expression        go to state 77
    shift_expression           go to state 78
    relational_expression      go to state 79
    equality_expression        go to state 80
    and_expression             go to state 81
    exclusive_or_expression    go to state 82
    inclusive_or_expression    go to state 83
    logical_and_expression     go to state 84
    logical_or_expression      go to state 85
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 175


State 307

   69 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 69 (selection_statement)


State 308

   72 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 72 (iteration_statement)


State 309

   74 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 74 (iteration_statement)
