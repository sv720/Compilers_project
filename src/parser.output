Nonterminals useless in grammar

    init_declarator_list
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    specifier_qualifier_list
    struct_declarator_list
    struct_declarator
    type_name


Terminals unused in grammar

    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    uminu


Rules useless in grammar

  181 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  182                          | struct_or_union '{' struct_declaration_list '}'
  183                          | struct_or_union IDENTIFIER

  184 struct_or_union: STRUCT
  185                | UNION

  186 struct_declaration_list: struct_declaration
  187                        | struct_declaration_list struct_declaration

  188 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  189 specifier_qualifier_list: type_specifier specifier_qualifier_list
  190                         | type_specifier
  191                         | type_qualifier specifier_qualifier_list
  192                         | type_qualifier

  193 struct_declarator_list: struct_declarator
  194                       | struct_declarator_list ',' struct_declarator

  195 struct_declarator: declarator
  196                  | ':' constant_expression
  197                  | declarator ':' constant_expression

  198 type_name: specifier_qualifier_list
  199          | specifier_qualifier_list abstract_declarator
  200          | type_specifier


State 20 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 65 conflicts: 10 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement
    7                    | declaration_specifiers declarator ';'
    8                    | enum_specifier ';'
    9                    | declarator

   10 declarator: pointer direct_declarator
   11           | direct_declarator

   12 direct_declarator: IDENTIFIER
   13                  | '(' declarator ')'
   14                  | direct_declarator '[' constant_expression ']'
   15                  | direct_declarator '[' ']'
   16                  | direct_declarator '(' parameter_list ')'
   17                  | direct_declarator '(' identifier_list ')'
   18                  | direct_declarator '(' ')'

   19 parameter_list: parameter_declaration
   20               | parameter_list ',' parameter_declaration

   21 parameter_declaration: declaration_specifiers declarator
   22                      | declaration_specifiers abstract_declarator
   23                      | declaration_specifiers

   24 constant_expression: conditional_expression

   25 declaration: declaration_specifiers ';'
   26            | declaration_specifiers init_declarator ';'

   27 declaration_specifiers: type_specifier
   28                       | type_specifier declaration_specifiers
   29                       | TYPEDEF
   30                       | TYPEDEF declaration_specifiers

   31 init_declarator: declarator
   32                | declarator '=' initializer

   33 initializer: assignment_expression
   34            | '{' initializer_list '}'
   35            | '{' initializer_list ',' '}'

   36 initializer_list: initializer
   37                 | initializer_list ',' initializer

   38 abstract_declarator: pointer
   39                    | direct_abstract_declarator
   40                    | pointer direct_abstract_declarator

   41 direct_abstract_declarator: '(' abstract_declarator ')'
   42                           | '[' ']'
   43                           | '[' constant_expression ']'
   44                           | direct_abstract_declarator '[' ']'
   45                           | direct_abstract_declarator '[' constant_expression ']'
   46                           | '(' ')'
   47                           | '(' parameter_list ')'
   48                           | direct_abstract_declarator '(' ')'
   49                           | direct_abstract_declarator '(' parameter_list ')'

   50 compound_statement: '{' '}'
   51                   | '{' declaration_list '}'
   52                   | '{' statement_list '}'
   53                   | '{' declaration_list statement_list '}'

   54 declaration_list: declaration
   55                 | declaration_list declaration

   56 statement_list: statement
   57               | statement_list statement

   58 statement: labeled_statement
   59          | expression_statement
   60          | selection_statement
   61          | iteration_statement
   62          | jump_statement
   63          | compound_statement

   64 labeled_statement: IDENTIFIER ':' statement
   65                  | CASE constant_expression ':' statement
   66                  | DEFAULT ':' statement

   67 expression_statement: ';'
   68                     | expression ';'

   69 selection_statement: IF '(' expression ')' statement
   70                    | IF '(' expression ')' statement ELSE statement
   71                    | SWITCH '(' expression ')' compound_statement

   72 iteration_statement: WHILE '(' expression ')' statement
   73                    | DO statement WHILE '(' expression ')' ';'
   74                    | FOR '(' expression_statement expression_statement ')' statement
   75                    | FOR '(' expression_statement expression_statement expression ')' statement

   76 jump_statement: GOTO IDENTIFIER ';'
   77               | CONTINUE ';'
   78               | BREAK ';'
   79               | RETURN ';'
   80               | RETURN expression ';'

   81 primary_expression: IDENTIFIER
   82                   | INT_LITERAL
   83                   | CHAR_LITERAL
   84                   | '(' expression ')'

   85 postfix_expression: primary_expression
   86                   | postfix_expression '[' expression ']'
   87                   | postfix_expression '(' ')'
   88                   | postfix_expression '(' argument_expression_list ')'
   89                   | postfix_expression '.' IDENTIFIER
   90                   | postfix_expression POINTER_OP IDENTIFIER
   91                   | postfix_expression INCREMENT_OP
   92                   | postfix_expression DECREMENT_OP

   93 argument_expression_list: assignment_expression
   94                         | argument_expression_list ',' assignment_expression

   95 unary_expression: postfix_expression
   96                 | INCREMENT_OP unary_expression
   97                 | DECREMENT_OP unary_expression
   98                 | unary_operator cast_expression
   99                 | '-' unary_expression
  100                 | SIZEOF unary_expression
  101                 | SIZEOF '(' declaration_specifiers ')'

  102 unary_operator: '&'
  103               | '*'
  104               | '+'
  105               | '-'
  106               | '~'
  107               | '!'

  108 cast_expression: unary_expression
  109                | '(' type_specifier ')' cast_expression

  110 multiplicative_expression: cast_expression
  111                          | multiplicative_expression '*' cast_expression
  112                          | multiplicative_expression '/' cast_expression
  113                          | multiplicative_expression '%' cast_expression

  114 additive_expression: multiplicative_expression
  115                    | additive_expression '+' multiplicative_expression
  116                    | additive_expression '-' multiplicative_expression

  117 shift_expression: additive_expression
  118                 | shift_expression LEFTSHIFT_OP additive_expression
  119                 | shift_expression RIGHTSHIFT_OP additive_expression

  120 relational_expression: shift_expression
  121                      | relational_expression '<' shift_expression
  122                      | relational_expression '>' shift_expression
  123                      | relational_expression LE_OP shift_expression
  124                      | relational_expression GE_OP shift_expression

  125 equality_expression: relational_expression
  126                    | equality_expression EQ_OP relational_expression
  127                    | equality_expression NE_OP relational_expression

  128 and_expression: equality_expression
  129               | and_expression '&' equality_expression

  130 exclusive_or_expression: and_expression
  131                        | exclusive_or_expression '^' and_expression

  132 inclusive_or_expression: exclusive_or_expression
  133                        | inclusive_or_expression '|' exclusive_or_expression

  134 logical_and_expression: inclusive_or_expression
  135                       | logical_and_expression AND_OP inclusive_or_expression

  136 logical_or_expression: logical_and_expression
  137                      | logical_or_expression OR_OP logical_and_expression

  138 conditional_expression: logical_or_expression
  139                       | logical_or_expression '?' expression ':' conditional_expression

  140 assignment_expression: conditional_expression
  141                      | unary_expression assignment_operator assignment_expression

  142 assignment_operator: '='
  143                    | MUL_ASSIGN
  144                    | DIV_ASSIGN
  145                    | MOD_ASSIGN
  146                    | ADD_ASSIGN
  147                    | SUB_ASSIGN
  148                    | LEFTSHIFT_ASSIGN
  149                    | RIGHTSHIFT_ASSIGN
  150                    | AND_ASSIGN
  151                    | XOR_ASSIGN
  152                    | OR_ASSIGN

  153 expression: assignment_expression
  154           | expression ',' assignment_expression

  155 type_specifier: VOID
  156               | CHAR
  157               | SHORT
  158               | INT
  159               | LONG
  160               | FLOAT
  161               | DOUBLE
  162               | SIGNED
  163               | UNSIGNED

  164 enum_specifier: ENUM '{' enumerator_list '}'
  165               | ENUM IDENTIFIER '{' enumerator_list '}'
  166               | ENUM IDENTIFIER

  167 enumerator_list: enumerator
  168                | enumerator_list ',' enumerator

  169 enumerator: IDENTIFIER
  170           | IDENTIFIER '=' constant_expression

  171 type_qualifier: CONST
  172               | VOLATILE

  173 pointer: '*'
  174        | '*' type_qualifier_list
  175        | '*' pointer
  176        | '*' type_qualifier_list pointer

  177 type_qualifier_list: type_qualifier
  178                    | type_qualifier_list type_qualifier

  179 identifier_list: IDENTIFIER
  180                | identifier_list ',' IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 107
    '%' (37) 113
    '&' (38) 102 129
    '(' (40) 13 16 17 18 41 46 47 48 49 69 70 71 72 73 74 75 84 87 88 101 109
    ')' (41) 13 16 17 18 41 46 47 48 49 69 70 71 72 73 74 75 84 87 88 101 109
    '*' (42) 103 111 173 174 175 176
    '+' (43) 104 115
    ',' (44) 20 35 37 94 154 168 180
    '-' (45) 99 105 116
    '.' (46) 89
    '/' (47) 112
    ':' (58) 64 65 66 139
    ';' (59) 7 8 25 26 67 68 73 76 77 78 79 80
    '<' (60) 121
    '=' (61) 32 142 170
    '>' (62) 122
    '?' (63) 139
    '[' (91) 14 15 42 43 44 45 86
    ']' (93) 14 15 42 43 44 45 86
    '^' (94) 131
    '{' (123) 34 35 50 51 52 53 164 165
    '|' (124) 133
    '}' (125) 34 35 50 51 52 53 164 165
    '~' (126) 106
    error (256)
    IDENTIFIER <string> (258) 12 64 76 81 89 90 165 166 169 170 179 180
    INT_LITERAL <integer> (259) 82
    CHAR_LITERAL <string> (260) 83
    SIZEOF (261) 100 101
    POINTER_OP (262) 90
    INCREMENT_OP (263) 91 96
    DECREMENT_OP (264) 92 97
    LEFTSHIFT_OP (265) 118
    RIGHTSHIFT_OP (266) 119
    LE_OP (267) 123
    GE_OP (268) 124
    EQ_OP (269) 126
    NE_OP (270) 127
    AND_OP (271) 135
    OR_OP (272) 137
    MUL_ASSIGN (273) 143
    DIV_ASSIGN (274) 144
    MOD_ASSIGN (275) 145
    ADD_ASSIGN (276) 146
    SUB_ASSIGN (277) 147
    LEFTSHIFT_ASSIGN (278) 148
    RIGHTSHIFT_ASSIGN (279) 149
    AND_ASSIGN (280) 150
    XOR_ASSIGN (281) 151
    OR_ASSIGN (282) 152
    TYPE_NAME (283)
    TYPEDEF (284) 29 30
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 156
    SHORT (290) 157
    INT (291) 158
    LONG (292) 159
    SIGNED (293) 162
    UNSIGNED (294) 163
    FLOAT (295) 160
    DOUBLE (296) 161
    CONST (297) 171
    VOLATILE (298) 172
    VOID (299) 155
    STRUCT (300)
    UNION (301)
    ENUM (302) 164 165 166
    ELLIPSIS (303)
    CASE (304) 65
    DEFAULT (305) 66
    IF (306) 69 70
    ELSE (307) 70
    SWITCH (308) 71
    WHILE (309) 72 73
    DO (310) 73
    FOR (311) 74 75
    GOTO (312) 76
    CONTINUE (313) 77
    BREAK (314) 78
    RETURN (315) 79 80
    uminu (316)
    NOELSE (317)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    ROOT (88)
        on left: 1
        on right: 0
    translation_unit <expressionList> (89)
        on left: 2 3
        on right: 1 3
    external_declaration <expr> (90)
        on left: 4 5
        on right: 2 3
    function_definition <expr> (91)
        on left: 6 7 8 9
        on right: 4
    declarator <expr> (92)
        on left: 10 11
        on right: 6 7 9 13 21 31 32
    direct_declarator <expr> (93)
        on left: 12 13 14 15 16 17 18
        on right: 10 11 14 15 16 17 18
    parameter_list <expressionList> (94)
        on left: 19 20
        on right: 16 20 47 49
    parameter_declaration <expr> (95)
        on left: 21 22 23
        on right: 19 20
    constant_expression <expr> (96)
        on left: 24
        on right: 14 43 45 65 170
    declaration <expr> (97)
        on left: 25 26
        on right: 5 54 55
    declaration_specifiers <string> (98)
        on left: 27 28 29 30
        on right: 6 7 21 22 23 25 26 28 30 101
    init_declarator <expr> (99)
        on left: 31 32
        on right: 26
    initializer <expr> (100)
        on left: 33 34 35
        on right: 32 36 37
    initializer_list <expressionList> (101)
        on left: 36 37
        on right: 34 35 37
    abstract_declarator <expr> (102)
        on left: 38 39 40
        on right: 22 41
    direct_abstract_declarator <expr> (103)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 39 40 44 45 48 49
    compound_statement <expressionList> (104)
        on left: 50 51 52 53
        on right: 6 63 71
    declaration_list <expressionList> (105)
        on left: 54 55
        on right: 51 53 55
    statement_list <expressionList> (106)
        on left: 56 57
        on right: 52 53 57
    statement <expr> (107)
        on left: 58 59 60 61 62 63
        on right: 56 57 64 65 66 69 70 72 73 74 75
    labeled_statement <expr> (108)
        on left: 64 65 66
        on right: 58
    expression_statement <expr> (109)
        on left: 67 68
        on right: 59 74 75
    selection_statement <expr> (110)
        on left: 69 70 71
        on right: 60
    iteration_statement <expr> (111)
        on left: 72 73 74 75
        on right: 61
    jump_statement <expr> (112)
        on left: 76 77 78 79 80
        on right: 62
    primary_expression <expr> (113)
        on left: 81 82 83 84
        on right: 85
    postfix_expression <expr> (114)
        on left: 85 86 87 88 89 90 91 92
        on right: 86 87 88 89 90 91 92 95
    argument_expression_list <expressionList> (115)
        on left: 93 94
        on right: 88 94
    unary_expression <expr> (116)
        on left: 95 96 97 98 99 100 101
        on right: 96 97 99 100 108 141
    unary_operator (117)
        on left: 102 103 104 105 106 107
        on right: 98
    cast_expression <expr> (118)
        on left: 108 109
        on right: 98 109 110 111 112 113
    multiplicative_expression <expr> (119)
        on left: 110 111 112 113
        on right: 111 112 113 114 115 116
    additive_expression <expr> (120)
        on left: 114 115 116
        on right: 115 116 117 118 119
    shift_expression <expr> (121)
        on left: 117 118 119
        on right: 118 119 120 121 122 123 124
    relational_expression <expr> (122)
        on left: 120 121 122 123 124
        on right: 121 122 123 124 125 126 127
    equality_expression <expr> (123)
        on left: 125 126 127
        on right: 126 127 128 129
    and_expression <expr> (124)
        on left: 128 129
        on right: 129 130 131
    exclusive_or_expression <expr> (125)
        on left: 130 131
        on right: 131 132 133
    inclusive_or_expression <expr> (126)
        on left: 132 133
        on right: 133 134 135
    logical_and_expression <expr> (127)
        on left: 134 135
        on right: 135 136 137
    logical_or_expression <expr> (128)
        on left: 136 137
        on right: 137 138 139
    conditional_expression <expr> (129)
        on left: 138 139
        on right: 24 139 140
    assignment_expression <expr> (130)
        on left: 140 141
        on right: 33 93 94 141 153 154
    assignment_operator <string> (131)
        on left: 142 143 144 145 146 147 148 149 150 151 152
        on right: 141
    expression <expr> (132)
        on left: 153 154
        on right: 68 69 70 71 72 73 75 80 84 86 139 154
    type_specifier <string> (133)
        on left: 155 156 157 158 159 160 161 162 163
        on right: 27 28 109
    enum_specifier <expr> (134)
        on left: 164 165 166
        on right: 8
    enumerator_list <expressionList> (135)
        on left: 167 168
        on right: 164 165 168
    enumerator <expr> (136)
        on left: 169 170
        on right: 167 168
    type_qualifier (137)
        on left: 171 172
        on right: 177 178
    pointer <expr> (138)
        on left: 173 174 175 176
        on right: 10 38 40 175 176
    type_qualifier_list (139)
        on left: 177 178
        on right: 174 176 178
    identifier_list <expressionList> (140)
        on left: 179 180
        on right: 17 180


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    ROOT                    go to state 15
    translation_unit        go to state 16
    external_declaration    go to state 17
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 1

   12 direct_declarator: IDENTIFIER •

    $default  reduce using rule 12 (direct_declarator)


State 2

   29 declaration_specifiers: TYPEDEF •
   30                       | TYPEDEF • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 29 (declaration_specifiers)

    declaration_specifiers  go to state 26
    type_specifier          go to state 23


State 3

  156 type_specifier: CHAR •

    $default  reduce using rule 156 (type_specifier)


State 4

  157 type_specifier: SHORT •

    $default  reduce using rule 157 (type_specifier)


State 5

  158 type_specifier: INT •

    $default  reduce using rule 158 (type_specifier)


State 6

  159 type_specifier: LONG •

    $default  reduce using rule 159 (type_specifier)


State 7

  162 type_specifier: SIGNED •

    $default  reduce using rule 162 (type_specifier)


State 8

  163 type_specifier: UNSIGNED •

    $default  reduce using rule 163 (type_specifier)


State 9

  160 type_specifier: FLOAT •

    $default  reduce using rule 160 (type_specifier)


State 10

  161 type_specifier: DOUBLE •

    $default  reduce using rule 161 (type_specifier)


State 11

  155 type_specifier: VOID •

    $default  reduce using rule 155 (type_specifier)


State 12

  164 enum_specifier: ENUM • '{' enumerator_list '}'
  165               | ENUM • IDENTIFIER '{' enumerator_list '}'
  166               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 27
    '{'         shift, and go to state 28


State 13

  173 pointer: '*' •
  174        | '*' • type_qualifier_list
  175        | '*' • pointer
  176        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 173 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 14

   13 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 34
    direct_declarator  go to state 20
    pointer            go to state 25


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 35


State 16

    1 ROOT: translation_unit •
    3 translation_unit: translation_unit • external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 1 (ROOT)

    external_declaration    go to state 36
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 17

    2 translation_unit: external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 18

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 19

    9 function_definition: declarator •

    $default  reduce using rule 9 (function_definition)


State 20

   11 declarator: direct_declarator •
   14 direct_declarator: direct_declarator • '[' constant_expression ']'
   15                  | direct_declarator • '[' ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 11 (declarator)]
    $default  reduce using rule 11 (declarator)


State 21

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 22

    6 function_definition: declaration_specifiers • declarator compound_statement
    7                    | declaration_specifiers • declarator ';'
   25 declaration: declaration_specifiers • ';'
   26            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 40
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 23

   27 declaration_specifiers: type_specifier •
   28                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 27 (declaration_specifiers)

    declaration_specifiers  go to state 42
    type_specifier          go to state 23


State 24

    8 function_definition: enum_specifier • ';'

    ';'  shift, and go to state 43


State 25

   10 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 14

    direct_declarator  go to state 44


State 26

   30 declaration_specifiers: TYPEDEF declaration_specifiers •

    $default  reduce using rule 30 (declaration_specifiers)


State 27

  165 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  166               | ENUM IDENTIFIER •

    '{'  shift, and go to state 45

    $default  reduce using rule 166 (enum_specifier)


State 28

  164 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 46

    enumerator_list  go to state 47
    enumerator       go to state 48


State 29

  171 type_qualifier: CONST •

    $default  reduce using rule 171 (type_qualifier)


State 30

  172 type_qualifier: VOLATILE •

    $default  reduce using rule 172 (type_qualifier)


State 31

  177 type_qualifier_list: type_qualifier •

    $default  reduce using rule 177 (type_qualifier_list)


State 32

  175 pointer: '*' pointer •

    $default  reduce using rule 175 (pointer)


State 33

  174 pointer: '*' type_qualifier_list •
  176        | '*' type_qualifier_list • pointer
  178 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 174 (pointer)

    type_qualifier  go to state 49
    pointer         go to state 50


State 34

   13 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 51


State 35

    0 $accept: ROOT $end •

    $default  accept


State 36

    3 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 3 (translation_unit)


State 37

   16 direct_declarator: direct_declarator '(' • parameter_list ')'
   17                  | direct_declarator '(' • identifier_list ')'
   18                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 52
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ')'         shift, and go to state 53

    parameter_list          go to state 54
    parameter_declaration   go to state 55
    declaration_specifiers  go to state 56
    type_specifier          go to state 23
    identifier_list         go to state 57


State 38

   14 direct_declarator: direct_declarator '[' • constant_expression ']'
   15                  | direct_declarator '[' • ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    ']'           shift, and go to state 68
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    constant_expression        go to state 72
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 88


State 39

   25 declaration: declaration_specifiers ';' •

    $default  reduce using rule 25 (declaration)


State 40

    6 function_definition: declaration_specifiers declarator • compound_statement
    7                    | declaration_specifiers declarator • ';'
   31 init_declarator: declarator •
   32                | declarator • '=' initializer

    ';'  shift, and go to state 89
    '='  shift, and go to state 90
    '{'  shift, and go to state 91

    ';'  [reduce using rule 31 (init_declarator)]

    compound_statement  go to state 92


State 41

   26 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 93


State 42

   28 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 28 (declaration_specifiers)


State 43

    8 function_definition: enum_specifier ';' •

    $default  reduce using rule 8 (function_definition)


State 44

   10 declarator: pointer direct_declarator •
   14 direct_declarator: direct_declarator • '[' constant_expression ']'
   15                  | direct_declarator • '[' ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 10 (declarator)]
    $default  reduce using rule 10 (declarator)


State 45

  165 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 46

    enumerator_list  go to state 94
    enumerator       go to state 48


State 46

  169 enumerator: IDENTIFIER •
  170           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 95

    $default  reduce using rule 169 (enumerator)


State 47

  164 enum_specifier: ENUM '{' enumerator_list • '}'
  168 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 96
    '}'  shift, and go to state 97


State 48

  167 enumerator_list: enumerator •

    $default  reduce using rule 167 (enumerator_list)


State 49

  178 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 178 (type_qualifier_list)


State 50

  176 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 176 (pointer)


State 51

   13 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 13 (direct_declarator)


State 52

  179 identifier_list: IDENTIFIER •

    $default  reduce using rule 179 (identifier_list)


State 53

   18 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 18 (direct_declarator)


State 54

   16 direct_declarator: direct_declarator '(' parameter_list • ')'
   20 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 98
    ','  shift, and go to state 99


State 55

   19 parameter_list: parameter_declaration •

    $default  reduce using rule 19 (parameter_list)


State 56

   21 parameter_declaration: declaration_specifiers • declarator
   22                      | declaration_specifiers • abstract_declarator
   23                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 100
    '['         shift, and go to state 101

    $default  reduce using rule 23 (parameter_declaration)

    declarator                  go to state 102
    direct_declarator           go to state 20
    abstract_declarator         go to state 103
    direct_abstract_declarator  go to state 104
    pointer                     go to state 105


State 57

   17 direct_declarator: direct_declarator '(' identifier_list • ')'
  180 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 58

   81 primary_expression: IDENTIFIER •

    $default  reduce using rule 81 (primary_expression)


State 59

   82 primary_expression: INT_LITERAL •

    $default  reduce using rule 82 (primary_expression)


State 60

   83 primary_expression: CHAR_LITERAL •

    $default  reduce using rule 83 (primary_expression)


State 61

  100 unary_expression: SIZEOF • unary_expression
  101                 | SIZEOF • '(' declaration_specifiers ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 108
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 109
    unary_operator      go to state 76


State 62

   96 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 110
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 111
    unary_operator      go to state 76


State 63

   97 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 110
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 112
    unary_operator      go to state 76


State 64

  104 unary_operator: '+' •

    $default  reduce using rule 104 (unary_operator)


State 65

   99 unary_expression: '-' • unary_expression
  105 unary_operator: '-' •

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '*'           shift, and go to state 66
    '('           shift, and go to state 110
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    IDENTIFIER    [reduce using rule 105 (unary_operator)]
    INT_LITERAL   [reduce using rule 105 (unary_operator)]
    CHAR_LITERAL  [reduce using rule 105 (unary_operator)]
    SIZEOF        [reduce using rule 105 (unary_operator)]
    INCREMENT_OP  [reduce using rule 105 (unary_operator)]
    DECREMENT_OP  [reduce using rule 105 (unary_operator)]
    '('           [reduce using rule 105 (unary_operator)]
    '&'           [reduce using rule 105 (unary_operator)]
    '~'           [reduce using rule 105 (unary_operator)]
    '!'           [reduce using rule 105 (unary_operator)]
    $default      reduce using rule 105 (unary_operator)

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 113
    unary_operator      go to state 76


State 66

  103 unary_operator: '*' •

    $default  reduce using rule 103 (unary_operator)


State 67

   84 primary_expression: '(' • expression ')'
  109 cast_expression: '(' • type_specifier ')' cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118


State 68

   15 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 15 (direct_declarator)


State 69

  102 unary_operator: '&' •

    $default  reduce using rule 102 (unary_operator)


State 70

  106 unary_operator: '~' •

    $default  reduce using rule 106 (unary_operator)


State 71

  107 unary_operator: '!' •

    $default  reduce using rule 107 (unary_operator)


State 72

   14 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 119


State 73

   85 postfix_expression: primary_expression •

    $default  reduce using rule 85 (postfix_expression)


State 74

   86 postfix_expression: postfix_expression • '[' expression ']'
   87                   | postfix_expression • '(' ')'
   88                   | postfix_expression • '(' argument_expression_list ')'
   89                   | postfix_expression • '.' IDENTIFIER
   90                   | postfix_expression • POINTER_OP IDENTIFIER
   91                   | postfix_expression • INCREMENT_OP
   92                   | postfix_expression • DECREMENT_OP
   95 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 120
    INCREMENT_OP  shift, and go to state 121
    DECREMENT_OP  shift, and go to state 122
    '('           shift, and go to state 123
    '['           shift, and go to state 124
    '.'           shift, and go to state 125

    $default  reduce using rule 95 (unary_expression)


State 75

  108 cast_expression: unary_expression •

    $default  reduce using rule 108 (cast_expression)


State 76

   98 unary_expression: unary_operator • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 75
    unary_operator      go to state 76
    cast_expression     go to state 126


State 77

  110 multiplicative_expression: cast_expression •

    $default  reduce using rule 110 (multiplicative_expression)


State 78

  111 multiplicative_expression: multiplicative_expression • '*' cast_expression
  112                          | multiplicative_expression • '/' cast_expression
  113                          | multiplicative_expression • '%' cast_expression
  114 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 114 (additive_expression)


State 79

  115 additive_expression: additive_expression • '+' multiplicative_expression
  116                    | additive_expression • '-' multiplicative_expression
  117 shift_expression: additive_expression •

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131

    $default  reduce using rule 117 (shift_expression)


State 80

  118 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  119                 | shift_expression • RIGHTSHIFT_OP additive_expression
  120 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 120 (relational_expression)


State 81

  121 relational_expression: relational_expression • '<' shift_expression
  122                      | relational_expression • '>' shift_expression
  123                      | relational_expression • LE_OP shift_expression
  124                      | relational_expression • GE_OP shift_expression
  125 equality_expression: relational_expression •

    LE_OP  shift, and go to state 134
    GE_OP  shift, and go to state 135
    '<'    shift, and go to state 136
    '>'    shift, and go to state 137

    $default  reduce using rule 125 (equality_expression)


State 82

  126 equality_expression: equality_expression • EQ_OP relational_expression
  127                    | equality_expression • NE_OP relational_expression
  128 and_expression: equality_expression •

    EQ_OP  shift, and go to state 138
    NE_OP  shift, and go to state 139

    $default  reduce using rule 128 (and_expression)


State 83

  129 and_expression: and_expression • '&' equality_expression
  130 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 140

    $default  reduce using rule 130 (exclusive_or_expression)


State 84

  131 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  132 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 141

    $default  reduce using rule 132 (inclusive_or_expression)


State 85

  133 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  134 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 142

    $default  reduce using rule 134 (logical_and_expression)


State 86

  135 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  136 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 143

    $default  reduce using rule 136 (logical_or_expression)


State 87

  137 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  138 conditional_expression: logical_or_expression •
  139                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 144
    '?'    shift, and go to state 145

    $default  reduce using rule 138 (conditional_expression)


State 88

   24 constant_expression: conditional_expression •

    $default  reduce using rule 24 (constant_expression)


State 89

    7 function_definition: declaration_specifiers declarator ';' •

    $default  reduce using rule 7 (function_definition)


State 90

   32 init_declarator: declarator '=' • initializer

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '{'           shift, and go to state 146
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    initializer                go to state 147
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 148


State 91

   50 compound_statement: '{' • '}'
   51                   | '{' • declaration_list '}'
   52                   | '{' • statement_list '}'
   53                   | '{' • declaration_list statement_list '}'

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '}'           shift, and go to state 162
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    declaration                go to state 163
    declaration_specifiers     go to state 164
    compound_statement         go to state 165
    declaration_list           go to state 166
    statement_list             go to state 167
    statement                  go to state 168
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174
    type_specifier             go to state 23


State 92

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 93

   26 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 26 (declaration)


State 94

  165 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  168 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 96
    '}'  shift, and go to state 175


State 95

  170 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    constant_expression        go to state 176
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 88


State 96

  168 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 46

    enumerator  go to state 177


State 97

  164 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 164 (enum_specifier)


State 98

   16 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 16 (direct_declarator)


State 99

   20 parameter_list: parameter_list ',' • parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    parameter_declaration   go to state 178
    declaration_specifiers  go to state 56
    type_specifier          go to state 23


State 100

   13 direct_declarator: '(' • declarator ')'
   41 direct_abstract_declarator: '(' • abstract_declarator ')'
   46                           | '(' • ')'
   47                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    '*'         shift, and go to state 13
    '('         shift, and go to state 100
    ')'         shift, and go to state 179
    '['         shift, and go to state 101

    declarator                  go to state 34
    direct_declarator           go to state 20
    parameter_list              go to state 180
    parameter_declaration       go to state 55
    declaration_specifiers      go to state 56
    abstract_declarator         go to state 181
    direct_abstract_declarator  go to state 104
    type_specifier              go to state 23
    pointer                     go to state 105


State 101

   42 direct_abstract_declarator: '[' • ']'
   43                           | '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    ']'           shift, and go to state 182
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    constant_expression        go to state 183
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 88


State 102

   21 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 21 (parameter_declaration)


State 103

   22 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 22 (parameter_declaration)


State 104

   39 abstract_declarator: direct_abstract_declarator •
   44 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   45                           | direct_abstract_declarator • '[' constant_expression ']'
   48                           | direct_abstract_declarator • '(' ')'
   49                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 184
    '['  shift, and go to state 185

    $default  reduce using rule 39 (abstract_declarator)


State 105

   10 declarator: pointer • direct_declarator
   38 abstract_declarator: pointer •
   40                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 100
    '['         shift, and go to state 101

    $default  reduce using rule 38 (abstract_declarator)

    direct_declarator           go to state 44
    direct_abstract_declarator  go to state 186


State 106

   17 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 17 (direct_declarator)


State 107

  180 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 187


State 108

   84 primary_expression: '(' • expression ')'
  101 unary_expression: SIZEOF '(' • declaration_specifiers ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    declaration_specifiers     go to state 188
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 23


State 109

  100 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 100 (unary_expression)


State 110

   84 primary_expression: '(' • expression ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 117


State 111

   96 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 96 (unary_expression)


State 112

   97 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 97 (unary_expression)


State 113

   99 unary_expression: '-' unary_expression •

    $default  reduce using rule 99 (unary_expression)


State 114

  108 cast_expression: unary_expression •
  141 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 189
    DIV_ASSIGN         shift, and go to state 190
    MOD_ASSIGN         shift, and go to state 191
    ADD_ASSIGN         shift, and go to state 192
    SUB_ASSIGN         shift, and go to state 193
    LEFTSHIFT_ASSIGN   shift, and go to state 194
    RIGHTSHIFT_ASSIGN  shift, and go to state 195
    AND_ASSIGN         shift, and go to state 196
    XOR_ASSIGN         shift, and go to state 197
    OR_ASSIGN          shift, and go to state 198
    '='                shift, and go to state 199

    $default  reduce using rule 108 (cast_expression)

    assignment_operator  go to state 200


State 115

  140 assignment_expression: conditional_expression •

    $default  reduce using rule 140 (assignment_expression)


State 116

  153 expression: assignment_expression •

    $default  reduce using rule 153 (expression)


State 117

   84 primary_expression: '(' expression • ')'
  154 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 201
    ','  shift, and go to state 202


State 118

  109 cast_expression: '(' type_specifier • ')' cast_expression

    ')'  shift, and go to state 203


State 119

   14 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 14 (direct_declarator)


State 120

   90 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 204


State 121

   91 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 91 (postfix_expression)


State 122

   92 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 92 (postfix_expression)


State 123

   87 postfix_expression: postfix_expression '(' • ')'
   88                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    ')'           shift, and go to state 205
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    argument_expression_list   go to state 206
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 207


State 124

   86 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 208


State 125

   89 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 209


State 126

   98 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 98 (unary_expression)


State 127

  111 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 75
    unary_operator      go to state 76
    cast_expression     go to state 210


State 128

  112 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 75
    unary_operator      go to state 76
    cast_expression     go to state 211


State 129

  113 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 75
    unary_operator      go to state 76
    cast_expression     go to state 212


State 130

  115 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 213


State 131

  116 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 214


State 132

  118 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 215


State 133

  119 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 216


State 134

  123 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 217


State 135

  124 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 218


State 136

  121 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 219


State 137

  122 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 220


State 138

  126 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 221


State 139

  127 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 222


State 140

  129 and_expression: and_expression '&' • equality_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 223


State 141

  131 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 224


State 142

  133 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 225


State 143

  135 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 226


State 144

  137 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 227


State 145

  139 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 228


State 146

   34 initializer: '{' • initializer_list '}'
   35            | '{' • initializer_list ',' '}'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '{'           shift, and go to state 146
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    initializer                go to state 229
    initializer_list           go to state 230
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 148


State 147

   32 init_declarator: declarator '=' initializer •

    $default  reduce using rule 32 (init_declarator)


State 148

   33 initializer: assignment_expression •

    $default  reduce using rule 33 (initializer)


State 149

   64 labeled_statement: IDENTIFIER • ':' statement
   81 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 231

    $default  reduce using rule 81 (primary_expression)


State 150

   65 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    constant_expression        go to state 232
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 88


State 151

   66 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 233


State 152

   69 selection_statement: IF • '(' expression ')' statement
   70                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 234


State 153

   71 selection_statement: SWITCH • '(' expression ')' compound_statement

    '('  shift, and go to state 235


State 154

   72 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 236


State 155

   73 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 237
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 156

   74 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   75                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 238


State 157

   76 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 239


State 158

   77 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 240


State 159

   78 jump_statement: BREAK • ';'

    ';'  shift, and go to state 241


State 160

   79 jump_statement: RETURN • ';'
   80               | RETURN • expression ';'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 242
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 243


State 161

   67 expression_statement: ';' •

    $default  reduce using rule 67 (expression_statement)


State 162

   50 compound_statement: '{' '}' •

    $default  reduce using rule 50 (compound_statement)


State 163

   54 declaration_list: declaration •

    $default  reduce using rule 54 (declaration_list)


State 164

   25 declaration: declaration_specifiers • ';'
   26            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 244
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 165

   63 statement: compound_statement •

    $default  reduce using rule 63 (statement)


State 166

   51 compound_statement: '{' declaration_list • '}'
   53                   | '{' declaration_list • statement_list '}'
   55 declaration_list: declaration_list • declaration

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '}'           shift, and go to state 245
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    declaration                go to state 246
    declaration_specifiers     go to state 164
    compound_statement         go to state 165
    statement_list             go to state 247
    statement                  go to state 168
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174
    type_specifier             go to state 23


State 167

   52 compound_statement: '{' statement_list • '}'
   57 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '}'           shift, and go to state 248
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 249
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 168

   56 statement_list: statement •

    $default  reduce using rule 56 (statement_list)


State 169

   58 statement: labeled_statement •

    $default  reduce using rule 58 (statement)


State 170

   59 statement: expression_statement •

    $default  reduce using rule 59 (statement)


State 171

   60 statement: selection_statement •

    $default  reduce using rule 60 (statement)


State 172

   61 statement: iteration_statement •

    $default  reduce using rule 61 (statement)


State 173

   62 statement: jump_statement •

    $default  reduce using rule 62 (statement)


State 174

   68 expression_statement: expression • ';'
  154 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 250
    ','  shift, and go to state 202


State 175

  165 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 165 (enum_specifier)


State 176

  170 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 170 (enumerator)


State 177

  168 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 168 (enumerator_list)


State 178

   20 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 20 (parameter_list)


State 179

   46 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 180

   20 parameter_list: parameter_list • ',' parameter_declaration
   47 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 251
    ','  shift, and go to state 99


State 181

   41 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 252


State 182

   42 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 183

   43 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 253


State 184

   48 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   49                           | direct_abstract_declarator '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ')'       shift, and go to state 254

    parameter_list          go to state 255
    parameter_declaration   go to state 55
    declaration_specifiers  go to state 56
    type_specifier          go to state 23


State 185

   44 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
   45                           | direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    ']'           shift, and go to state 256
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    constant_expression        go to state 257
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 88


State 186

   40 abstract_declarator: pointer direct_abstract_declarator •
   44 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   45                           | direct_abstract_declarator • '[' constant_expression ']'
   48                           | direct_abstract_declarator • '(' ')'
   49                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 184
    '['  shift, and go to state 185

    $default  reduce using rule 40 (abstract_declarator)


State 187

  180 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 180 (identifier_list)


State 188

  101 unary_expression: SIZEOF '(' declaration_specifiers • ')'

    ')'  shift, and go to state 258


State 189

  143 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 143 (assignment_operator)


State 190

  144 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 144 (assignment_operator)


State 191

  145 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 145 (assignment_operator)


State 192

  146 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 146 (assignment_operator)


State 193

  147 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 147 (assignment_operator)


State 194

  148 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 148 (assignment_operator)


State 195

  149 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 149 (assignment_operator)


State 196

  150 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 150 (assignment_operator)


State 197

  151 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 151 (assignment_operator)


State 198

  152 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 152 (assignment_operator)


State 199

  142 assignment_operator: '=' •

    $default  reduce using rule 142 (assignment_operator)


State 200

  141 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 259


State 201

   84 primary_expression: '(' expression ')' •

    $default  reduce using rule 84 (primary_expression)


State 202

  154 expression: expression ',' • assignment_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 260


State 203

  109 cast_expression: '(' type_specifier ')' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression  go to state 73
    postfix_expression  go to state 74
    unary_expression    go to state 75
    unary_operator      go to state 76
    cast_expression     go to state 261


State 204

   90 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 90 (postfix_expression)


State 205

   87 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 87 (postfix_expression)


State 206

   88 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   94 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 262
    ','  shift, and go to state 263


State 207

   93 argument_expression_list: assignment_expression •

    $default  reduce using rule 93 (argument_expression_list)


State 208

   86 postfix_expression: postfix_expression '[' expression • ']'
  154 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 264
    ','  shift, and go to state 202


State 209

   89 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 89 (postfix_expression)


State 210

  111 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 111 (multiplicative_expression)


State 211

  112 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 112 (multiplicative_expression)


State 212

  113 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 113 (multiplicative_expression)


State 213

  111 multiplicative_expression: multiplicative_expression • '*' cast_expression
  112                          | multiplicative_expression • '/' cast_expression
  113                          | multiplicative_expression • '%' cast_expression
  115 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 115 (additive_expression)


State 214

  111 multiplicative_expression: multiplicative_expression • '*' cast_expression
  112                          | multiplicative_expression • '/' cast_expression
  113                          | multiplicative_expression • '%' cast_expression
  116 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 116 (additive_expression)


State 215

  115 additive_expression: additive_expression • '+' multiplicative_expression
  116                    | additive_expression • '-' multiplicative_expression
  118 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131

    $default  reduce using rule 118 (shift_expression)


State 216

  115 additive_expression: additive_expression • '+' multiplicative_expression
  116                    | additive_expression • '-' multiplicative_expression
  119 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131

    $default  reduce using rule 119 (shift_expression)


State 217

  118 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  119                 | shift_expression • RIGHTSHIFT_OP additive_expression
  123 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 123 (relational_expression)


State 218

  118 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  119                 | shift_expression • RIGHTSHIFT_OP additive_expression
  124 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 124 (relational_expression)


State 219

  118 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  119                 | shift_expression • RIGHTSHIFT_OP additive_expression
  121 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 121 (relational_expression)


State 220

  118 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  119                 | shift_expression • RIGHTSHIFT_OP additive_expression
  122 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 132
    RIGHTSHIFT_OP  shift, and go to state 133

    $default  reduce using rule 122 (relational_expression)


State 221

  121 relational_expression: relational_expression • '<' shift_expression
  122                      | relational_expression • '>' shift_expression
  123                      | relational_expression • LE_OP shift_expression
  124                      | relational_expression • GE_OP shift_expression
  126 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 134
    GE_OP  shift, and go to state 135
    '<'    shift, and go to state 136
    '>'    shift, and go to state 137

    $default  reduce using rule 126 (equality_expression)


State 222

  121 relational_expression: relational_expression • '<' shift_expression
  122                      | relational_expression • '>' shift_expression
  123                      | relational_expression • LE_OP shift_expression
  124                      | relational_expression • GE_OP shift_expression
  127 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 134
    GE_OP  shift, and go to state 135
    '<'    shift, and go to state 136
    '>'    shift, and go to state 137

    $default  reduce using rule 127 (equality_expression)


State 223

  126 equality_expression: equality_expression • EQ_OP relational_expression
  127                    | equality_expression • NE_OP relational_expression
  129 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 138
    NE_OP  shift, and go to state 139

    $default  reduce using rule 129 (and_expression)


State 224

  129 and_expression: and_expression • '&' equality_expression
  131 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 140

    $default  reduce using rule 131 (exclusive_or_expression)


State 225

  131 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  133 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 141

    $default  reduce using rule 133 (inclusive_or_expression)


State 226

  133 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  135 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 142

    $default  reduce using rule 135 (logical_and_expression)


State 227

  135 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  137 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 143

    $default  reduce using rule 137 (logical_or_expression)


State 228

  139 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  154 expression: expression • ',' assignment_expression

    ','  shift, and go to state 202
    ':'  shift, and go to state 265


State 229

   36 initializer_list: initializer •

    $default  reduce using rule 36 (initializer_list)


State 230

   34 initializer: '{' initializer_list • '}'
   35            | '{' initializer_list • ',' '}'
   37 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 266
    '}'  shift, and go to state 267


State 231

   64 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 268
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 232

   65 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 269


State 233

   66 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 270
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 234

   69 selection_statement: IF '(' • expression ')' statement
   70                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 271


State 235

   71 selection_statement: SWITCH '(' • expression ')' compound_statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 272


State 236

   72 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 273


State 237

   73 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 274


State 238

   74 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   75                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    expression_statement       go to state 275
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 239

   76 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 276


State 240

   77 jump_statement: CONTINUE ';' •

    $default  reduce using rule 77 (jump_statement)


State 241

   78 jump_statement: BREAK ';' •

    $default  reduce using rule 78 (jump_statement)


State 242

   79 jump_statement: RETURN ';' •

    $default  reduce using rule 79 (jump_statement)


State 243

   80 jump_statement: RETURN expression • ';'
  154 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 277
    ','  shift, and go to state 202


State 244

   31 init_declarator: declarator •
   32                | declarator • '=' initializer

    '='  shift, and go to state 90

    $default  reduce using rule 31 (init_declarator)


State 245

   51 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 51 (compound_statement)


State 246

   55 declaration_list: declaration_list declaration •

    $default  reduce using rule 55 (declaration_list)


State 247

   53 compound_statement: '{' declaration_list statement_list • '}'
   57 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '}'           shift, and go to state 278
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 249
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 248

   52 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 52 (compound_statement)


State 249

   57 statement_list: statement_list statement •

    $default  reduce using rule 57 (statement_list)


State 250

   68 expression_statement: expression ';' •

    $default  reduce using rule 68 (expression_statement)


State 251

   47 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 47 (direct_abstract_declarator)


State 252

   41 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 41 (direct_abstract_declarator)


State 253

   43 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 254

   48 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 48 (direct_abstract_declarator)


State 255

   20 parameter_list: parameter_list • ',' parameter_declaration
   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 279
    ','  shift, and go to state 99


State 256

   44 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 257

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 280


State 258

  101 unary_expression: SIZEOF '(' declaration_specifiers ')' •

    $default  reduce using rule 101 (unary_expression)


State 259

  141 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 141 (assignment_expression)


State 260

  154 expression: expression ',' assignment_expression •

    $default  reduce using rule 154 (expression)


State 261

  109 cast_expression: '(' type_specifier ')' cast_expression •

    $default  reduce using rule 109 (cast_expression)


State 262

   88 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 88 (postfix_expression)


State 263

   94 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 281


State 264

   86 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 86 (postfix_expression)


State 265

  139 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 75
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 282


State 266

   35 initializer: '{' initializer_list ',' • '}'
   37 initializer_list: initializer_list ',' • initializer

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '{'           shift, and go to state 146
    '}'           shift, and go to state 283
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    initializer                go to state 284
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 148


State 267

   34 initializer: '{' initializer_list '}' •

    $default  reduce using rule 34 (initializer)


State 268

   64 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 64 (labeled_statement)


State 269

   65 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 285
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 270

   66 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 66 (labeled_statement)


State 271

   69 selection_statement: IF '(' expression • ')' statement
   70                    | IF '(' expression • ')' statement ELSE statement
  154 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 286
    ','  shift, and go to state 202


State 272

   71 selection_statement: SWITCH '(' expression • ')' compound_statement
  154 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 287
    ','  shift, and go to state 202


State 273

   72 iteration_statement: WHILE '(' expression • ')' statement
  154 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 288
    ','  shift, and go to state 202


State 274

   73 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 289


State 275

   74 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   75                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    expression_statement       go to state 290
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 276

   76 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 76 (jump_statement)


State 277

   80 jump_statement: RETURN expression ';' •

    $default  reduce using rule 80 (jump_statement)


State 278

   53 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 53 (compound_statement)


State 279

   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 49 (direct_abstract_declarator)


State 280

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 45 (direct_abstract_declarator)


State 281

   94 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 94 (argument_expression_list)


State 282

  139 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 139 (conditional_expression)


State 283

   35 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 35 (initializer)


State 284

   37 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 37 (initializer_list)


State 285

   65 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 65 (labeled_statement)


State 286

   69 selection_statement: IF '(' expression ')' • statement
   70                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 291
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 287

   71 selection_statement: SWITCH '(' expression ')' • compound_statement

    '{'  shift, and go to state 91

    compound_statement  go to state 292


State 288

   72 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 293
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 289

   73 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 294


State 290

   74 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   75                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    '('           shift, and go to state 67
    ')'           shift, and go to state 295
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 296


State 291

   69 selection_statement: IF '(' expression ')' statement •
   70                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 297

    $default  reduce using rule 69 (selection_statement)


State 292

   71 selection_statement: SWITCH '(' expression ')' compound_statement •

    $default  reduce using rule 71 (selection_statement)


State 293

   72 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 72 (iteration_statement)


State 294

   73 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  154 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 298
    ','  shift, and go to state 202


State 295

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 299
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 296

   75 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  154 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 300
    ','  shift, and go to state 202


State 297

   70 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 301
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 298

   73 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 302


State 299

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 74 (iteration_statement)


State 300

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER    shift, and go to state 149
    INT_LITERAL   shift, and go to state 59
    CHAR_LITERAL  shift, and go to state 60
    SIZEOF        shift, and go to state 61
    INCREMENT_OP  shift, and go to state 62
    DECREMENT_OP  shift, and go to state 63
    CASE          shift, and go to state 150
    DEFAULT       shift, and go to state 151
    IF            shift, and go to state 152
    SWITCH        shift, and go to state 153
    WHILE         shift, and go to state 154
    DO            shift, and go to state 155
    FOR           shift, and go to state 156
    GOTO          shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '*'           shift, and go to state 66
    ';'           shift, and go to state 161
    '('           shift, and go to state 67
    '{'           shift, and go to state 91
    '&'           shift, and go to state 69
    '~'           shift, and go to state 70
    '!'           shift, and go to state 71

    compound_statement         go to state 165
    statement                  go to state 303
    labeled_statement          go to state 169
    expression_statement       go to state 170
    selection_statement        go to state 171
    iteration_statement        go to state 172
    jump_statement             go to state 173
    primary_expression         go to state 73
    postfix_expression         go to state 74
    unary_expression           go to state 114
    unary_operator             go to state 76
    cast_expression            go to state 77
    multiplicative_expression  go to state 78
    additive_expression        go to state 79
    shift_expression           go to state 80
    relational_expression      go to state 81
    equality_expression        go to state 82
    and_expression             go to state 83
    exclusive_or_expression    go to state 84
    inclusive_or_expression    go to state 85
    logical_and_expression     go to state 86
    logical_or_expression      go to state 87
    conditional_expression     go to state 115
    assignment_expression      go to state 116
    expression                 go to state 174


State 301

   70 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 70 (selection_statement)


State 302

   73 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 73 (iteration_statement)


State 303

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 75 (iteration_statement)
