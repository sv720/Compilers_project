Nonterminals useless in grammar

    typedef_declaration
    init_declarator_list
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    specifier_qualifier_list
    struct_declarator_list
    struct_declarator
    type_name


Terminals unused in grammar

    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    uminu


Rules useless in grammar

  185 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  186                          | struct_or_union '{' struct_declaration_list '}'
  187                          | struct_or_union IDENTIFIER

  188 struct_or_union: STRUCT
  189                | UNION

  190 struct_declaration_list: struct_declaration
  191                        | struct_declaration_list struct_declaration

  192 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  193 specifier_qualifier_list: type_specifier specifier_qualifier_list
  194                         | type_specifier
  195                         | type_qualifier specifier_qualifier_list
  196                         | type_qualifier

  197 struct_declarator_list: struct_declarator
  198                       | struct_declarator_list ',' struct_declarator

  199 struct_declarator: declarator
  200                  | ':' constant_expression
  201                  | declarator ':' constant_expression

  202 type_name: specifier_qualifier_list
  203          | specifier_qualifier_list abstract_declarator
  204          | type_specifier


Rules useless in parser due to conflicts

  109 unary_operator: '~'
  110               | '!'


State 1 conflicts: 3 shift/reduce
State 3 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 23 conflicts: 9 shift/reduce
State 28 conflicts: 9 shift/reduce
State 44 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 75 conflicts: 11 shift/reduce
State 78 conflicts: 14 shift/reduce
State 79 conflicts: 14 shift/reduce
State 162 conflicts: 2 shift/reduce
State 194 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement
    7                    | declaration_specifiers declarator ';'
    8                    | enum_specifier ';'
    9                    | TYPEDEF declaration_specifiers IDENTIFIER ';'
   10                    | declarator

   11 declarator: pointer direct_declarator
   12           | direct_declarator

   13 direct_declarator: IDENTIFIER
   14                  | '(' declarator ')'
   15                  | direct_declarator '[' constant_expression ']'
   16                  | direct_declarator '(' parameter_list ')'
   17                  | direct_declarator '(' identifier_list ')'
   18                  | direct_declarator '(' ')'

   19 parameter_list: parameter_declaration
   20               | parameter_list ',' parameter_declaration

   21 parameter_declaration: declaration_specifiers declarator
   22                      | declaration_specifiers abstract_declarator
   23                      | IDENTIFIER declarator

   24 constant_expression: conditional_expression

   25 declaration: declaration_specifiers ';'
   26            | declaration_specifiers init_declarator ';'
   27            | IDENTIFIER declarator ';'

   28 declaration_specifiers: type_specifier
   29                       | type_specifier declaration_specifiers
   30                       | TYPEDEF
   31                       | TYPEDEF declaration_specifiers type_specifier

   32 init_declarator: declarator
   33                | declarator '=' initializer
   34                | direct_declarator '[' ']' '=' '{' initializer_list '}'
   35                | direct_declarator '[' ']' '=' '{' initializer_list ',' '}'

   36 initializer: assignment_expression

   37 initializer_list: initializer
   38                 | initializer_list ',' initializer

   39 abstract_declarator: pointer
   40                    | direct_abstract_declarator
   41                    | pointer direct_abstract_declarator

   42 direct_abstract_declarator: '(' abstract_declarator ')'
   43                           | '[' ']'
   44                           | '[' constant_expression ']'
   45                           | direct_abstract_declarator '[' constant_expression ']'
   46                           | '(' ')'
   47                           | '(' parameter_list ')'
   48                           | direct_abstract_declarator '(' ')'
   49                           | direct_abstract_declarator '(' parameter_list ')'

   50 compound_statement: '{' '}'
   51                   | '{' declaration_list '}'
   52                   | '{' statement_list '}'
   53                   | '{' declaration_list statement_list '}'

   54 declaration_list: declaration
   55                 | declaration_list declaration

   56 statement_list: statement
   57               | statement_list statement

   58 statement: labeled_statement
   59          | expression_statement
   60          | selection_statement
   61          | iteration_statement
   62          | jump_statement
   63          | compound_statement

   64 labeled_statement: IDENTIFIER ':' statement
   65                  | CASE constant_expression ':' statement
   66                  | DEFAULT ':' statement

   67 expression_statement: ';'
   68                     | expression ';'

   69 selection_statement: IF '(' expression ')' statement
   70                    | IF '(' expression ')' statement ELSE statement
   71                    | SWITCH '(' expression ')' compound_statement

   72 iteration_statement: WHILE '(' expression ')' statement
   73                    | DO statement WHILE '(' expression ')' ';'
   74                    | FOR '(' expression_statement expression_statement ')' statement
   75                    | FOR '(' expression_statement expression_statement expression ')' statement

   76 jump_statement: GOTO IDENTIFIER ';'
   77               | CONTINUE ';'
   78               | BREAK ';'
   79               | RETURN ';'
   80               | RETURN expression ';'

   81 primary_expression: IDENTIFIER
   82                   | INT_LITERAL
   83                   | FLOAT_LITERAL
   84                   | CHAR_LITERAL
   85                   | '(' expression ')'

   86 postfix_expression: primary_expression
   87                   | postfix_expression '[' expression ']'
   88                   | postfix_expression '(' ')'
   89                   | postfix_expression '(' argument_expression_list ')'
   90                   | postfix_expression '.' IDENTIFIER
   91                   | postfix_expression POINTER_OP IDENTIFIER
   92                   | postfix_expression INCREMENT_OP
   93                   | postfix_expression DECREMENT_OP

   94 argument_expression_list: assignment_expression
   95                         | argument_expression_list ',' assignment_expression

   96 unary_expression: postfix_expression
   97                 | INCREMENT_OP unary_expression
   98                 | DECREMENT_OP unary_expression
   99                 | unary_operator cast_expression
  100                 | '-' unary_expression
  101                 | '!' unary_expression
  102                 | '~' unary_expression
  103                 | SIZEOF unary_expression
  104                 | SIZEOF '(' declaration_specifiers ')'

  105 unary_operator: '&'
  106               | '*'
  107               | '+'
  108               | '-'
  109               | '~'
  110               | '!'

  111 cast_expression: unary_expression
  112                | '(' type_specifier ')' cast_expression

  113 multiplicative_expression: cast_expression
  114                          | multiplicative_expression '*' cast_expression
  115                          | multiplicative_expression '/' cast_expression
  116                          | multiplicative_expression '%' cast_expression

  117 additive_expression: multiplicative_expression
  118                    | additive_expression '+' multiplicative_expression
  119                    | additive_expression '-' multiplicative_expression

  120 shift_expression: additive_expression
  121                 | shift_expression LEFTSHIFT_OP additive_expression
  122                 | shift_expression RIGHTSHIFT_OP additive_expression

  123 relational_expression: shift_expression
  124                      | relational_expression '<' shift_expression
  125                      | relational_expression '>' shift_expression
  126                      | relational_expression LE_OP shift_expression
  127                      | relational_expression GE_OP shift_expression

  128 equality_expression: relational_expression
  129                    | equality_expression EQ_OP relational_expression
  130                    | equality_expression NE_OP relational_expression

  131 and_expression: equality_expression
  132               | and_expression '&' equality_expression

  133 exclusive_or_expression: and_expression
  134                        | exclusive_or_expression '^' and_expression

  135 inclusive_or_expression: exclusive_or_expression
  136                        | inclusive_or_expression '|' exclusive_or_expression

  137 logical_and_expression: inclusive_or_expression
  138                       | logical_and_expression AND_OP inclusive_or_expression

  139 logical_or_expression: logical_and_expression
  140                      | logical_or_expression OR_OP logical_and_expression

  141 conditional_expression: logical_or_expression
  142                       | logical_or_expression '?' expression ':' conditional_expression

  143 assignment_expression: conditional_expression
  144                      | unary_expression assignment_operator assignment_expression

  145 assignment_operator: '='
  146                    | MUL_ASSIGN
  147                    | DIV_ASSIGN
  148                    | MOD_ASSIGN
  149                    | ADD_ASSIGN
  150                    | SUB_ASSIGN
  151                    | LEFTSHIFT_ASSIGN
  152                    | RIGHTSHIFT_ASSIGN
  153                    | AND_ASSIGN
  154                    | XOR_ASSIGN
  155                    | OR_ASSIGN

  156 expression: assignment_expression
  157           | expression ',' assignment_expression

  158 type_specifier: VOID
  159               | CHAR
  160               | SHORT
  161               | INT
  162               | LONG
  163               | FLOAT
  164               | DOUBLE
  165               | SIGNED
  166               | UNSIGNED
  167               | CHAR '*'

  168 enum_specifier: ENUM '{' enumerator_list '}'
  169               | ENUM IDENTIFIER '{' enumerator_list '}'
  170               | ENUM IDENTIFIER

  171 enumerator_list: enumerator
  172                | enumerator_list ',' enumerator

  173 enumerator: IDENTIFIER
  174           | IDENTIFIER '=' constant_expression

  175 type_qualifier: CONST
  176               | VOLATILE

  177 pointer: '*'
  178        | '*' type_qualifier_list
  179        | '*' pointer
  180        | '*' type_qualifier_list pointer

  181 type_qualifier_list: type_qualifier
  182                    | type_qualifier_list type_qualifier

  183 identifier_list: IDENTIFIER
  184                | identifier_list ',' IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 101 110
    '%' (37) 116
    '&' (38) 105 132
    '(' (40) 14 16 17 18 42 46 47 48 49 69 70 71 72 73 74 75 85 88 89 104 112
    ')' (41) 14 16 17 18 42 46 47 48 49 69 70 71 72 73 74 75 85 88 89 104 112
    '*' (42) 106 114 167 177 178 179 180
    '+' (43) 107 118
    ',' (44) 20 35 38 95 157 172 184
    '-' (45) 100 108 119
    '.' (46) 90
    '/' (47) 115
    ':' (58) 64 65 66 142
    ';' (59) 7 8 9 25 26 27 67 68 73 76 77 78 79 80
    '<' (60) 124
    '=' (61) 33 34 35 145 174
    '>' (62) 125
    '?' (63) 142
    '[' (91) 15 34 35 43 44 45 87
    ']' (93) 15 34 35 43 44 45 87
    '^' (94) 134
    '{' (123) 34 35 50 51 52 53 168 169
    '|' (124) 136
    '}' (125) 34 35 50 51 52 53 168 169
    '~' (126) 102 109
    error (256)
    IDENTIFIER <string> (258) 9 13 23 27 64 76 81 90 91 169 170 173 174 183 184
    INT_LITERAL <integer> (259) 82
    CHAR_LITERAL <string> (260) 84
    SIZEOF (261) 103 104
    FLOAT_LITERAL <numberFloat> (262) 83
    POINTER_OP (263) 91
    INCREMENT_OP (264) 92 97
    DECREMENT_OP (265) 93 98
    LEFTSHIFT_OP (266) 121
    RIGHTSHIFT_OP (267) 122
    LE_OP (268) 126
    GE_OP (269) 127
    EQ_OP (270) 129
    NE_OP (271) 130
    AND_OP (272) 138
    OR_OP (273) 140
    MUL_ASSIGN (274) 146
    DIV_ASSIGN (275) 147
    MOD_ASSIGN (276) 148
    ADD_ASSIGN (277) 149
    SUB_ASSIGN (278) 150
    LEFTSHIFT_ASSIGN (279) 151
    RIGHTSHIFT_ASSIGN (280) 152
    AND_ASSIGN (281) 153
    XOR_ASSIGN (282) 154
    OR_ASSIGN (283) 155
    TYPE_NAME (284)
    TYPEDEF (285) 9 30 31
    EXTERN (286)
    STATIC (287)
    AUTO (288)
    REGISTER (289)
    CHAR (290) 159 167
    SHORT (291) 160
    INT (292) 161
    LONG (293) 162
    SIGNED (294) 165
    UNSIGNED (295) 166
    FLOAT (296) 163
    DOUBLE (297) 164
    CONST (298) 175
    VOLATILE (299) 176
    VOID (300) 158
    STRUCT (301)
    UNION (302)
    ENUM (303) 168 169 170
    ELLIPSIS (304)
    CASE (305) 65
    DEFAULT (306) 66
    IF (307) 69 70
    ELSE (308) 70
    SWITCH (309) 71
    WHILE (310) 72 73
    DO (311) 73
    FOR (312) 74 75
    GOTO (313) 76
    CONTINUE (314) 77
    BREAK (315) 78
    RETURN (316) 79 80
    uminu (317)
    NOELSE (318)


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    ROOT (89)
        on left: 1
        on right: 0
    translation_unit <expressionList> (90)
        on left: 2 3
        on right: 1 3
    external_declaration <expr> (91)
        on left: 4 5
        on right: 2 3
    function_definition <expr> (92)
        on left: 6 7 8 9 10
        on right: 4
    declarator <expr> (93)
        on left: 11 12
        on right: 6 7 10 14 21 23 27 32 33
    direct_declarator <expr> (94)
        on left: 13 14 15 16 17 18
        on right: 11 12 15 16 17 18 34 35
    parameter_list <expressionList> (95)
        on left: 19 20
        on right: 16 20 47 49
    parameter_declaration <expr> (96)
        on left: 21 22 23
        on right: 19 20
    constant_expression <expr> (97)
        on left: 24
        on right: 15 44 45 65 174
    declaration <expr> (98)
        on left: 25 26 27
        on right: 5 54 55
    declaration_specifiers <string> (99)
        on left: 28 29 30 31
        on right: 6 7 9 21 22 25 26 29 31 104
    init_declarator <expr> (100)
        on left: 32 33 34 35
        on right: 26
    initializer <expr> (101)
        on left: 36
        on right: 33 37 38
    initializer_list <expressionList> (102)
        on left: 37 38
        on right: 34 35 38
    abstract_declarator <expr> (103)
        on left: 39 40 41
        on right: 22 42
    direct_abstract_declarator <expr> (104)
        on left: 42 43 44 45 46 47 48 49
        on right: 40 41 45 48 49
    compound_statement <expressionList> (105)
        on left: 50 51 52 53
        on right: 6 63 71
    declaration_list <expressionList> (106)
        on left: 54 55
        on right: 51 53 55
    statement_list <expressionList> (107)
        on left: 56 57
        on right: 52 53 57
    statement <expr> (108)
        on left: 58 59 60 61 62 63
        on right: 56 57 64 65 66 69 70 72 73 74 75
    labeled_statement <expr> (109)
        on left: 64 65 66
        on right: 58
    expression_statement <expr> (110)
        on left: 67 68
        on right: 59 74 75
    selection_statement <expr> (111)
        on left: 69 70 71
        on right: 60
    iteration_statement <expr> (112)
        on left: 72 73 74 75
        on right: 61
    jump_statement <expr> (113)
        on left: 76 77 78 79 80
        on right: 62
    primary_expression <expr> (114)
        on left: 81 82 83 84 85
        on right: 86
    postfix_expression <expr> (115)
        on left: 86 87 88 89 90 91 92 93
        on right: 87 88 89 90 91 92 93 96
    argument_expression_list <expressionList> (116)
        on left: 94 95
        on right: 89 95
    unary_expression <expr> (117)
        on left: 96 97 98 99 100 101 102 103 104
        on right: 97 98 100 101 102 103 111 144
    unary_operator (118)
        on left: 105 106 107 108 109 110
        on right: 99
    cast_expression <expr> (119)
        on left: 111 112
        on right: 99 112 113 114 115 116
    multiplicative_expression <expr> (120)
        on left: 113 114 115 116
        on right: 114 115 116 117 118 119
    additive_expression <expr> (121)
        on left: 117 118 119
        on right: 118 119 120 121 122
    shift_expression <expr> (122)
        on left: 120 121 122
        on right: 121 122 123 124 125 126 127
    relational_expression <expr> (123)
        on left: 123 124 125 126 127
        on right: 124 125 126 127 128 129 130
    equality_expression <expr> (124)
        on left: 128 129 130
        on right: 129 130 131 132
    and_expression <expr> (125)
        on left: 131 132
        on right: 132 133 134
    exclusive_or_expression <expr> (126)
        on left: 133 134
        on right: 134 135 136
    inclusive_or_expression <expr> (127)
        on left: 135 136
        on right: 136 137 138
    logical_and_expression <expr> (128)
        on left: 137 138
        on right: 138 139 140
    logical_or_expression <expr> (129)
        on left: 139 140
        on right: 140 141 142
    conditional_expression <expr> (130)
        on left: 141 142
        on right: 24 142 143
    assignment_expression <expr> (131)
        on left: 143 144
        on right: 36 94 95 144 156 157
    assignment_operator <string> (132)
        on left: 145 146 147 148 149 150 151 152 153 154 155
        on right: 144
    expression <expr> (133)
        on left: 156 157
        on right: 68 69 70 71 72 73 75 80 85 87 142 157
    type_specifier <string> (134)
        on left: 158 159 160 161 162 163 164 165 166 167
        on right: 28 29 31 112
    enum_specifier <expr> (135)
        on left: 168 169 170
        on right: 8
    enumerator_list <expressionList> (136)
        on left: 171 172
        on right: 168 169 172
    enumerator <expr> (137)
        on left: 173 174
        on right: 171 172
    type_qualifier (138)
        on left: 175 176
        on right: 181 182
    pointer <expr> (139)
        on left: 177 178 179 180
        on right: 11 39 41 179 180
    type_qualifier_list (140)
        on left: 181 182
        on right: 178 180 182
    identifier_list <expressionList> (141)
        on left: 183 184
        on right: 17 184


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    ROOT                    go to state 15
    translation_unit        go to state 16
    external_declaration    go to state 17
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 1

   13 direct_declarator: IDENTIFIER •
   27 declaration: IDENTIFIER • declarator ';'

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    IDENTIFIER  [reduce using rule 13 (direct_declarator)]
    '*'         [reduce using rule 13 (direct_declarator)]
    '('         [reduce using rule 13 (direct_declarator)]
    $default    reduce using rule 13 (direct_declarator)

    declarator         go to state 27
    direct_declarator  go to state 20
    pointer            go to state 25


State 2

    9 function_definition: TYPEDEF • declaration_specifiers IDENTIFIER ';'
   30 declaration_specifiers: TYPEDEF •
   31                       | TYPEDEF • declaration_specifiers type_specifier

    TYPEDEF   shift, and go to state 28
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 30 (declaration_specifiers)

    declaration_specifiers  go to state 29
    type_specifier          go to state 23


State 3

  159 type_specifier: CHAR •
  167               | CHAR • '*'

    '*'  shift, and go to state 30

    '*'       [reduce using rule 159 (type_specifier)]
    $default  reduce using rule 159 (type_specifier)


State 4

  160 type_specifier: SHORT •

    $default  reduce using rule 160 (type_specifier)


State 5

  161 type_specifier: INT •

    $default  reduce using rule 161 (type_specifier)


State 6

  162 type_specifier: LONG •

    $default  reduce using rule 162 (type_specifier)


State 7

  165 type_specifier: SIGNED •

    $default  reduce using rule 165 (type_specifier)


State 8

  166 type_specifier: UNSIGNED •

    $default  reduce using rule 166 (type_specifier)


State 9

  163 type_specifier: FLOAT •

    $default  reduce using rule 163 (type_specifier)


State 10

  164 type_specifier: DOUBLE •

    $default  reduce using rule 164 (type_specifier)


State 11

  158 type_specifier: VOID •

    $default  reduce using rule 158 (type_specifier)


State 12

  168 enum_specifier: ENUM • '{' enumerator_list '}'
  169               | ENUM • IDENTIFIER '{' enumerator_list '}'
  170               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 31
    '{'         shift, and go to state 32


State 13

  177 pointer: '*' •
  178        | '*' • type_qualifier_list
  179        | '*' • pointer
  180        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 33
    VOLATILE  shift, and go to state 34
    '*'       shift, and go to state 13

    $default  reduce using rule 177 (pointer)

    type_qualifier       go to state 35
    pointer              go to state 36
    type_qualifier_list  go to state 37


State 14

   14 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 38
    direct_declarator  go to state 20
    pointer            go to state 25


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 39


State 16

    1 ROOT: translation_unit •
    3 translation_unit: translation_unit • external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 1 (ROOT)

    external_declaration    go to state 40
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 17

    2 translation_unit: external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 18

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 19

   10 function_definition: declarator •

    $default  reduce using rule 10 (function_definition)


State 20

   12 declarator: direct_declarator •
   15 direct_declarator: direct_declarator • '[' constant_expression ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'

    '('  shift, and go to state 41
    '['  shift, and go to state 42

    '('       [reduce using rule 12 (declarator)]
    $default  reduce using rule 12 (declarator)


State 21

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 22

    6 function_definition: declaration_specifiers • declarator compound_statement
    7                    | declaration_specifiers • declarator ';'
   25 declaration: declaration_specifiers • ';'
   26            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    ';'         shift, and go to state 43
    '('         shift, and go to state 14

    declarator         go to state 44
    direct_declarator  go to state 45
    init_declarator    go to state 46
    pointer            go to state 25


State 23

   28 declaration_specifiers: type_specifier •
   29                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 28
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    CHAR      [reduce using rule 28 (declaration_specifiers)]
    SHORT     [reduce using rule 28 (declaration_specifiers)]
    INT       [reduce using rule 28 (declaration_specifiers)]
    LONG      [reduce using rule 28 (declaration_specifiers)]
    SIGNED    [reduce using rule 28 (declaration_specifiers)]
    UNSIGNED  [reduce using rule 28 (declaration_specifiers)]
    FLOAT     [reduce using rule 28 (declaration_specifiers)]
    DOUBLE    [reduce using rule 28 (declaration_specifiers)]
    VOID      [reduce using rule 28 (declaration_specifiers)]
    $default  reduce using rule 28 (declaration_specifiers)

    declaration_specifiers  go to state 47
    type_specifier          go to state 23


State 24

    8 function_definition: enum_specifier • ';'

    ';'  shift, and go to state 48


State 25

   11 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 26
    '('         shift, and go to state 14

    direct_declarator  go to state 49


State 26

   13 direct_declarator: IDENTIFIER •

    $default  reduce using rule 13 (direct_declarator)


State 27

   27 declaration: IDENTIFIER declarator • ';'

    ';'  shift, and go to state 50


State 28

   30 declaration_specifiers: TYPEDEF •
   31                       | TYPEDEF • declaration_specifiers type_specifier

    TYPEDEF   shift, and go to state 28
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    CHAR      [reduce using rule 30 (declaration_specifiers)]
    SHORT     [reduce using rule 30 (declaration_specifiers)]
    INT       [reduce using rule 30 (declaration_specifiers)]
    LONG      [reduce using rule 30 (declaration_specifiers)]
    SIGNED    [reduce using rule 30 (declaration_specifiers)]
    UNSIGNED  [reduce using rule 30 (declaration_specifiers)]
    FLOAT     [reduce using rule 30 (declaration_specifiers)]
    DOUBLE    [reduce using rule 30 (declaration_specifiers)]
    VOID      [reduce using rule 30 (declaration_specifiers)]
    $default  reduce using rule 30 (declaration_specifiers)

    declaration_specifiers  go to state 51
    type_specifier          go to state 23


State 29

    9 function_definition: TYPEDEF declaration_specifiers • IDENTIFIER ';'
   31 declaration_specifiers: TYPEDEF declaration_specifiers • type_specifier

    IDENTIFIER  shift, and go to state 52
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11

    type_specifier  go to state 53


State 30

  167 type_specifier: CHAR '*' •

    $default  reduce using rule 167 (type_specifier)


State 31

  169 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  170               | ENUM IDENTIFIER •

    '{'  shift, and go to state 54

    $default  reduce using rule 170 (enum_specifier)


State 32

  168 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 55

    enumerator_list  go to state 56
    enumerator       go to state 57


State 33

  175 type_qualifier: CONST •

    $default  reduce using rule 175 (type_qualifier)


State 34

  176 type_qualifier: VOLATILE •

    $default  reduce using rule 176 (type_qualifier)


State 35

  181 type_qualifier_list: type_qualifier •

    $default  reduce using rule 181 (type_qualifier_list)


State 36

  179 pointer: '*' pointer •

    $default  reduce using rule 179 (pointer)


State 37

  178 pointer: '*' type_qualifier_list •
  180        | '*' type_qualifier_list • pointer
  182 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 33
    VOLATILE  shift, and go to state 34
    '*'       shift, and go to state 13

    $default  reduce using rule 178 (pointer)

    type_qualifier  go to state 58
    pointer         go to state 59


State 38

   14 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 60


State 39

    0 $accept: ROOT $end •

    $default  accept


State 40

    3 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 3 (translation_unit)


State 41

   16 direct_declarator: direct_declarator '(' • parameter_list ')'
   17                  | direct_declarator '(' • identifier_list ')'
   18                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 61
    TYPEDEF     shift, and go to state 28
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ')'         shift, and go to state 62

    parameter_list          go to state 63
    parameter_declaration   go to state 64
    declaration_specifiers  go to state 65
    type_specifier          go to state 23
    identifier_list         go to state 66


State 42

   15 direct_declarator: direct_declarator '[' • constant_expression ']'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    constant_expression        go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97


State 43

   25 declaration: declaration_specifiers ';' •

    $default  reduce using rule 25 (declaration)


State 44

    6 function_definition: declaration_specifiers declarator • compound_statement
    7                    | declaration_specifiers declarator • ';'
   32 init_declarator: declarator •
   33                | declarator • '=' initializer

    ';'  shift, and go to state 98
    '='  shift, and go to state 99
    '{'  shift, and go to state 100

    ';'  [reduce using rule 32 (init_declarator)]

    compound_statement  go to state 101


State 45

   12 declarator: direct_declarator •
   15 direct_declarator: direct_declarator • '[' constant_expression ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'
   34 init_declarator: direct_declarator • '[' ']' '=' '{' initializer_list '}'
   35                | direct_declarator • '[' ']' '=' '{' initializer_list ',' '}'

    '('  shift, and go to state 41
    '['  shift, and go to state 102

    $default  reduce using rule 12 (declarator)


State 46

   26 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 103


State 47

   29 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 29 (declaration_specifiers)


State 48

    8 function_definition: enum_specifier ';' •

    $default  reduce using rule 8 (function_definition)


State 49

   11 declarator: pointer direct_declarator •
   15 direct_declarator: direct_declarator • '[' constant_expression ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'

    '('  shift, and go to state 41
    '['  shift, and go to state 42

    '('       [reduce using rule 11 (declarator)]
    $default  reduce using rule 11 (declarator)


State 50

   27 declaration: IDENTIFIER declarator ';' •

    $default  reduce using rule 27 (declaration)


State 51

   31 declaration_specifiers: TYPEDEF declaration_specifiers • type_specifier

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    type_specifier  go to state 53


State 52

    9 function_definition: TYPEDEF declaration_specifiers IDENTIFIER • ';'

    ';'  shift, and go to state 104


State 53

   31 declaration_specifiers: TYPEDEF declaration_specifiers type_specifier •

    $default  reduce using rule 31 (declaration_specifiers)


State 54

  169 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 55

    enumerator_list  go to state 105
    enumerator       go to state 57


State 55

  173 enumerator: IDENTIFIER •
  174           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 106

    $default  reduce using rule 173 (enumerator)


State 56

  168 enum_specifier: ENUM '{' enumerator_list • '}'
  172 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 107
    '}'  shift, and go to state 108


State 57

  171 enumerator_list: enumerator •

    $default  reduce using rule 171 (enumerator_list)


State 58

  182 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 182 (type_qualifier_list)


State 59

  180 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 180 (pointer)


State 60

   14 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 14 (direct_declarator)


State 61

   23 parameter_declaration: IDENTIFIER • declarator
  183 identifier_list: IDENTIFIER •

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 183 (identifier_list)

    declarator         go to state 109
    direct_declarator  go to state 20
    pointer            go to state 25


State 62

   18 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 18 (direct_declarator)


State 63

   16 direct_declarator: direct_declarator '(' parameter_list • ')'
   20 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


State 64

   19 parameter_list: parameter_declaration •

    $default  reduce using rule 19 (parameter_list)


State 65

   21 parameter_declaration: declaration_specifiers • declarator
   22                      | declaration_specifiers • abstract_declarator

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 112
    '['         shift, and go to state 113

    declarator                  go to state 114
    direct_declarator           go to state 20
    abstract_declarator         go to state 115
    direct_abstract_declarator  go to state 116
    pointer                     go to state 117


State 66

   17 direct_declarator: direct_declarator '(' identifier_list • ')'
  184 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 118
    ','  shift, and go to state 119


State 67

   81 primary_expression: IDENTIFIER •

    $default  reduce using rule 81 (primary_expression)


State 68

   82 primary_expression: INT_LITERAL •

    $default  reduce using rule 82 (primary_expression)


State 69

   84 primary_expression: CHAR_LITERAL •

    $default  reduce using rule 84 (primary_expression)


State 70

  103 unary_expression: SIZEOF • unary_expression
  104                 | SIZEOF • '(' declaration_specifiers ')'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 120
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 121
    unary_operator      go to state 85


State 71

   83 primary_expression: FLOAT_LITERAL •

    $default  reduce using rule 83 (primary_expression)


State 72

   97 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 122
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 123
    unary_operator      go to state 85


State 73

   98 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 122
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 124
    unary_operator      go to state 85


State 74

  107 unary_operator: '+' •

    $default  reduce using rule 107 (unary_operator)


State 75

  100 unary_expression: '-' • unary_expression
  108 unary_operator: '-' •

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '*'            shift, and go to state 76
    '('            shift, and go to state 122
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    IDENTIFIER     [reduce using rule 108 (unary_operator)]
    INT_LITERAL    [reduce using rule 108 (unary_operator)]
    CHAR_LITERAL   [reduce using rule 108 (unary_operator)]
    SIZEOF         [reduce using rule 108 (unary_operator)]
    FLOAT_LITERAL  [reduce using rule 108 (unary_operator)]
    INCREMENT_OP   [reduce using rule 108 (unary_operator)]
    DECREMENT_OP   [reduce using rule 108 (unary_operator)]
    '('            [reduce using rule 108 (unary_operator)]
    '!'            [reduce using rule 108 (unary_operator)]
    '~'            [reduce using rule 108 (unary_operator)]
    '&'            [reduce using rule 108 (unary_operator)]
    $default       reduce using rule 108 (unary_operator)

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 125
    unary_operator      go to state 85


State 76

  106 unary_operator: '*' •

    $default  reduce using rule 106 (unary_operator)


State 77

   85 primary_expression: '(' • expression ')'
  112 cast_expression: '(' • type_specifier ')' cast_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    VOID           shift, and go to state 11
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 129
    type_specifier             go to state 130


State 78

  101 unary_expression: '!' • unary_expression
  110 unary_operator: '!' •

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 122
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    IDENTIFIER     [reduce using rule 110 (unary_operator)]
    INT_LITERAL    [reduce using rule 110 (unary_operator)]
    CHAR_LITERAL   [reduce using rule 110 (unary_operator)]
    SIZEOF         [reduce using rule 110 (unary_operator)]
    FLOAT_LITERAL  [reduce using rule 110 (unary_operator)]
    INCREMENT_OP   [reduce using rule 110 (unary_operator)]
    DECREMENT_OP   [reduce using rule 110 (unary_operator)]
    '+'            [reduce using rule 110 (unary_operator)]
    '-'            [reduce using rule 110 (unary_operator)]
    '*'            [reduce using rule 110 (unary_operator)]
    '('            [reduce using rule 110 (unary_operator)]
    '!'            [reduce using rule 110 (unary_operator)]
    '~'            [reduce using rule 110 (unary_operator)]
    '&'            [reduce using rule 110 (unary_operator)]

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 131
    unary_operator      go to state 85


State 79

  102 unary_expression: '~' • unary_expression
  109 unary_operator: '~' •

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 122
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    IDENTIFIER     [reduce using rule 109 (unary_operator)]
    INT_LITERAL    [reduce using rule 109 (unary_operator)]
    CHAR_LITERAL   [reduce using rule 109 (unary_operator)]
    SIZEOF         [reduce using rule 109 (unary_operator)]
    FLOAT_LITERAL  [reduce using rule 109 (unary_operator)]
    INCREMENT_OP   [reduce using rule 109 (unary_operator)]
    DECREMENT_OP   [reduce using rule 109 (unary_operator)]
    '+'            [reduce using rule 109 (unary_operator)]
    '-'            [reduce using rule 109 (unary_operator)]
    '*'            [reduce using rule 109 (unary_operator)]
    '('            [reduce using rule 109 (unary_operator)]
    '!'            [reduce using rule 109 (unary_operator)]
    '~'            [reduce using rule 109 (unary_operator)]
    '&'            [reduce using rule 109 (unary_operator)]

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 132
    unary_operator      go to state 85


State 80

  105 unary_operator: '&' •

    $default  reduce using rule 105 (unary_operator)


State 81

   15 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 133


State 82

   86 postfix_expression: primary_expression •

    $default  reduce using rule 86 (postfix_expression)


State 83

   87 postfix_expression: postfix_expression • '[' expression ']'
   88                   | postfix_expression • '(' ')'
   89                   | postfix_expression • '(' argument_expression_list ')'
   90                   | postfix_expression • '.' IDENTIFIER
   91                   | postfix_expression • POINTER_OP IDENTIFIER
   92                   | postfix_expression • INCREMENT_OP
   93                   | postfix_expression • DECREMENT_OP
   96 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 134
    INCREMENT_OP  shift, and go to state 135
    DECREMENT_OP  shift, and go to state 136
    '('           shift, and go to state 137
    '['           shift, and go to state 138
    '.'           shift, and go to state 139

    $default  reduce using rule 96 (unary_expression)


State 84

  111 cast_expression: unary_expression •

    $default  reduce using rule 111 (cast_expression)


State 85

   99 unary_expression: unary_operator • cast_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 140


State 86

  113 multiplicative_expression: cast_expression •

    $default  reduce using rule 113 (multiplicative_expression)


State 87

  114 multiplicative_expression: multiplicative_expression • '*' cast_expression
  115                          | multiplicative_expression • '/' cast_expression
  116                          | multiplicative_expression • '%' cast_expression
  117 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 117 (additive_expression)


State 88

  118 additive_expression: additive_expression • '+' multiplicative_expression
  119                    | additive_expression • '-' multiplicative_expression
  120 shift_expression: additive_expression •

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 120 (shift_expression)


State 89

  121 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  122                 | shift_expression • RIGHTSHIFT_OP additive_expression
  123 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 146
    RIGHTSHIFT_OP  shift, and go to state 147

    $default  reduce using rule 123 (relational_expression)


State 90

  124 relational_expression: relational_expression • '<' shift_expression
  125                      | relational_expression • '>' shift_expression
  126                      | relational_expression • LE_OP shift_expression
  127                      | relational_expression • GE_OP shift_expression
  128 equality_expression: relational_expression •

    LE_OP  shift, and go to state 148
    GE_OP  shift, and go to state 149
    '<'    shift, and go to state 150
    '>'    shift, and go to state 151

    $default  reduce using rule 128 (equality_expression)


State 91

  129 equality_expression: equality_expression • EQ_OP relational_expression
  130                    | equality_expression • NE_OP relational_expression
  131 and_expression: equality_expression •

    EQ_OP  shift, and go to state 152
    NE_OP  shift, and go to state 153

    $default  reduce using rule 131 (and_expression)


State 92

  132 and_expression: and_expression • '&' equality_expression
  133 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 154

    $default  reduce using rule 133 (exclusive_or_expression)


State 93

  134 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  135 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 155

    $default  reduce using rule 135 (inclusive_or_expression)


State 94

  136 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  137 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 156

    $default  reduce using rule 137 (logical_and_expression)


State 95

  138 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  139 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 157

    $default  reduce using rule 139 (logical_or_expression)


State 96

  140 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  141 conditional_expression: logical_or_expression •
  142                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 158
    '?'    shift, and go to state 159

    $default  reduce using rule 141 (conditional_expression)


State 97

   24 constant_expression: conditional_expression •

    $default  reduce using rule 24 (constant_expression)


State 98

    7 function_definition: declaration_specifiers declarator ';' •

    $default  reduce using rule 7 (function_definition)


State 99

   33 init_declarator: declarator '=' • initializer

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    initializer                go to state 160
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 161


State 100

   50 compound_statement: '{' • '}'
   51                   | '{' • declaration_list '}'
   52                   | '{' • statement_list '}'
   53                   | '{' • declaration_list statement_list '}'

    IDENTIFIER     shift, and go to state 162
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    TYPEDEF        shift, and go to state 28
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    VOID           shift, and go to state 11
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '}'            shift, and go to state 175
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    declaration                go to state 176
    declaration_specifiers     go to state 177
    compound_statement         go to state 178
    declaration_list           go to state 179
    statement_list             go to state 180
    statement                  go to state 181
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187
    type_specifier             go to state 23


State 101

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 102

   15 direct_declarator: direct_declarator '[' • constant_expression ']'
   34 init_declarator: direct_declarator '[' • ']' '=' '{' initializer_list '}'
   35                | direct_declarator '[' • ']' '=' '{' initializer_list ',' '}'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    ']'            shift, and go to state 188
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    constant_expression        go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97


State 103

   26 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 26 (declaration)


State 104

    9 function_definition: TYPEDEF declaration_specifiers IDENTIFIER ';' •

    $default  reduce using rule 9 (function_definition)


State 105

  169 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  172 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 107
    '}'  shift, and go to state 189


State 106

  174 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    constant_expression        go to state 190
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97


State 107

  172 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 55

    enumerator  go to state 191


State 108

  168 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 168 (enum_specifier)


State 109

   23 parameter_declaration: IDENTIFIER declarator •

    $default  reduce using rule 23 (parameter_declaration)


State 110

   16 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 16 (direct_declarator)


State 111

   20 parameter_list: parameter_list ',' • parameter_declaration

    IDENTIFIER  shift, and go to state 192
    TYPEDEF     shift, and go to state 28
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11

    parameter_declaration   go to state 193
    declaration_specifiers  go to state 65
    type_specifier          go to state 23


State 112

   14 direct_declarator: '(' • declarator ')'
   42 direct_abstract_declarator: '(' • abstract_declarator ')'
   46                           | '(' • ')'
   47                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 194
    TYPEDEF     shift, and go to state 28
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    '*'         shift, and go to state 13
    '('         shift, and go to state 112
    ')'         shift, and go to state 195
    '['         shift, and go to state 113

    declarator                  go to state 38
    direct_declarator           go to state 20
    parameter_list              go to state 196
    parameter_declaration       go to state 64
    declaration_specifiers      go to state 65
    abstract_declarator         go to state 197
    direct_abstract_declarator  go to state 116
    type_specifier              go to state 23
    pointer                     go to state 117


State 113

   43 direct_abstract_declarator: '[' • ']'
   44                           | '[' • constant_expression ']'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    ']'            shift, and go to state 198
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    constant_expression        go to state 199
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97


State 114

   21 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 21 (parameter_declaration)


State 115

   22 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 22 (parameter_declaration)


State 116

   40 abstract_declarator: direct_abstract_declarator •
   45 direct_abstract_declarator: direct_abstract_declarator • '[' constant_expression ']'
   48                           | direct_abstract_declarator • '(' ')'
   49                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 200
    '['  shift, and go to state 201

    $default  reduce using rule 40 (abstract_declarator)


State 117

   11 declarator: pointer • direct_declarator
   39 abstract_declarator: pointer •
   41                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 26
    '('         shift, and go to state 112
    '['         shift, and go to state 113

    $default  reduce using rule 39 (abstract_declarator)

    direct_declarator           go to state 49
    direct_abstract_declarator  go to state 202


State 118

   17 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 17 (direct_declarator)


State 119

  184 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 203


State 120

   85 primary_expression: '(' • expression ')'
  104 unary_expression: SIZEOF '(' • declaration_specifiers ')'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    TYPEDEF        shift, and go to state 28
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    VOID           shift, and go to state 11
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    declaration_specifiers     go to state 204
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 129
    type_specifier             go to state 23


State 121

  103 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 103 (unary_expression)


State 122

   85 primary_expression: '(' • expression ')'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 129


State 123

   97 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 97 (unary_expression)


State 124

   98 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 98 (unary_expression)


State 125

  100 unary_expression: '-' unary_expression •

    $default  reduce using rule 100 (unary_expression)


State 126

  111 cast_expression: unary_expression •
  144 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 205
    DIV_ASSIGN         shift, and go to state 206
    MOD_ASSIGN         shift, and go to state 207
    ADD_ASSIGN         shift, and go to state 208
    SUB_ASSIGN         shift, and go to state 209
    LEFTSHIFT_ASSIGN   shift, and go to state 210
    RIGHTSHIFT_ASSIGN  shift, and go to state 211
    AND_ASSIGN         shift, and go to state 212
    XOR_ASSIGN         shift, and go to state 213
    OR_ASSIGN          shift, and go to state 214
    '='                shift, and go to state 215

    $default  reduce using rule 111 (cast_expression)

    assignment_operator  go to state 216


State 127

  143 assignment_expression: conditional_expression •

    $default  reduce using rule 143 (assignment_expression)


State 128

  156 expression: assignment_expression •

    $default  reduce using rule 156 (expression)


State 129

   85 primary_expression: '(' expression • ')'
  157 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 217
    ','  shift, and go to state 218


State 130

  112 cast_expression: '(' type_specifier • ')' cast_expression

    ')'  shift, and go to state 219


State 131

  101 unary_expression: '!' unary_expression •

    $default  reduce using rule 101 (unary_expression)


State 132

  102 unary_expression: '~' unary_expression •

    $default  reduce using rule 102 (unary_expression)


State 133

   15 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 15 (direct_declarator)


State 134

   91 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 220


State 135

   92 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 92 (postfix_expression)


State 136

   93 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 93 (postfix_expression)


State 137

   88 postfix_expression: postfix_expression '(' • ')'
   89                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    ')'            shift, and go to state 221
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    argument_expression_list   go to state 222
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 223


State 138

   87 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 224


State 139

   90 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 140

   99 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 99 (unary_expression)


State 141

  114 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 226


State 142

  115 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 227


State 143

  116 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 228


State 144

  118 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 229


State 145

  119 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 230


State 146

  121 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 231


State 147

  122 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 232


State 148

  126 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 233


State 149

  127 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 234


State 150

  124 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 235


State 151

  125 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 236


State 152

  129 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 237


State 153

  130 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 238


State 154

  132 and_expression: and_expression '&' • equality_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 239


State 155

  134 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 240


State 156

  136 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 241


State 157

  138 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 242


State 158

  140 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 243


State 159

  142 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 244


State 160

   33 init_declarator: declarator '=' initializer •

    $default  reduce using rule 33 (init_declarator)


State 161

   36 initializer: assignment_expression •

    $default  reduce using rule 36 (initializer)


State 162

   27 declaration: IDENTIFIER • declarator ';'
   64 labeled_statement: IDENTIFIER • ':' statement
   81 primary_expression: IDENTIFIER •

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 14
    ':'         shift, and go to state 245

    '*'       [reduce using rule 81 (primary_expression)]
    '('       [reduce using rule 81 (primary_expression)]
    $default  reduce using rule 81 (primary_expression)

    declarator         go to state 27
    direct_declarator  go to state 20
    pointer            go to state 25


State 163

   65 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    constant_expression        go to state 246
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97


State 164

   66 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 247


State 165

   69 selection_statement: IF • '(' expression ')' statement
   70                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 248


State 166

   71 selection_statement: SWITCH • '(' expression ')' compound_statement

    '('  shift, and go to state 249


State 167

   72 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 250


State 168

   73 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 252
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 169

   74 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   75                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 253


State 170

   76 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 254


State 171

   77 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 255


State 172

   78 jump_statement: BREAK • ';'

    ';'  shift, and go to state 256


State 173

   79 jump_statement: RETURN • ';'
   80               | RETURN • expression ';'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 257
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 258


State 174

   67 expression_statement: ';' •

    $default  reduce using rule 67 (expression_statement)


State 175

   50 compound_statement: '{' '}' •

    $default  reduce using rule 50 (compound_statement)


State 176

   54 declaration_list: declaration •

    $default  reduce using rule 54 (declaration_list)


State 177

   25 declaration: declaration_specifiers • ';'
   26            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    ';'         shift, and go to state 43
    '('         shift, and go to state 14

    declarator         go to state 259
    direct_declarator  go to state 45
    init_declarator    go to state 46
    pointer            go to state 25


State 178

   63 statement: compound_statement •

    $default  reduce using rule 63 (statement)


State 179

   51 compound_statement: '{' declaration_list • '}'
   53                   | '{' declaration_list • statement_list '}'
   55 declaration_list: declaration_list • declaration

    IDENTIFIER     shift, and go to state 162
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    TYPEDEF        shift, and go to state 28
    CHAR           shift, and go to state 3
    SHORT          shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SIGNED         shift, and go to state 7
    UNSIGNED       shift, and go to state 8
    FLOAT          shift, and go to state 9
    DOUBLE         shift, and go to state 10
    VOID           shift, and go to state 11
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '}'            shift, and go to state 260
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    declaration                go to state 261
    declaration_specifiers     go to state 177
    compound_statement         go to state 178
    statement_list             go to state 262
    statement                  go to state 181
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187
    type_specifier             go to state 23


State 180

   52 compound_statement: '{' statement_list • '}'
   57 statement_list: statement_list • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '}'            shift, and go to state 263
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 264
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 181

   56 statement_list: statement •

    $default  reduce using rule 56 (statement_list)


State 182

   58 statement: labeled_statement •

    $default  reduce using rule 58 (statement)


State 183

   59 statement: expression_statement •

    $default  reduce using rule 59 (statement)


State 184

   60 statement: selection_statement •

    $default  reduce using rule 60 (statement)


State 185

   61 statement: iteration_statement •

    $default  reduce using rule 61 (statement)


State 186

   62 statement: jump_statement •

    $default  reduce using rule 62 (statement)


State 187

   68 expression_statement: expression • ';'
  157 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 265
    ','  shift, and go to state 218


State 188

   34 init_declarator: direct_declarator '[' ']' • '=' '{' initializer_list '}'
   35                | direct_declarator '[' ']' • '=' '{' initializer_list ',' '}'

    '='  shift, and go to state 266


State 189

  169 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 169 (enum_specifier)


State 190

  174 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 174 (enumerator)


State 191

  172 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 172 (enumerator_list)


State 192

   23 parameter_declaration: IDENTIFIER • declarator

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 109
    direct_declarator  go to state 20
    pointer            go to state 25


State 193

   20 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 20 (parameter_list)


State 194

   13 direct_declarator: IDENTIFIER •
   23 parameter_declaration: IDENTIFIER • declarator

    IDENTIFIER  shift, and go to state 26
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    '('       [reduce using rule 13 (direct_declarator)]
    $default  reduce using rule 13 (direct_declarator)

    declarator         go to state 109
    direct_declarator  go to state 20
    pointer            go to state 25


State 195

   46 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 196

   20 parameter_list: parameter_list • ',' parameter_declaration
   47 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 267
    ','  shift, and go to state 111


State 197

   42 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 268


State 198

   43 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 199

   44 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 269


State 200

   48 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   49                           | direct_abstract_declarator '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 192
    TYPEDEF     shift, and go to state 28
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ')'         shift, and go to state 270

    parameter_list          go to state 271
    parameter_declaration   go to state 64
    declaration_specifiers  go to state 65
    type_specifier          go to state 23


State 201

   45 direct_abstract_declarator: direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    constant_expression        go to state 272
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97


State 202

   41 abstract_declarator: pointer direct_abstract_declarator •
   45 direct_abstract_declarator: direct_abstract_declarator • '[' constant_expression ']'
   48                           | direct_abstract_declarator • '(' ')'
   49                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 200
    '['  shift, and go to state 201

    $default  reduce using rule 41 (abstract_declarator)


State 203

  184 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 184 (identifier_list)


State 204

  104 unary_expression: SIZEOF '(' declaration_specifiers • ')'

    ')'  shift, and go to state 273


State 205

  146 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 146 (assignment_operator)


State 206

  147 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 147 (assignment_operator)


State 207

  148 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 148 (assignment_operator)


State 208

  149 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 149 (assignment_operator)


State 209

  150 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 150 (assignment_operator)


State 210

  151 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 151 (assignment_operator)


State 211

  152 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 152 (assignment_operator)


State 212

  153 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 153 (assignment_operator)


State 213

  154 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 154 (assignment_operator)


State 214

  155 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 155 (assignment_operator)


State 215

  145 assignment_operator: '=' •

    $default  reduce using rule 145 (assignment_operator)


State 216

  144 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 274


State 217

   85 primary_expression: '(' expression ')' •

    $default  reduce using rule 85 (primary_expression)


State 218

  157 expression: expression ',' • assignment_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 275


State 219

  112 cast_expression: '(' type_specifier ')' • cast_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 276


State 220

   91 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 91 (postfix_expression)


State 221

   88 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 88 (postfix_expression)


State 222

   89 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   95 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 277
    ','  shift, and go to state 278


State 223

   94 argument_expression_list: assignment_expression •

    $default  reduce using rule 94 (argument_expression_list)


State 224

   87 postfix_expression: postfix_expression '[' expression • ']'
  157 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 279
    ','  shift, and go to state 218


State 225

   90 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 90 (postfix_expression)


State 226

  114 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 114 (multiplicative_expression)


State 227

  115 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 115 (multiplicative_expression)


State 228

  116 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 116 (multiplicative_expression)


State 229

  114 multiplicative_expression: multiplicative_expression • '*' cast_expression
  115                          | multiplicative_expression • '/' cast_expression
  116                          | multiplicative_expression • '%' cast_expression
  118 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 118 (additive_expression)


State 230

  114 multiplicative_expression: multiplicative_expression • '*' cast_expression
  115                          | multiplicative_expression • '/' cast_expression
  116                          | multiplicative_expression • '%' cast_expression
  119 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 119 (additive_expression)


State 231

  118 additive_expression: additive_expression • '+' multiplicative_expression
  119                    | additive_expression • '-' multiplicative_expression
  121 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 121 (shift_expression)


State 232

  118 additive_expression: additive_expression • '+' multiplicative_expression
  119                    | additive_expression • '-' multiplicative_expression
  122 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 122 (shift_expression)


State 233

  121 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  122                 | shift_expression • RIGHTSHIFT_OP additive_expression
  126 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 146
    RIGHTSHIFT_OP  shift, and go to state 147

    $default  reduce using rule 126 (relational_expression)


State 234

  121 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  122                 | shift_expression • RIGHTSHIFT_OP additive_expression
  127 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 146
    RIGHTSHIFT_OP  shift, and go to state 147

    $default  reduce using rule 127 (relational_expression)


State 235

  121 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  122                 | shift_expression • RIGHTSHIFT_OP additive_expression
  124 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 146
    RIGHTSHIFT_OP  shift, and go to state 147

    $default  reduce using rule 124 (relational_expression)


State 236

  121 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  122                 | shift_expression • RIGHTSHIFT_OP additive_expression
  125 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 146
    RIGHTSHIFT_OP  shift, and go to state 147

    $default  reduce using rule 125 (relational_expression)


State 237

  124 relational_expression: relational_expression • '<' shift_expression
  125                      | relational_expression • '>' shift_expression
  126                      | relational_expression • LE_OP shift_expression
  127                      | relational_expression • GE_OP shift_expression
  129 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 148
    GE_OP  shift, and go to state 149
    '<'    shift, and go to state 150
    '>'    shift, and go to state 151

    $default  reduce using rule 129 (equality_expression)


State 238

  124 relational_expression: relational_expression • '<' shift_expression
  125                      | relational_expression • '>' shift_expression
  126                      | relational_expression • LE_OP shift_expression
  127                      | relational_expression • GE_OP shift_expression
  130 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 148
    GE_OP  shift, and go to state 149
    '<'    shift, and go to state 150
    '>'    shift, and go to state 151

    $default  reduce using rule 130 (equality_expression)


State 239

  129 equality_expression: equality_expression • EQ_OP relational_expression
  130                    | equality_expression • NE_OP relational_expression
  132 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 152
    NE_OP  shift, and go to state 153

    $default  reduce using rule 132 (and_expression)


State 240

  132 and_expression: and_expression • '&' equality_expression
  134 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 154

    $default  reduce using rule 134 (exclusive_or_expression)


State 241

  134 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  136 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 155

    $default  reduce using rule 136 (inclusive_or_expression)


State 242

  136 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  138 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 156

    $default  reduce using rule 138 (logical_and_expression)


State 243

  138 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  140 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 157

    $default  reduce using rule 140 (logical_or_expression)


State 244

  142 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  157 expression: expression • ',' assignment_expression

    ','  shift, and go to state 218
    ':'  shift, and go to state 280


State 245

   64 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 281
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 246

   65 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 282


State 247

   66 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 283
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 248

   69 selection_statement: IF '(' • expression ')' statement
   70                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 284


State 249

   71 selection_statement: SWITCH '(' • expression ')' compound_statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 285


State 250

   72 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 286


State 251

   64 labeled_statement: IDENTIFIER • ':' statement
   81 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 245

    $default  reduce using rule 81 (primary_expression)


State 252

   73 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 287


State 253

   74 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   75                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    expression_statement       go to state 288
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 254

   76 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 289


State 255

   77 jump_statement: CONTINUE ';' •

    $default  reduce using rule 77 (jump_statement)


State 256

   78 jump_statement: BREAK ';' •

    $default  reduce using rule 78 (jump_statement)


State 257

   79 jump_statement: RETURN ';' •

    $default  reduce using rule 79 (jump_statement)


State 258

   80 jump_statement: RETURN expression • ';'
  157 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 290
    ','  shift, and go to state 218


State 259

   32 init_declarator: declarator •
   33                | declarator • '=' initializer

    '='  shift, and go to state 99

    $default  reduce using rule 32 (init_declarator)


State 260

   51 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 51 (compound_statement)


State 261

   55 declaration_list: declaration_list declaration •

    $default  reduce using rule 55 (declaration_list)


State 262

   53 compound_statement: '{' declaration_list statement_list • '}'
   57 statement_list: statement_list • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '}'            shift, and go to state 291
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 264
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 263

   52 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 52 (compound_statement)


State 264

   57 statement_list: statement_list statement •

    $default  reduce using rule 57 (statement_list)


State 265

   68 expression_statement: expression ';' •

    $default  reduce using rule 68 (expression_statement)


State 266

   34 init_declarator: direct_declarator '[' ']' '=' • '{' initializer_list '}'
   35                | direct_declarator '[' ']' '=' • '{' initializer_list ',' '}'

    '{'  shift, and go to state 292


State 267

   47 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 47 (direct_abstract_declarator)


State 268

   42 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 269

   44 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 270

   48 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 48 (direct_abstract_declarator)


State 271

   20 parameter_list: parameter_list • ',' parameter_declaration
   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 293
    ','  shift, and go to state 111


State 272

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 294


State 273

  104 unary_expression: SIZEOF '(' declaration_specifiers ')' •

    $default  reduce using rule 104 (unary_expression)


State 274

  144 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 144 (assignment_expression)


State 275

  157 expression: expression ',' assignment_expression •

    $default  reduce using rule 157 (expression)


State 276

  112 cast_expression: '(' type_specifier ')' cast_expression •

    $default  reduce using rule 112 (cast_expression)


State 277

   89 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 89 (postfix_expression)


State 278

   95 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 295


State 279

   87 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 87 (postfix_expression)


State 280

  142 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 296


State 281

   64 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 64 (labeled_statement)


State 282

   65 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 297
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 283

   66 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 66 (labeled_statement)


State 284

   69 selection_statement: IF '(' expression • ')' statement
   70                    | IF '(' expression • ')' statement ELSE statement
  157 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 298
    ','  shift, and go to state 218


State 285

   71 selection_statement: SWITCH '(' expression • ')' compound_statement
  157 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 299
    ','  shift, and go to state 218


State 286

   72 iteration_statement: WHILE '(' expression • ')' statement
  157 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 300
    ','  shift, and go to state 218


State 287

   73 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 301


State 288

   74 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   75                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    expression_statement       go to state 302
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 289

   76 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 76 (jump_statement)


State 290

   80 jump_statement: RETURN expression ';' •

    $default  reduce using rule 80 (jump_statement)


State 291

   53 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 53 (compound_statement)


State 292

   34 init_declarator: direct_declarator '[' ']' '=' '{' • initializer_list '}'
   35                | direct_declarator '[' ']' '=' '{' • initializer_list ',' '}'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    initializer                go to state 303
    initializer_list           go to state 304
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 161


State 293

   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 49 (direct_abstract_declarator)


State 294

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 45 (direct_abstract_declarator)


State 295

   95 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 95 (argument_expression_list)


State 296

  142 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 142 (conditional_expression)


State 297

   65 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 65 (labeled_statement)


State 298

   69 selection_statement: IF '(' expression ')' • statement
   70                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 305
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 299

   71 selection_statement: SWITCH '(' expression ')' • compound_statement

    '{'  shift, and go to state 100

    compound_statement  go to state 306


State 300

   72 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 307
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 301

   73 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 308


State 302

   74 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   75                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    ')'            shift, and go to state 309
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 310


State 303

   37 initializer_list: initializer •

    $default  reduce using rule 37 (initializer_list)


State 304

   34 init_declarator: direct_declarator '[' ']' '=' '{' initializer_list • '}'
   35                | direct_declarator '[' ']' '=' '{' initializer_list • ',' '}'
   38 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 311
    '}'  shift, and go to state 312


State 305

   69 selection_statement: IF '(' expression ')' statement •
   70                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 313

    $default  reduce using rule 69 (selection_statement)


State 306

   71 selection_statement: SWITCH '(' expression ')' compound_statement •

    $default  reduce using rule 71 (selection_statement)


State 307

   72 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 72 (iteration_statement)


State 308

   73 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  157 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 314
    ','  shift, and go to state 218


State 309

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 315
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 310

   75 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  157 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 316
    ','  shift, and go to state 218


State 311

   35 init_declarator: direct_declarator '[' ']' '=' '{' initializer_list ',' • '}'
   38 initializer_list: initializer_list ',' • initializer

    IDENTIFIER     shift, and go to state 67
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    '('            shift, and go to state 77
    '}'            shift, and go to state 317
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    initializer                go to state 318
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 161


State 312

   34 init_declarator: direct_declarator '[' ']' '=' '{' initializer_list '}' •

    $default  reduce using rule 34 (init_declarator)


State 313

   70 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 319
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 314

   73 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 320


State 315

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 74 (iteration_statement)


State 316

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER     shift, and go to state 251
    INT_LITERAL    shift, and go to state 68
    CHAR_LITERAL   shift, and go to state 69
    SIZEOF         shift, and go to state 70
    FLOAT_LITERAL  shift, and go to state 71
    INCREMENT_OP   shift, and go to state 72
    DECREMENT_OP   shift, and go to state 73
    CASE           shift, and go to state 163
    DEFAULT        shift, and go to state 164
    IF             shift, and go to state 165
    SWITCH         shift, and go to state 166
    WHILE          shift, and go to state 167
    DO             shift, and go to state 168
    FOR            shift, and go to state 169
    GOTO           shift, and go to state 170
    CONTINUE       shift, and go to state 171
    BREAK          shift, and go to state 172
    RETURN         shift, and go to state 173
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75
    '*'            shift, and go to state 76
    ';'            shift, and go to state 174
    '('            shift, and go to state 77
    '{'            shift, and go to state 100
    '!'            shift, and go to state 78
    '~'            shift, and go to state 79
    '&'            shift, and go to state 80

    compound_statement         go to state 178
    statement                  go to state 321
    labeled_statement          go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 126
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 187


State 317

   35 init_declarator: direct_declarator '[' ']' '=' '{' initializer_list ',' '}' •

    $default  reduce using rule 35 (init_declarator)


State 318

   38 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 38 (initializer_list)


State 319

   70 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 70 (selection_statement)


State 320

   73 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 73 (iteration_statement)


State 321

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 75 (iteration_statement)
