Nonterminals useless in grammar

    init_declarator_list
    struct_or_union_specifier
    struct_or_union
    struct_declaration_list
    struct_declaration
    struct_declarator_list
    struct_declarator


Terminals unused in grammar

    CHAR_LITERAL
    TYPE_NAME
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    uminu


Rules useless in grammar

  186 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  187                          | struct_or_union '{' struct_declaration_list '}'
  188                          | struct_or_union IDENTIFIER

  189 struct_or_union: STRUCT
  190                | UNION

  191 struct_declaration_list: struct_declaration
  192                        | struct_declaration_list struct_declaration

  193 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  194 struct_declarator_list: struct_declarator
  195                       | struct_declarator_list ',' struct_declarator

  196 struct_declarator: declarator
  197                  | ':' constant_expression
  198                  | declarator ':' constant_expression


State 20 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 64 conflicts: 9 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement
    7                    | declaration_specifiers declarator ';'
    8                    | enum_specifier ';'
    9                    | declarator

   10 declarator: pointer direct_declarator
   11           | direct_declarator

   12 direct_declarator: IDENTIFIER
   13                  | '(' declarator ')'
   14                  | direct_declarator '[' constant_expression ']'
   15                  | direct_declarator '[' ']'
   16                  | direct_declarator '(' parameter_list ')'
   17                  | direct_declarator '(' identifier_list ')'
   18                  | direct_declarator '(' ')'

   19 parameter_list: parameter_declaration
   20               | parameter_list ',' parameter_declaration

   21 parameter_declaration: declaration_specifiers declarator
   22                      | declaration_specifiers abstract_declarator
   23                      | declaration_specifiers

   24 constant_expression: conditional_expression

   25 declaration: declaration_specifiers ';'
   26            | declaration_specifiers init_declarator ';'

   27 declaration_specifiers: type_specifier
   28                       | type_specifier declaration_specifiers
   29                       | TYPEDEF
   30                       | TYPEDEF declaration_specifiers

   31 init_declarator: declarator
   32                | declarator '=' initializer

   33 initializer: assignment_expression
   34            | '{' initializer_list '}'
   35            | '{' initializer_list ',' '}'

   36 initializer_list: initializer
   37                 | initializer_list ',' initializer

   38 abstract_declarator: pointer
   39                    | direct_abstract_declarator
   40                    | pointer direct_abstract_declarator

   41 direct_abstract_declarator: '(' abstract_declarator ')'
   42                           | '[' ']'
   43                           | '[' constant_expression ']'
   44                           | direct_abstract_declarator '[' ']'
   45                           | direct_abstract_declarator '[' constant_expression ']'
   46                           | '(' ')'
   47                           | '(' parameter_list ')'
   48                           | direct_abstract_declarator '(' ')'
   49                           | direct_abstract_declarator '(' parameter_list ')'

   50 compound_statement: '{' '}'
   51                   | '{' declaration_list '}'
   52                   | '{' statement_list '}'
   53                   | '{' declaration_list statement_list '}'

   54 declaration_list: declaration
   55                 | declaration_list declaration

   56 statement_list: statement
   57               | statement_list statement

   58 statement: labeled_statement
   59          | expression_statement
   60          | selection_statement
   61          | iteration_statement
   62          | jump_statement
   63          | compound_statement

   64 labeled_statement: IDENTIFIER ':' statement
   65                  | CASE constant_expression ':' statement
   66                  | DEFAULT ':' statement

   67 expression_statement: ';'
   68                     | expression ';'

   69 selection_statement: IF '(' expression ')' statement
   70                    | IF '(' expression ')' statement ELSE statement
   71                    | SWITCH '(' expression ')' statement

   72 iteration_statement: WHILE '(' expression ')' statement
   73                    | DO statement WHILE '(' expression ')' ';'
   74                    | FOR '(' expression_statement expression_statement ')' statement
   75                    | FOR '(' expression_statement expression_statement expression ')' statement

   76 jump_statement: GOTO IDENTIFIER ';'
   77               | CONTINUE ';'
   78               | BREAK ';'
   79               | RETURN ';'
   80               | RETURN expression ';'

   81 primary_expression: IDENTIFIER
   82                   | INT_LITERAL
   83                   | '(' expression ')'

   84 postfix_expression: primary_expression
   85                   | postfix_expression '[' expression ']'
   86                   | postfix_expression '(' ')'
   87                   | postfix_expression '(' argument_expression_list ')'
   88                   | postfix_expression '.' IDENTIFIER
   89                   | postfix_expression POINTER_OP IDENTIFIER
   90                   | postfix_expression INCREMENT_OP
   91                   | postfix_expression DECREMENT_OP

   92 argument_expression_list: assignment_expression
   93                         | argument_expression_list ',' assignment_expression

   94 unary_expression: postfix_expression
   95                 | INCREMENT_OP unary_expression
   96                 | DECREMENT_OP unary_expression
   97                 | unary_operator cast_expression
   98                 | '-' unary_expression
   99                 | SIZEOF unary_expression
  100                 | SIZEOF '(' type_name ')'

  101 unary_operator: '&'
  102               | '*'
  103               | '+'
  104               | '-'
  105               | '~'
  106               | '!'

  107 cast_expression: unary_expression
  108                | '(' type_name ')' cast_expression

  109 multiplicative_expression: cast_expression
  110                          | multiplicative_expression '*' cast_expression
  111                          | multiplicative_expression '/' cast_expression
  112                          | multiplicative_expression '%' cast_expression

  113 additive_expression: multiplicative_expression
  114                    | additive_expression '+' multiplicative_expression
  115                    | additive_expression '-' multiplicative_expression

  116 shift_expression: additive_expression
  117                 | shift_expression LEFTSHIFT_OP additive_expression
  118                 | shift_expression RIGHTSHIFT_OP additive_expression

  119 relational_expression: shift_expression
  120                      | relational_expression '<' shift_expression
  121                      | relational_expression '>' shift_expression
  122                      | relational_expression LE_OP shift_expression
  123                      | relational_expression GE_OP shift_expression

  124 equality_expression: relational_expression
  125                    | equality_expression EQ_OP relational_expression
  126                    | equality_expression NE_OP relational_expression

  127 and_expression: equality_expression
  128               | and_expression '&' equality_expression

  129 exclusive_or_expression: and_expression
  130                        | exclusive_or_expression '^' and_expression

  131 inclusive_or_expression: exclusive_or_expression
  132                        | inclusive_or_expression '|' exclusive_or_expression

  133 logical_and_expression: inclusive_or_expression
  134                       | logical_and_expression AND_OP inclusive_or_expression

  135 logical_or_expression: logical_and_expression
  136                      | logical_or_expression OR_OP logical_and_expression

  137 conditional_expression: logical_or_expression
  138                       | logical_or_expression '?' expression ':' conditional_expression

  139 assignment_expression: conditional_expression
  140                      | unary_expression assignment_operator assignment_expression

  141 assignment_operator: '='
  142                    | MUL_ASSIGN
  143                    | DIV_ASSIGN
  144                    | MOD_ASSIGN
  145                    | ADD_ASSIGN
  146                    | SUB_ASSIGN
  147                    | LEFTSHIFT_ASSIGN
  148                    | RIGHTSHIFT_ASSIGN
  149                    | AND_ASSIGN
  150                    | XOR_ASSIGN
  151                    | OR_ASSIGN

  152 expression: assignment_expression
  153           | expression ',' assignment_expression

  154 type_specifier: VOID
  155               | CHAR
  156               | SHORT
  157               | INT
  158               | LONG
  159               | FLOAT
  160               | DOUBLE
  161               | SIGNED
  162               | UNSIGNED

  163 specifier_qualifier_list: type_specifier specifier_qualifier_list
  164                         | type_specifier
  165                         | type_qualifier specifier_qualifier_list
  166                         | type_qualifier

  167 enum_specifier: ENUM '{' enumerator_list '}'
  168               | ENUM IDENTIFIER '{' enumerator_list '}'
  169               | ENUM IDENTIFIER

  170 enumerator_list: enumerator
  171                | enumerator_list ',' enumerator

  172 enumerator: IDENTIFIER
  173           | IDENTIFIER '=' constant_expression

  174 type_qualifier: CONST
  175               | VOLATILE

  176 pointer: '*'
  177        | '*' type_qualifier_list
  178        | '*' pointer
  179        | '*' type_qualifier_list pointer

  180 type_qualifier_list: type_qualifier
  181                    | type_qualifier_list type_qualifier

  182 identifier_list: IDENTIFIER
  183                | identifier_list ',' IDENTIFIER

  184 type_name: specifier_qualifier_list
  185          | specifier_qualifier_list abstract_declarator


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 106
    '%' (37) 112
    '&' (38) 101 128
    '(' (40) 13 16 17 18 41 46 47 48 49 69 70 71 72 73 74 75 83 86 87 100 108
    ')' (41) 13 16 17 18 41 46 47 48 49 69 70 71 72 73 74 75 83 86 87 100 108
    '*' (42) 102 110 176 177 178 179
    '+' (43) 103 114
    ',' (44) 20 35 37 93 153 171 183
    '-' (45) 98 104 115
    '.' (46) 88
    '/' (47) 111
    ':' (58) 64 65 66 138
    ';' (59) 7 8 25 26 67 68 73 76 77 78 79 80
    '<' (60) 120
    '=' (61) 32 141 173
    '>' (62) 121
    '?' (63) 138
    '[' (91) 14 15 42 43 44 45 85
    ']' (93) 14 15 42 43 44 45 85
    '^' (94) 130
    '{' (123) 34 35 50 51 52 53 167 168
    '|' (124) 132
    '}' (125) 34 35 50 51 52 53 167 168
    '~' (126) 105
    error (256)
    IDENTIFIER <string> (258) 12 64 76 81 88 89 168 169 172 173 182 183
    INT_LITERAL <integer> (259) 82
    CHAR_LITERAL (260)
    SIZEOF (261) 99 100
    POINTER_OP (262) 89
    INCREMENT_OP (263) 90 95
    DECREMENT_OP (264) 91 96
    LEFTSHIFT_OP (265) 117
    RIGHTSHIFT_OP (266) 118
    LE_OP (267) 122
    GE_OP (268) 123
    EQ_OP (269) 125
    NE_OP (270) 126
    AND_OP (271) 134
    OR_OP (272) 136
    MUL_ASSIGN (273) 142
    DIV_ASSIGN (274) 143
    MOD_ASSIGN (275) 144
    ADD_ASSIGN (276) 145
    SUB_ASSIGN (277) 146
    LEFTSHIFT_ASSIGN (278) 147
    RIGHTSHIFT_ASSIGN (279) 148
    AND_ASSIGN (280) 149
    XOR_ASSIGN (281) 150
    OR_ASSIGN (282) 151
    TYPE_NAME (283)
    TYPEDEF (284) 29 30
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 155
    SHORT (290) 156
    INT (291) 157
    LONG (292) 158
    SIGNED (293) 161
    UNSIGNED (294) 162
    FLOAT (295) 159
    DOUBLE (296) 160
    CONST (297) 174
    VOLATILE (298) 175
    VOID (299) 154
    STRUCT (300)
    UNION (301)
    ENUM (302) 167 168 169
    ELLIPSIS (303)
    CASE (304) 65
    DEFAULT (305) 66
    IF (306) 69 70
    ELSE (307) 70
    SWITCH (308) 71
    WHILE (309) 72 73
    DO (310) 73
    FOR (311) 74 75
    GOTO (312) 76
    CONTINUE (313) 77
    BREAK (314) 78
    RETURN (315) 79 80
    uminu (316)
    NOELSE (317)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    ROOT (88)
        on left: 1
        on right: 0
    translation_unit <expressionList> (89)
        on left: 2 3
        on right: 1 3
    external_declaration <expr> (90)
        on left: 4 5
        on right: 2 3
    function_definition <expr> (91)
        on left: 6 7 8 9
        on right: 4
    declarator <expr> (92)
        on left: 10 11
        on right: 6 7 9 13 21 31 32
    direct_declarator <expr> (93)
        on left: 12 13 14 15 16 17 18
        on right: 10 11 14 15 16 17 18
    parameter_list <expressionList> (94)
        on left: 19 20
        on right: 16 20 47 49
    parameter_declaration <expr> (95)
        on left: 21 22 23
        on right: 19 20
    constant_expression <expr> (96)
        on left: 24
        on right: 14 43 45 65 173
    declaration <expr> (97)
        on left: 25 26
        on right: 5 54 55
    declaration_specifiers <string> (98)
        on left: 27 28 29 30
        on right: 6 7 21 22 23 25 26 28 30
    init_declarator <expr> (99)
        on left: 31 32
        on right: 26
    initializer <expr> (100)
        on left: 33 34 35
        on right: 32 36 37
    initializer_list <expressionList> (101)
        on left: 36 37
        on right: 34 35 37
    abstract_declarator <expr> (102)
        on left: 38 39 40
        on right: 22 41 185
    direct_abstract_declarator <expr> (103)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 39 40 44 45 48 49
    compound_statement <expressionList> (104)
        on left: 50 51 52 53
        on right: 6 63
    declaration_list <expressionList> (105)
        on left: 54 55
        on right: 51 53 55
    statement_list <expressionList> (106)
        on left: 56 57
        on right: 52 53 57
    statement <expr> (107)
        on left: 58 59 60 61 62 63
        on right: 56 57 64 65 66 69 70 71 72 73 74 75
    labeled_statement <expr> (108)
        on left: 64 65 66
        on right: 58
    expression_statement <expr> (109)
        on left: 67 68
        on right: 59 74 75
    selection_statement <expr> (110)
        on left: 69 70 71
        on right: 60
    iteration_statement <expr> (111)
        on left: 72 73 74 75
        on right: 61
    jump_statement <expr> (112)
        on left: 76 77 78 79 80
        on right: 62
    primary_expression <expr> (113)
        on left: 81 82 83
        on right: 84
    postfix_expression <expr> (114)
        on left: 84 85 86 87 88 89 90 91
        on right: 85 86 87 88 89 90 91 94
    argument_expression_list <expressionList> (115)
        on left: 92 93
        on right: 87 93
    unary_expression <expr> (116)
        on left: 94 95 96 97 98 99 100
        on right: 95 96 98 99 107 140
    unary_operator (117)
        on left: 101 102 103 104 105 106
        on right: 97
    cast_expression <expr> (118)
        on left: 107 108
        on right: 97 108 109 110 111 112
    multiplicative_expression <expr> (119)
        on left: 109 110 111 112
        on right: 110 111 112 113 114 115
    additive_expression <expr> (120)
        on left: 113 114 115
        on right: 114 115 116 117 118
    shift_expression <expr> (121)
        on left: 116 117 118
        on right: 117 118 119 120 121 122 123
    relational_expression <expr> (122)
        on left: 119 120 121 122 123
        on right: 120 121 122 123 124 125 126
    equality_expression <expr> (123)
        on left: 124 125 126
        on right: 125 126 127 128
    and_expression <expr> (124)
        on left: 127 128
        on right: 128 129 130
    exclusive_or_expression <expr> (125)
        on left: 129 130
        on right: 130 131 132
    inclusive_or_expression <expr> (126)
        on left: 131 132
        on right: 132 133 134
    logical_and_expression <expr> (127)
        on left: 133 134
        on right: 134 135 136
    logical_or_expression <expr> (128)
        on left: 135 136
        on right: 136 137 138
    conditional_expression <expr> (129)
        on left: 137 138
        on right: 24 138 139
    assignment_expression <expr> (130)
        on left: 139 140
        on right: 33 92 93 140 152 153
    assignment_operator <string> (131)
        on left: 141 142 143 144 145 146 147 148 149 150 151
        on right: 140
    expression <expr> (132)
        on left: 152 153
        on right: 68 69 70 71 72 73 75 80 83 85 138 153
    type_specifier <string> (133)
        on left: 154 155 156 157 158 159 160 161 162
        on right: 27 28 163 164
    specifier_qualifier_list <expressionList> (134)
        on left: 163 164 165 166
        on right: 163 165 184 185
    enum_specifier <expr> (135)
        on left: 167 168 169
        on right: 8
    enumerator_list <expressionList> (136)
        on left: 170 171
        on right: 167 168 171
    enumerator <expr> (137)
        on left: 172 173
        on right: 170 171
    type_qualifier (138)
        on left: 174 175
        on right: 165 166 180 181
    pointer <expr> (139)
        on left: 176 177 178 179
        on right: 10 38 40 178 179
    type_qualifier_list (140)
        on left: 180 181
        on right: 177 179 181
    identifier_list <expressionList> (141)
        on left: 182 183
        on right: 17 183
    type_name <expr> (142)
        on left: 184 185
        on right: 100 108


State 0

    0 $accept: • ROOT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    ROOT                    go to state 15
    translation_unit        go to state 16
    external_declaration    go to state 17
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 1

   12 direct_declarator: IDENTIFIER •

    $default  reduce using rule 12 (direct_declarator)


State 2

   29 declaration_specifiers: TYPEDEF •
   30                       | TYPEDEF • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 29 (declaration_specifiers)

    declaration_specifiers  go to state 26
    type_specifier          go to state 23


State 3

  155 type_specifier: CHAR •

    $default  reduce using rule 155 (type_specifier)


State 4

  156 type_specifier: SHORT •

    $default  reduce using rule 156 (type_specifier)


State 5

  157 type_specifier: INT •

    $default  reduce using rule 157 (type_specifier)


State 6

  158 type_specifier: LONG •

    $default  reduce using rule 158 (type_specifier)


State 7

  161 type_specifier: SIGNED •

    $default  reduce using rule 161 (type_specifier)


State 8

  162 type_specifier: UNSIGNED •

    $default  reduce using rule 162 (type_specifier)


State 9

  159 type_specifier: FLOAT •

    $default  reduce using rule 159 (type_specifier)


State 10

  160 type_specifier: DOUBLE •

    $default  reduce using rule 160 (type_specifier)


State 11

  154 type_specifier: VOID •

    $default  reduce using rule 154 (type_specifier)


State 12

  167 enum_specifier: ENUM • '{' enumerator_list '}'
  168               | ENUM • IDENTIFIER '{' enumerator_list '}'
  169               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 27
    '{'         shift, and go to state 28


State 13

  176 pointer: '*' •
  177        | '*' • type_qualifier_list
  178        | '*' • pointer
  179        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 176 (pointer)

    type_qualifier       go to state 31
    pointer              go to state 32
    type_qualifier_list  go to state 33


State 14

   13 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    declarator         go to state 34
    direct_declarator  go to state 20
    pointer            go to state 25


State 15

    0 $accept: ROOT • $end

    $end  shift, and go to state 35


State 16

    1 ROOT: translation_unit •
    3 translation_unit: translation_unit • external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ENUM        shift, and go to state 12
    '*'         shift, and go to state 13
    '('         shift, and go to state 14

    $default  reduce using rule 1 (ROOT)

    external_declaration    go to state 36
    function_definition     go to state 18
    declarator              go to state 19
    direct_declarator       go to state 20
    declaration             go to state 21
    declaration_specifiers  go to state 22
    type_specifier          go to state 23
    enum_specifier          go to state 24
    pointer                 go to state 25


State 17

    2 translation_unit: external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 18

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 19

    9 function_definition: declarator •

    $default  reduce using rule 9 (function_definition)


State 20

   11 declarator: direct_declarator •
   14 direct_declarator: direct_declarator • '[' constant_expression ']'
   15                  | direct_declarator • '[' ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 11 (declarator)]
    $default  reduce using rule 11 (declarator)


State 21

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 22

    6 function_definition: declaration_specifiers • declarator compound_statement
    7                    | declaration_specifiers • declarator ';'
   25 declaration: declaration_specifiers • ';'
   26            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 40
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 23

   27 declaration_specifiers: type_specifier •
   28                       | type_specifier • declaration_specifiers

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    $default  reduce using rule 27 (declaration_specifiers)

    declaration_specifiers  go to state 42
    type_specifier          go to state 23


State 24

    8 function_definition: enum_specifier • ';'

    ';'  shift, and go to state 43


State 25

   10 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 14

    direct_declarator  go to state 44


State 26

   30 declaration_specifiers: TYPEDEF declaration_specifiers •

    $default  reduce using rule 30 (declaration_specifiers)


State 27

  168 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
  169               | ENUM IDENTIFIER •

    '{'  shift, and go to state 45

    $default  reduce using rule 169 (enum_specifier)


State 28

  167 enum_specifier: ENUM '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 46

    enumerator_list  go to state 47
    enumerator       go to state 48


State 29

  174 type_qualifier: CONST •

    $default  reduce using rule 174 (type_qualifier)


State 30

  175 type_qualifier: VOLATILE •

    $default  reduce using rule 175 (type_qualifier)


State 31

  180 type_qualifier_list: type_qualifier •

    $default  reduce using rule 180 (type_qualifier_list)


State 32

  178 pointer: '*' pointer •

    $default  reduce using rule 178 (pointer)


State 33

  177 pointer: '*' type_qualifier_list •
  179        | '*' type_qualifier_list • pointer
  181 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    '*'       shift, and go to state 13

    $default  reduce using rule 177 (pointer)

    type_qualifier  go to state 49
    pointer         go to state 50


State 34

   13 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 51


State 35

    0 $accept: ROOT $end •

    $default  accept


State 36

    3 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 3 (translation_unit)


State 37

   16 direct_declarator: direct_declarator '(' • parameter_list ')'
   17                  | direct_declarator '(' • identifier_list ')'
   18                  | direct_declarator '(' • ')'

    IDENTIFIER  shift, and go to state 52
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    ')'         shift, and go to state 53

    parameter_list          go to state 54
    parameter_declaration   go to state 55
    declaration_specifiers  go to state 56
    type_specifier          go to state 23
    identifier_list         go to state 57


State 38

   14 direct_declarator: direct_declarator '[' • constant_expression ']'
   15                  | direct_declarator '[' • ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    ']'           shift, and go to state 67
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    constant_expression        go to state 71
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 87


State 39

   25 declaration: declaration_specifiers ';' •

    $default  reduce using rule 25 (declaration)


State 40

    6 function_definition: declaration_specifiers declarator • compound_statement
    7                    | declaration_specifiers declarator • ';'
   31 init_declarator: declarator •
   32                | declarator • '=' initializer

    ';'  shift, and go to state 88
    '='  shift, and go to state 89
    '{'  shift, and go to state 90

    ';'  [reduce using rule 31 (init_declarator)]

    compound_statement  go to state 91


State 41

   26 declaration: declaration_specifiers init_declarator • ';'

    ';'  shift, and go to state 92


State 42

   28 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 28 (declaration_specifiers)


State 43

    8 function_definition: enum_specifier ';' •

    $default  reduce using rule 8 (function_definition)


State 44

   10 declarator: pointer direct_declarator •
   14 direct_declarator: direct_declarator • '[' constant_expression ']'
   15                  | direct_declarator • '[' ']'
   16                  | direct_declarator • '(' parameter_list ')'
   17                  | direct_declarator • '(' identifier_list ')'
   18                  | direct_declarator • '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    '('       [reduce using rule 10 (declarator)]
    $default  reduce using rule 10 (declarator)


State 45

  168 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'

    IDENTIFIER  shift, and go to state 46

    enumerator_list  go to state 93
    enumerator       go to state 48


State 46

  172 enumerator: IDENTIFIER •
  173           | IDENTIFIER • '=' constant_expression

    '='  shift, and go to state 94

    $default  reduce using rule 172 (enumerator)


State 47

  167 enum_specifier: ENUM '{' enumerator_list • '}'
  171 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 95
    '}'  shift, and go to state 96


State 48

  170 enumerator_list: enumerator •

    $default  reduce using rule 170 (enumerator_list)


State 49

  181 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 181 (type_qualifier_list)


State 50

  179 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 179 (pointer)


State 51

   13 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 13 (direct_declarator)


State 52

  182 identifier_list: IDENTIFIER •

    $default  reduce using rule 182 (identifier_list)


State 53

   18 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 18 (direct_declarator)


State 54

   16 direct_declarator: direct_declarator '(' parameter_list • ')'
   20 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 97
    ','  shift, and go to state 98


State 55

   19 parameter_list: parameter_declaration •

    $default  reduce using rule 19 (parameter_list)


State 56

   21 parameter_declaration: declaration_specifiers • declarator
   22                      | declaration_specifiers • abstract_declarator
   23                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    '('         shift, and go to state 99
    '['         shift, and go to state 100

    $default  reduce using rule 23 (parameter_declaration)

    declarator                  go to state 101
    direct_declarator           go to state 20
    abstract_declarator         go to state 102
    direct_abstract_declarator  go to state 103
    pointer                     go to state 104


State 57

   17 direct_declarator: direct_declarator '(' identifier_list • ')'
  183 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 105
    ','  shift, and go to state 106


State 58

   81 primary_expression: IDENTIFIER •

    $default  reduce using rule 81 (primary_expression)


State 59

   82 primary_expression: INT_LITERAL •

    $default  reduce using rule 82 (primary_expression)


State 60

   99 unary_expression: SIZEOF • unary_expression
  100                 | SIZEOF • '(' type_name ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 107
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 108
    unary_operator      go to state 75


State 61

   95 unary_expression: INCREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 109
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 110
    unary_operator      go to state 75


State 62

   96 unary_expression: DECREMENT_OP • unary_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 109
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 111
    unary_operator      go to state 75


State 63

  103 unary_operator: '+' •

    $default  reduce using rule 103 (unary_operator)


State 64

   98 unary_expression: '-' • unary_expression
  104 unary_operator: '-' •

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '*'           shift, and go to state 65
    '('           shift, and go to state 109
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    IDENTIFIER    [reduce using rule 104 (unary_operator)]
    INT_LITERAL   [reduce using rule 104 (unary_operator)]
    SIZEOF        [reduce using rule 104 (unary_operator)]
    INCREMENT_OP  [reduce using rule 104 (unary_operator)]
    DECREMENT_OP  [reduce using rule 104 (unary_operator)]
    '('           [reduce using rule 104 (unary_operator)]
    '&'           [reduce using rule 104 (unary_operator)]
    '~'           [reduce using rule 104 (unary_operator)]
    '!'           [reduce using rule 104 (unary_operator)]
    $default      reduce using rule 104 (unary_operator)

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 112
    unary_operator      go to state 75


State 65

  102 unary_operator: '*' •

    $default  reduce using rule 102 (unary_operator)


State 66

   83 primary_expression: '(' • expression ')'
  108 cast_expression: '(' • type_name ')' cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 116
    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    type_qualifier             go to state 119
    type_name                  go to state 120


State 67

   15 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 15 (direct_declarator)


State 68

  101 unary_operator: '&' •

    $default  reduce using rule 101 (unary_operator)


State 69

  105 unary_operator: '~' •

    $default  reduce using rule 105 (unary_operator)


State 70

  106 unary_operator: '!' •

    $default  reduce using rule 106 (unary_operator)


State 71

   14 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 121


State 72

   84 postfix_expression: primary_expression •

    $default  reduce using rule 84 (postfix_expression)


State 73

   85 postfix_expression: postfix_expression • '[' expression ']'
   86                   | postfix_expression • '(' ')'
   87                   | postfix_expression • '(' argument_expression_list ')'
   88                   | postfix_expression • '.' IDENTIFIER
   89                   | postfix_expression • POINTER_OP IDENTIFIER
   90                   | postfix_expression • INCREMENT_OP
   91                   | postfix_expression • DECREMENT_OP
   94 unary_expression: postfix_expression •

    POINTER_OP    shift, and go to state 122
    INCREMENT_OP  shift, and go to state 123
    DECREMENT_OP  shift, and go to state 124
    '('           shift, and go to state 125
    '['           shift, and go to state 126
    '.'           shift, and go to state 127

    $default  reduce using rule 94 (unary_expression)


State 74

  107 cast_expression: unary_expression •

    $default  reduce using rule 107 (cast_expression)


State 75

   97 unary_expression: unary_operator • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 74
    unary_operator      go to state 75
    cast_expression     go to state 128


State 76

  109 multiplicative_expression: cast_expression •

    $default  reduce using rule 109 (multiplicative_expression)


State 77

  110 multiplicative_expression: multiplicative_expression • '*' cast_expression
  111                          | multiplicative_expression • '/' cast_expression
  112                          | multiplicative_expression • '%' cast_expression
  113 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130
    '%'  shift, and go to state 131

    $default  reduce using rule 113 (additive_expression)


State 78

  114 additive_expression: additive_expression • '+' multiplicative_expression
  115                    | additive_expression • '-' multiplicative_expression
  116 shift_expression: additive_expression •

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133

    $default  reduce using rule 116 (shift_expression)


State 79

  117 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  118                 | shift_expression • RIGHTSHIFT_OP additive_expression
  119 relational_expression: shift_expression •

    LEFTSHIFT_OP   shift, and go to state 134
    RIGHTSHIFT_OP  shift, and go to state 135

    $default  reduce using rule 119 (relational_expression)


State 80

  120 relational_expression: relational_expression • '<' shift_expression
  121                      | relational_expression • '>' shift_expression
  122                      | relational_expression • LE_OP shift_expression
  123                      | relational_expression • GE_OP shift_expression
  124 equality_expression: relational_expression •

    LE_OP  shift, and go to state 136
    GE_OP  shift, and go to state 137
    '<'    shift, and go to state 138
    '>'    shift, and go to state 139

    $default  reduce using rule 124 (equality_expression)


State 81

  125 equality_expression: equality_expression • EQ_OP relational_expression
  126                    | equality_expression • NE_OP relational_expression
  127 and_expression: equality_expression •

    EQ_OP  shift, and go to state 140
    NE_OP  shift, and go to state 141

    $default  reduce using rule 127 (and_expression)


State 82

  128 and_expression: and_expression • '&' equality_expression
  129 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 142

    $default  reduce using rule 129 (exclusive_or_expression)


State 83

  130 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  131 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 143

    $default  reduce using rule 131 (inclusive_or_expression)


State 84

  132 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  133 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 144

    $default  reduce using rule 133 (logical_and_expression)


State 85

  134 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  135 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 145

    $default  reduce using rule 135 (logical_or_expression)


State 86

  136 logical_or_expression: logical_or_expression • OR_OP logical_and_expression
  137 conditional_expression: logical_or_expression •
  138                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 146
    '?'    shift, and go to state 147

    $default  reduce using rule 137 (conditional_expression)


State 87

   24 constant_expression: conditional_expression •

    $default  reduce using rule 24 (constant_expression)


State 88

    7 function_definition: declaration_specifiers declarator ';' •

    $default  reduce using rule 7 (function_definition)


State 89

   32 init_declarator: declarator '=' • initializer

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '{'           shift, and go to state 148
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    initializer                go to state 149
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 150


State 90

   50 compound_statement: '{' • '}'
   51                   | '{' • declaration_list '}'
   52                   | '{' • statement_list '}'
   53                   | '{' • declaration_list statement_list '}'

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '}'           shift, and go to state 164
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    declaration                go to state 165
    declaration_specifiers     go to state 166
    compound_statement         go to state 167
    declaration_list           go to state 168
    statement_list             go to state 169
    statement                  go to state 170
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176
    type_specifier             go to state 23


State 91

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 92

   26 declaration: declaration_specifiers init_declarator ';' •

    $default  reduce using rule 26 (declaration)


State 93

  168 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
  171 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 95
    '}'  shift, and go to state 177


State 94

  173 enumerator: IDENTIFIER '=' • constant_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    constant_expression        go to state 178
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 87


State 95

  171 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 46

    enumerator  go to state 179


State 96

  167 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 167 (enum_specifier)


State 97

   16 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 16 (direct_declarator)


State 98

   20 parameter_list: parameter_list ',' • parameter_declaration

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11

    parameter_declaration   go to state 180
    declaration_specifiers  go to state 56
    type_specifier          go to state 23


State 99

   13 direct_declarator: '(' • declarator ')'
   41 direct_abstract_declarator: '(' • abstract_declarator ')'
   46                           | '(' • ')'
   47                           | '(' • parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CHAR        shift, and go to state 3
    SHORT       shift, and go to state 4
    INT         shift, and go to state 5
    LONG        shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    '*'         shift, and go to state 13
    '('         shift, and go to state 99
    ')'         shift, and go to state 181
    '['         shift, and go to state 100

    declarator                  go to state 34
    direct_declarator           go to state 20
    parameter_list              go to state 182
    parameter_declaration       go to state 55
    declaration_specifiers      go to state 56
    abstract_declarator         go to state 183
    direct_abstract_declarator  go to state 103
    type_specifier              go to state 23
    pointer                     go to state 104


State 100

   42 direct_abstract_declarator: '[' • ']'
   43                           | '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    ']'           shift, and go to state 184
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    constant_expression        go to state 185
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 87


State 101

   21 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 21 (parameter_declaration)


State 102

   22 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 22 (parameter_declaration)


State 103

   39 abstract_declarator: direct_abstract_declarator •
   44 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   45                           | direct_abstract_declarator • '[' constant_expression ']'
   48                           | direct_abstract_declarator • '(' ')'
   49                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 186
    '['  shift, and go to state 187

    $default  reduce using rule 39 (abstract_declarator)


State 104

   10 declarator: pointer • direct_declarator
   38 abstract_declarator: pointer •
   40                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 99
    '['         shift, and go to state 100

    $default  reduce using rule 38 (abstract_declarator)

    direct_declarator           go to state 44
    direct_abstract_declarator  go to state 188


State 105

   17 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 17 (direct_declarator)


State 106

  183 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 189


State 107

   83 primary_expression: '(' • expression ')'
  100 unary_expression: SIZEOF '(' • type_name ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    CONST         shift, and go to state 29
    VOLATILE      shift, and go to state 30
    VOID          shift, and go to state 11
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 116
    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    type_qualifier             go to state 119
    type_name                  go to state 190


State 108

   99 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 99 (unary_expression)


State 109

   83 primary_expression: '(' • expression ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 116


State 110

   95 unary_expression: INCREMENT_OP unary_expression •

    $default  reduce using rule 95 (unary_expression)


State 111

   96 unary_expression: DECREMENT_OP unary_expression •

    $default  reduce using rule 96 (unary_expression)


State 112

   98 unary_expression: '-' unary_expression •

    $default  reduce using rule 98 (unary_expression)


State 113

  107 cast_expression: unary_expression •
  140 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN         shift, and go to state 191
    DIV_ASSIGN         shift, and go to state 192
    MOD_ASSIGN         shift, and go to state 193
    ADD_ASSIGN         shift, and go to state 194
    SUB_ASSIGN         shift, and go to state 195
    LEFTSHIFT_ASSIGN   shift, and go to state 196
    RIGHTSHIFT_ASSIGN  shift, and go to state 197
    AND_ASSIGN         shift, and go to state 198
    XOR_ASSIGN         shift, and go to state 199
    OR_ASSIGN          shift, and go to state 200
    '='                shift, and go to state 201

    $default  reduce using rule 107 (cast_expression)

    assignment_operator  go to state 202


State 114

  139 assignment_expression: conditional_expression •

    $default  reduce using rule 139 (assignment_expression)


State 115

  152 expression: assignment_expression •

    $default  reduce using rule 152 (expression)


State 116

   83 primary_expression: '(' expression • ')'
  153 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 203
    ','  shift, and go to state 204


State 117

  163 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  164                         | type_specifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11

    $default  reduce using rule 164 (specifier_qualifier_list)

    type_specifier            go to state 117
    specifier_qualifier_list  go to state 205
    type_qualifier            go to state 119


State 118

  184 type_name: specifier_qualifier_list •
  185          | specifier_qualifier_list • abstract_declarator

    '*'  shift, and go to state 13
    '('  shift, and go to state 206
    '['  shift, and go to state 100

    $default  reduce using rule 184 (type_name)

    abstract_declarator         go to state 207
    direct_abstract_declarator  go to state 103
    pointer                     go to state 208


State 119

  165 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  166                         | type_qualifier •

    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    CONST     shift, and go to state 29
    VOLATILE  shift, and go to state 30
    VOID      shift, and go to state 11

    $default  reduce using rule 166 (specifier_qualifier_list)

    type_specifier            go to state 117
    specifier_qualifier_list  go to state 209
    type_qualifier            go to state 119


State 120

  108 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 210


State 121

   14 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 14 (direct_declarator)


State 122

   89 postfix_expression: postfix_expression POINTER_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 211


State 123

   90 postfix_expression: postfix_expression INCREMENT_OP •

    $default  reduce using rule 90 (postfix_expression)


State 124

   91 postfix_expression: postfix_expression DECREMENT_OP •

    $default  reduce using rule 91 (postfix_expression)


State 125

   86 postfix_expression: postfix_expression '(' • ')'
   87                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    ')'           shift, and go to state 212
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    argument_expression_list   go to state 213
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 214


State 126

   85 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 215


State 127

   88 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 128

   97 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 97 (unary_expression)


State 129

  110 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 74
    unary_operator      go to state 75
    cast_expression     go to state 217


State 130

  111 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 74
    unary_operator      go to state 75
    cast_expression     go to state 218


State 131

  112 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 74
    unary_operator      go to state 75
    cast_expression     go to state 219


State 132

  114 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 220


State 133

  115 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 221


State 134

  117 shift_expression: shift_expression LEFTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 222


State 135

  118 shift_expression: shift_expression RIGHTSHIFT_OP • additive_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 223


State 136

  122 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 224


State 137

  123 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 225


State 138

  120 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 226


State 139

  121 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 227


State 140

  125 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 228


State 141

  126 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 229


State 142

  128 and_expression: and_expression '&' • equality_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 230


State 143

  130 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 231


State 144

  132 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 232


State 145

  134 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 233


State 146

  136 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 234


State 147

  138 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 235


State 148

   34 initializer: '{' • initializer_list '}'
   35            | '{' • initializer_list ',' '}'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '{'           shift, and go to state 148
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    initializer                go to state 236
    initializer_list           go to state 237
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 150


State 149

   32 init_declarator: declarator '=' initializer •

    $default  reduce using rule 32 (init_declarator)


State 150

   33 initializer: assignment_expression •

    $default  reduce using rule 33 (initializer)


State 151

   64 labeled_statement: IDENTIFIER • ':' statement
   81 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 238

    $default  reduce using rule 81 (primary_expression)


State 152

   65 labeled_statement: CASE • constant_expression ':' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    constant_expression        go to state 239
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 87


State 153

   66 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 240


State 154

   69 selection_statement: IF • '(' expression ')' statement
   70                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 241


State 155

   71 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 242


State 156

   72 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 243


State 157

   73 iteration_statement: DO • statement WHILE '(' expression ')' ';'

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 244
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 158

   74 iteration_statement: FOR • '(' expression_statement expression_statement ')' statement
   75                    | FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 245


State 159

   76 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 246


State 160

   77 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 247


State 161

   78 jump_statement: BREAK • ';'

    ';'  shift, and go to state 248


State 162

   79 jump_statement: RETURN • ';'
   80               | RETURN • expression ';'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 249
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 250


State 163

   67 expression_statement: ';' •

    $default  reduce using rule 67 (expression_statement)


State 164

   50 compound_statement: '{' '}' •

    $default  reduce using rule 50 (compound_statement)


State 165

   54 declaration_list: declaration •

    $default  reduce using rule 54 (declaration_list)


State 166

   25 declaration: declaration_specifiers • ';'
   26            | declaration_specifiers • init_declarator ';'

    IDENTIFIER  shift, and go to state 1
    '*'         shift, and go to state 13
    ';'         shift, and go to state 39
    '('         shift, and go to state 14

    declarator         go to state 251
    direct_declarator  go to state 20
    init_declarator    go to state 41
    pointer            go to state 25


State 167

   63 statement: compound_statement •

    $default  reduce using rule 63 (statement)


State 168

   51 compound_statement: '{' declaration_list • '}'
   53                   | '{' declaration_list • statement_list '}'
   55 declaration_list: declaration_list • declaration

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    TYPEDEF       shift, and go to state 2
    CHAR          shift, and go to state 3
    SHORT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SIGNED        shift, and go to state 7
    UNSIGNED      shift, and go to state 8
    FLOAT         shift, and go to state 9
    DOUBLE        shift, and go to state 10
    VOID          shift, and go to state 11
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '}'           shift, and go to state 252
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    declaration                go to state 253
    declaration_specifiers     go to state 166
    compound_statement         go to state 167
    statement_list             go to state 254
    statement                  go to state 170
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176
    type_specifier             go to state 23


State 169

   52 compound_statement: '{' statement_list • '}'
   57 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '}'           shift, and go to state 255
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 256
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 170

   56 statement_list: statement •

    $default  reduce using rule 56 (statement_list)


State 171

   58 statement: labeled_statement •

    $default  reduce using rule 58 (statement)


State 172

   59 statement: expression_statement •

    $default  reduce using rule 59 (statement)


State 173

   60 statement: selection_statement •

    $default  reduce using rule 60 (statement)


State 174

   61 statement: iteration_statement •

    $default  reduce using rule 61 (statement)


State 175

   62 statement: jump_statement •

    $default  reduce using rule 62 (statement)


State 176

   68 expression_statement: expression • ';'
  153 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 257
    ','  shift, and go to state 204


State 177

  168 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 168 (enum_specifier)


State 178

  173 enumerator: IDENTIFIER '=' constant_expression •

    $default  reduce using rule 173 (enumerator)


State 179

  171 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 171 (enumerator_list)


State 180

   20 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 20 (parameter_list)


State 181

   46 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 182

   20 parameter_list: parameter_list • ',' parameter_declaration
   47 direct_abstract_declarator: '(' parameter_list • ')'

    ')'  shift, and go to state 258
    ','  shift, and go to state 98


State 183

   41 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 259


State 184

   42 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 185

   43 direct_abstract_declarator: '[' constant_expression • ']'

    ']'  shift, and go to state 260


State 186

   48 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
   49                           | direct_abstract_declarator '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    ')'       shift, and go to state 261

    parameter_list          go to state 262
    parameter_declaration   go to state 55
    declaration_specifiers  go to state 56
    type_specifier          go to state 23


State 187

   44 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
   45                           | direct_abstract_declarator '[' • constant_expression ']'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    ']'           shift, and go to state 263
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    constant_expression        go to state 264
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 87


State 188

   40 abstract_declarator: pointer direct_abstract_declarator •
   44 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
   45                           | direct_abstract_declarator • '[' constant_expression ']'
   48                           | direct_abstract_declarator • '(' ')'
   49                           | direct_abstract_declarator • '(' parameter_list ')'

    '('  shift, and go to state 186
    '['  shift, and go to state 187

    $default  reduce using rule 40 (abstract_declarator)


State 189

  183 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 183 (identifier_list)


State 190

  100 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 265


State 191

  142 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 142 (assignment_operator)


State 192

  143 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 143 (assignment_operator)


State 193

  144 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 144 (assignment_operator)


State 194

  145 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 145 (assignment_operator)


State 195

  146 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 146 (assignment_operator)


State 196

  147 assignment_operator: LEFTSHIFT_ASSIGN •

    $default  reduce using rule 147 (assignment_operator)


State 197

  148 assignment_operator: RIGHTSHIFT_ASSIGN •

    $default  reduce using rule 148 (assignment_operator)


State 198

  149 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 149 (assignment_operator)


State 199

  150 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 150 (assignment_operator)


State 200

  151 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 151 (assignment_operator)


State 201

  141 assignment_operator: '=' •

    $default  reduce using rule 141 (assignment_operator)


State 202

  140 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 266


State 203

   83 primary_expression: '(' expression ')' •

    $default  reduce using rule 83 (primary_expression)


State 204

  153 expression: expression ',' • assignment_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 267


State 205

  163 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 163 (specifier_qualifier_list)


State 206

   41 direct_abstract_declarator: '(' • abstract_declarator ')'
   46                           | '(' • ')'
   47                           | '(' • parameter_list ')'

    TYPEDEF   shift, and go to state 2
    CHAR      shift, and go to state 3
    SHORT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    FLOAT     shift, and go to state 9
    DOUBLE    shift, and go to state 10
    VOID      shift, and go to state 11
    '*'       shift, and go to state 13
    '('       shift, and go to state 206
    ')'       shift, and go to state 181
    '['       shift, and go to state 100

    parameter_list              go to state 182
    parameter_declaration       go to state 55
    declaration_specifiers      go to state 56
    abstract_declarator         go to state 183
    direct_abstract_declarator  go to state 103
    type_specifier              go to state 23
    pointer                     go to state 208


State 207

  185 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 185 (type_name)


State 208

   38 abstract_declarator: pointer •
   40                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 206
    '['  shift, and go to state 100

    $default  reduce using rule 38 (abstract_declarator)

    direct_abstract_declarator  go to state 188


State 209

  165 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 165 (specifier_qualifier_list)


State 210

  108 cast_expression: '(' type_name ')' • cast_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression  go to state 72
    postfix_expression  go to state 73
    unary_expression    go to state 74
    unary_operator      go to state 75
    cast_expression     go to state 268


State 211

   89 postfix_expression: postfix_expression POINTER_OP IDENTIFIER •

    $default  reduce using rule 89 (postfix_expression)


State 212

   86 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 86 (postfix_expression)


State 213

   87 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   93 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 269
    ','  shift, and go to state 270


State 214

   92 argument_expression_list: assignment_expression •

    $default  reduce using rule 92 (argument_expression_list)


State 215

   85 postfix_expression: postfix_expression '[' expression • ']'
  153 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 271
    ','  shift, and go to state 204


State 216

   88 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 88 (postfix_expression)


State 217

  110 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 110 (multiplicative_expression)


State 218

  111 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 111 (multiplicative_expression)


State 219

  112 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 112 (multiplicative_expression)


State 220

  110 multiplicative_expression: multiplicative_expression • '*' cast_expression
  111                          | multiplicative_expression • '/' cast_expression
  112                          | multiplicative_expression • '%' cast_expression
  114 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130
    '%'  shift, and go to state 131

    $default  reduce using rule 114 (additive_expression)


State 221

  110 multiplicative_expression: multiplicative_expression • '*' cast_expression
  111                          | multiplicative_expression • '/' cast_expression
  112                          | multiplicative_expression • '%' cast_expression
  115 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130
    '%'  shift, and go to state 131

    $default  reduce using rule 115 (additive_expression)


State 222

  114 additive_expression: additive_expression • '+' multiplicative_expression
  115                    | additive_expression • '-' multiplicative_expression
  117 shift_expression: shift_expression LEFTSHIFT_OP additive_expression •

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133

    $default  reduce using rule 117 (shift_expression)


State 223

  114 additive_expression: additive_expression • '+' multiplicative_expression
  115                    | additive_expression • '-' multiplicative_expression
  118 shift_expression: shift_expression RIGHTSHIFT_OP additive_expression •

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133

    $default  reduce using rule 118 (shift_expression)


State 224

  117 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  118                 | shift_expression • RIGHTSHIFT_OP additive_expression
  122 relational_expression: relational_expression LE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 134
    RIGHTSHIFT_OP  shift, and go to state 135

    $default  reduce using rule 122 (relational_expression)


State 225

  117 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  118                 | shift_expression • RIGHTSHIFT_OP additive_expression
  123 relational_expression: relational_expression GE_OP shift_expression •

    LEFTSHIFT_OP   shift, and go to state 134
    RIGHTSHIFT_OP  shift, and go to state 135

    $default  reduce using rule 123 (relational_expression)


State 226

  117 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  118                 | shift_expression • RIGHTSHIFT_OP additive_expression
  120 relational_expression: relational_expression '<' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 134
    RIGHTSHIFT_OP  shift, and go to state 135

    $default  reduce using rule 120 (relational_expression)


State 227

  117 shift_expression: shift_expression • LEFTSHIFT_OP additive_expression
  118                 | shift_expression • RIGHTSHIFT_OP additive_expression
  121 relational_expression: relational_expression '>' shift_expression •

    LEFTSHIFT_OP   shift, and go to state 134
    RIGHTSHIFT_OP  shift, and go to state 135

    $default  reduce using rule 121 (relational_expression)


State 228

  120 relational_expression: relational_expression • '<' shift_expression
  121                      | relational_expression • '>' shift_expression
  122                      | relational_expression • LE_OP shift_expression
  123                      | relational_expression • GE_OP shift_expression
  125 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 136
    GE_OP  shift, and go to state 137
    '<'    shift, and go to state 138
    '>'    shift, and go to state 139

    $default  reduce using rule 125 (equality_expression)


State 229

  120 relational_expression: relational_expression • '<' shift_expression
  121                      | relational_expression • '>' shift_expression
  122                      | relational_expression • LE_OP shift_expression
  123                      | relational_expression • GE_OP shift_expression
  126 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 136
    GE_OP  shift, and go to state 137
    '<'    shift, and go to state 138
    '>'    shift, and go to state 139

    $default  reduce using rule 126 (equality_expression)


State 230

  125 equality_expression: equality_expression • EQ_OP relational_expression
  126                    | equality_expression • NE_OP relational_expression
  128 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 140
    NE_OP  shift, and go to state 141

    $default  reduce using rule 128 (and_expression)


State 231

  128 and_expression: and_expression • '&' equality_expression
  130 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 142

    $default  reduce using rule 130 (exclusive_or_expression)


State 232

  130 exclusive_or_expression: exclusive_or_expression • '^' and_expression
  132 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 143

    $default  reduce using rule 132 (inclusive_or_expression)


State 233

  132 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
  134 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 144

    $default  reduce using rule 134 (logical_and_expression)


State 234

  134 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
  136 logical_or_expression: logical_or_expression OR_OP logical_and_expression •

    AND_OP  shift, and go to state 145

    $default  reduce using rule 136 (logical_or_expression)


State 235

  138 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
  153 expression: expression • ',' assignment_expression

    ','  shift, and go to state 204
    ':'  shift, and go to state 272


State 236

   36 initializer_list: initializer •

    $default  reduce using rule 36 (initializer_list)


State 237

   34 initializer: '{' initializer_list • '}'
   35            | '{' initializer_list • ',' '}'
   37 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 273
    '}'  shift, and go to state 274


State 238

   64 labeled_statement: IDENTIFIER ':' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 275
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 239

   65 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 276


State 240

   66 labeled_statement: DEFAULT ':' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 277
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 241

   69 selection_statement: IF '(' • expression ')' statement
   70                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 278


State 242

   71 selection_statement: SWITCH '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 279


State 243

   72 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 280


State 244

   73 iteration_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 281


State 245

   74 iteration_statement: FOR '(' • expression_statement expression_statement ')' statement
   75                    | FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    expression_statement       go to state 282
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 246

   76 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 283


State 247

   77 jump_statement: CONTINUE ';' •

    $default  reduce using rule 77 (jump_statement)


State 248

   78 jump_statement: BREAK ';' •

    $default  reduce using rule 78 (jump_statement)


State 249

   79 jump_statement: RETURN ';' •

    $default  reduce using rule 79 (jump_statement)


State 250

   80 jump_statement: RETURN expression • ';'
  153 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 284
    ','  shift, and go to state 204


State 251

   31 init_declarator: declarator •
   32                | declarator • '=' initializer

    '='  shift, and go to state 89

    $default  reduce using rule 31 (init_declarator)


State 252

   51 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 51 (compound_statement)


State 253

   55 declaration_list: declaration_list declaration •

    $default  reduce using rule 55 (declaration_list)


State 254

   53 compound_statement: '{' declaration_list statement_list • '}'
   57 statement_list: statement_list • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '}'           shift, and go to state 285
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 256
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 255

   52 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 52 (compound_statement)


State 256

   57 statement_list: statement_list statement •

    $default  reduce using rule 57 (statement_list)


State 257

   68 expression_statement: expression ';' •

    $default  reduce using rule 68 (expression_statement)


State 258

   47 direct_abstract_declarator: '(' parameter_list ')' •

    $default  reduce using rule 47 (direct_abstract_declarator)


State 259

   41 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 41 (direct_abstract_declarator)


State 260

   43 direct_abstract_declarator: '[' constant_expression ']' •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 261

   48 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 48 (direct_abstract_declarator)


State 262

   20 parameter_list: parameter_list • ',' parameter_declaration
   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list • ')'

    ')'  shift, and go to state 286
    ','  shift, and go to state 98


State 263

   44 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 264

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 287


State 265

  100 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 100 (unary_expression)


State 266

  140 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 140 (assignment_expression)


State 267

  153 expression: expression ',' assignment_expression •

    $default  reduce using rule 153 (expression)


State 268

  108 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 108 (cast_expression)


State 269

   87 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 87 (postfix_expression)


State 270

   93 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 288


State 271

   85 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 85 (postfix_expression)


State 272

  138 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 74
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 289


State 273

   35 initializer: '{' initializer_list ',' • '}'
   37 initializer_list: initializer_list ',' • initializer

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '{'           shift, and go to state 148
    '}'           shift, and go to state 290
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    initializer                go to state 291
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 150


State 274

   34 initializer: '{' initializer_list '}' •

    $default  reduce using rule 34 (initializer)


State 275

   64 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 64 (labeled_statement)


State 276

   65 labeled_statement: CASE constant_expression ':' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 292
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 277

   66 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 66 (labeled_statement)


State 278

   69 selection_statement: IF '(' expression • ')' statement
   70                    | IF '(' expression • ')' statement ELSE statement
  153 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 293
    ','  shift, and go to state 204


State 279

   71 selection_statement: SWITCH '(' expression • ')' statement
  153 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 294
    ','  shift, and go to state 204


State 280

   72 iteration_statement: WHILE '(' expression • ')' statement
  153 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 295
    ','  shift, and go to state 204


State 281

   73 iteration_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 296


State 282

   74 iteration_statement: FOR '(' expression_statement • expression_statement ')' statement
   75                    | FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    expression_statement       go to state 297
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 283

   76 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 76 (jump_statement)


State 284

   80 jump_statement: RETURN expression ';' •

    $default  reduce using rule 80 (jump_statement)


State 285

   53 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 53 (compound_statement)


State 286

   49 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' •

    $default  reduce using rule 49 (direct_abstract_declarator)


State 287

   45 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' •

    $default  reduce using rule 45 (direct_abstract_declarator)


State 288

   93 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 93 (argument_expression_list)


State 289

  138 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 138 (conditional_expression)


State 290

   35 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 35 (initializer)


State 291

   37 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 37 (initializer_list)


State 292

   65 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 65 (labeled_statement)


State 293

   69 selection_statement: IF '(' expression ')' • statement
   70                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 298
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 294

   71 selection_statement: SWITCH '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 299
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 295

   72 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 300
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 296

   73 iteration_statement: DO statement WHILE '(' • expression ')' ';'

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 301


State 297

   74 iteration_statement: FOR '(' expression_statement expression_statement • ')' statement
   75                    | FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER    shift, and go to state 58
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    '('           shift, and go to state 66
    ')'           shift, and go to state 302
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 303


State 298

   69 selection_statement: IF '(' expression ')' statement •
   70                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 304

    $default  reduce using rule 69 (selection_statement)


State 299

   71 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 71 (selection_statement)


State 300

   72 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 72 (iteration_statement)


State 301

   73 iteration_statement: DO statement WHILE '(' expression • ')' ';'
  153 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 305
    ','  shift, and go to state 204


State 302

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 306
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 303

   75 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement
  153 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 307
    ','  shift, and go to state 204


State 304

   70 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 308
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 305

   73 iteration_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 309


State 306

   74 iteration_statement: FOR '(' expression_statement expression_statement ')' statement •

    $default  reduce using rule 74 (iteration_statement)


State 307

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER    shift, and go to state 151
    INT_LITERAL   shift, and go to state 59
    SIZEOF        shift, and go to state 60
    INCREMENT_OP  shift, and go to state 61
    DECREMENT_OP  shift, and go to state 62
    CASE          shift, and go to state 152
    DEFAULT       shift, and go to state 153
    IF            shift, and go to state 154
    SWITCH        shift, and go to state 155
    WHILE         shift, and go to state 156
    DO            shift, and go to state 157
    FOR           shift, and go to state 158
    GOTO          shift, and go to state 159
    CONTINUE      shift, and go to state 160
    BREAK         shift, and go to state 161
    RETURN        shift, and go to state 162
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 65
    ';'           shift, and go to state 163
    '('           shift, and go to state 66
    '{'           shift, and go to state 90
    '&'           shift, and go to state 68
    '~'           shift, and go to state 69
    '!'           shift, and go to state 70

    compound_statement         go to state 167
    statement                  go to state 310
    labeled_statement          go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    primary_expression         go to state 72
    postfix_expression         go to state 73
    unary_expression           go to state 113
    unary_operator             go to state 75
    cast_expression            go to state 76
    multiplicative_expression  go to state 77
    additive_expression        go to state 78
    shift_expression           go to state 79
    relational_expression      go to state 80
    equality_expression        go to state 81
    and_expression             go to state 82
    exclusive_or_expression    go to state 83
    inclusive_or_expression    go to state 84
    logical_and_expression     go to state 85
    logical_or_expression      go to state 86
    conditional_expression     go to state 114
    assignment_expression      go to state 115
    expression                 go to state 176


State 308

   70 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 70 (selection_statement)


State 309

   73 iteration_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 73 (iteration_statement)


State 310

   75 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 75 (iteration_statement)
